import{a as w,t as U,c as oe,d as Z}from"../chunks/disclose-version.Dfzzplht.js";import{K as Wt,J as pn,A as Yn,h as le,O as Xe,ad as Xn,an as Wn,L as Kn,b as Jn,al as En,M as Qn,N as lr,P as We,c as Me,ah as Zn,aw as Ue,Q as vn,a as gn,R as es,H as cr,ax as ts,ay as rs,ak as ns,az as ss,d as is,a9 as as,V as os,C as qt,aA as ls,aB as cs,aC as us,af as ds,aD as fs,aE as hs,aF as ms,g as bn,as as _n,aG as ps,ar as Nn,F as Ne,j as G,w as ce,q as se,x as H,z as P,y as B,v as ie,u as Kt,t as j,av as jt,o as Ee,aH as W,aI as Es,n as yn,aJ as Rn}from"../chunks/runtime.pYtt92vo.js";import{b as vs,a as Jt,p as Ie,i as z,s as Sn,c as In}from"../chunks/props.MA-vMUh3.js";import{a as ur,o as gs}from"../chunks/index-client.BGVp1O-U.js";import{a as bs,l as Qt,d as Zt,s as fe,e as dr}from"../chunks/render.CVT43fqN.js";import{s as _e}from"../chunks/snippet.DtzI01mL.js";import{i as _s}from"../chunks/legacy.uLF22_Nc.js";import{w as fr}from"../chunks/index.CmbX1Hjd.js";const Ns=[];function wn(n,e=!1){return Ge(n,new Map,"",Ns)}function Ge(n,e,t,r,s=null){if(typeof n=="object"&&n!==null){var i=e.get(n);if(i!==void 0)return i;if(n instanceof Map)return new Map(n);if(n instanceof Set)return new Set(n);if(Wt(n)){var o=Array(n.length);e.set(n,o),s!==null&&e.set(s,o);for(var u=0;u<n.length;u+=1){var l=n[u];u in n&&(o[u]=Ge(l,e,t,r))}return o}if(pn(n)===Yn){o={},e.set(n,o),s!==null&&e.set(s,o);for(var a in n)o[a]=Ge(n[a],e,t,r);return o}if(n instanceof Date)return structuredClone(n);if(typeof n.toJSON=="function")return Ge(n.toJSON(),e,t,r,n)}if(n instanceof EventTarget)return n;try{return structuredClone(n)}catch{return n}}function Oe(n,e){return e}function ys(n,e,t,r){for(var s=[],i=e.length,o=0;o<i;o++)rs(e[o].e,s,!0);var u=i>0&&s.length===0&&t!==null;if(u){var l=t.parentNode;ns(l),l.append(t),r.clear(),ve(n,e[0].prev,e[i-1].next)}ss(s,()=>{for(var a=0;a<i;a++){var d=e[a];u||(r.delete(d.k),ve(n,d.prev,d.next)),is(d.e,!u)}})}function Le(n,e,t,r,s,i=null){var o=n,u={flags:e,items:new Map,first:null};{var l=n;o=le?Xe(Xn(l)):l.appendChild(Wn())}le&&Kn();var a=null,d=!1;Jn(()=>{var c=t(),h=Wt(c)?c:c==null?[]:En(c),m=h.length;if(d&&m===0)return;d=m===0;let f=!1;if(le){var y=o.data===Qn;y!==(m===0)&&(o=lr(),Xe(o),We(!1),f=!0)}if(le){for(var _=null,N,g=0;g<m;g++){if(Me.nodeType===8&&Me.data===Zn){o=Me,f=!0,We(!1);break}var E=h[g],I=r(E,g);N=Cn(Me,u,_,null,E,I,g,s,e),u.items.set(I,N),_=N}m>0&&Xe(lr())}if(!le){var T=as;Rs(h,u,o,s,e,(T.f&Ue)!==0,r)}i!==null&&(m===0?a?vn(a):a=gn(()=>i(o)):a!==null&&es(a,()=>{a=null})),f&&We(!0),t()}),le&&(o=Me)}function Rs(n,e,t,r,s,i,o,u){var l=n.length,a=e.items,d=e.first,c=d,h,m=null,f=[],y=[],_,N,g,E;for(E=0;E<l;E+=1){if(_=n[E],N=o(_,E),g=a.get(N),g===void 0){var I=c?c.e.nodes_start:t;m=Cn(I,e,m,m===null?e.first:m.next,_,N,E,r,s),a.set(N,m),f=[],y=[],c=m.next;continue}if(Ss(g,_,E),g.e.f&Ue&&vn(g.e),g!==c){if(h!==void 0&&h.has(g)){if(f.length<y.length){var T=y[0],A;m=T.prev;var x=f[0],M=f[f.length-1];for(A=0;A<f.length;A+=1)hr(f[A],T,t);for(A=0;A<y.length;A+=1)h.delete(y[A]);ve(e,x.prev,M.next),ve(e,m,x),ve(e,M,T),c=T,m=M,E-=1,f=[],y=[]}else h.delete(g),hr(g,c,t),ve(e,g.prev,g.next),ve(e,g,m===null?e.first:m.next),ve(e,m,g),m=g;continue}for(f=[],y=[];c!==null&&c.k!==N;)(i||!(c.e.f&Ue))&&(h??(h=new Set)).add(c),y.push(c),c=c.next;if(c===null)continue;g=c}f.push(g),m=g,c=g.next}if(c!==null||h!==void 0){for(var q=h===void 0?[]:En(h);c!==null;)(i||!(c.e.f&Ue))&&q.push(c),c=c.next;var X=q.length;if(X>0){var Q=l===0?t:null;ys(e,q,Q,a)}}cr.first=e.first&&e.first.e,cr.last=m&&m.e}function Ss(n,e,t,r){ts(n.v,e),n.i=t}function Cn(n,e,t,r,s,i,o,u,l,a){var d=(l&cs)!==0,c=(l&us)===0,h=d?c?os(s):qt(s):s,m=l&ls?qt(o):o,f={i:m,v:h,k:i,a:null,e:null,prev:t,next:r};try{return f.e=gn(()=>u(n,h,m),le),f.e.prev=t&&t.e,f.e.next=r&&r.e,t===null?e.first=f:(t.next=f,t.e.next=f.e),r!==null&&(r.prev=f,r.e.prev=f.e),f}finally{}}function hr(n,e,t){for(var r=n.next?n.next.e.nodes_start:t,s=e?e.e.nodes_start:t,i=n.e.nodes_start;i!==r;){var o=ds(i);s.before(i),i=o}}function ve(n,e,t){e===null?n.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function An(n){var e,t,r="";if(typeof n=="string"||typeof n=="number")r+=n;else if(typeof n=="object")if(Array.isArray(n)){var s=n.length;for(e=0;e<s;e++)n[e]&&(t=An(n[e]))&&(r&&(r+=" "),r+=t)}else for(t in n)n[t]&&(r&&(r+=" "),r+=t);return r}function Is(){for(var n,e,t=0,r="",s=arguments.length;t<s;t++)(n=arguments[t])&&(e=An(n))&&(r&&(r+=" "),r+=e);return r}function ws(n){return typeof n=="object"?Is(n):n??""}function $e(n){if(le){var e=!1,t=()=>{if(!e){if(e=!0,n.hasAttribute("value")){var r=n.value;be(n,"value",null),n.value=r}if(n.hasAttribute("checked")){var s=n.checked;be(n,"checked",null),n.checked=s}}};n.__on_r=t,hs(t),bs()}}function be(n,e,t,r){var s=n.__attributes??(n.__attributes={});le&&(s[e]=n.getAttribute(e),e==="src"||e==="srcset"||e==="href"&&n.nodeName==="LINK")||s[e]!==(s[e]=t)&&(e==="style"&&"__styles"in n&&(n.__styles={}),e==="loading"&&(n[ms]=t),t==null?n.removeAttribute(e):typeof t!="string"&&Cs(n).includes(e)?n[e]=t:n.setAttribute(e,t))}var mr=new Map;function Cs(n){var e=mr.get(n.nodeName);if(e)return e;mr.set(n.nodeName,e=[]);for(var t,r=n,s=Element.prototype;s!==r;){t=fs(r);for(var i in t)t[i].set&&e.push(i);r=pn(r)}return e}function Mn(n,e,t){var r=n.__className,s=As(e,t);le&&n.className===s?n.__className=s:(r!==s||le&&n.className!==s)&&(e==null&&!t?n.removeAttribute("class"):n.className=s,n.__className=s)}function As(n,e){return(n??"")+(e?" "+e:"")}function Ms(n,e,t){if(t){if(n.classList.contains(e))return;n.classList.add(e)}else{if(!n.classList.contains(e))return;n.classList.remove(e)}}function zt(n,e,t=e){var r=ps();Qt(n,"input",s=>{var i=s?n.defaultValue:n.value;if(i=Ke(n)?Je(i):i,t(i),r&&i!==(i=e())){var o=n.selectionStart,u=n.selectionEnd;n.value=i??"",u!==null&&(n.selectionStart=o,n.selectionEnd=Math.min(u,n.value.length))}}),(le&&n.defaultValue!==n.value||bn(e)==null&&n.value)&&t(Ke(n)?Je(n.value):n.value),_n(()=>{var s=e();Ke(n)&&s===Je(n.value)||n.type==="date"&&!s&&!n.value||s!==n.value&&(n.value=s??"")})}function Tn(n,e,t=e){Qt(n,"change",r=>{var s=r?n.defaultChecked:n.checked;t(s)}),(le&&n.defaultChecked!==n.checked||bn(e)==null)&&t(n.checked),_n(()=>{var r=e();n.checked=!!r})}function Ke(n){var e=n.type;return e==="number"||e==="range"}function Je(n){return n===""?null:+n}function On(n,e,t){if(n.multiple)return Os(n,e);for(var r of n.options){var s=Te(r);if(vs(s,e)){r.selected=!0;return}}(!t||e!==void 0)&&(n.selectedIndex=-1)}function Ts(n,e){Nn(()=>{var t=new MutationObserver(()=>{var r=n.__value;On(n,r)});return t.observe(n,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),()=>{t.disconnect()}})}function Ln(n,e,t=e){var r=!0;Qt(n,"change",s=>{var i=s?"[selected]":":checked",o;if(n.multiple)o=[].map.call(n.querySelectorAll(i),Te);else{var u=n.querySelector(i)??n.querySelector("option:not([disabled])");o=u&&Te(u)}t(o)}),Nn(()=>{var s=e();if(On(n,s,r),r&&s===void 0){var i=n.querySelector(":checked");i!==null&&(s=Te(i),t(s))}n.__value=s,r=!1}),Ts(n)}function Os(n,e){for(var t of n.options)t.selected=~e.indexOf(Te(t))}function Te(n){return"__value"in n?n.__value:n.value}function Ls(n){var e=qt(0);return function(){return arguments.length===1?(Ne(e,G(e)+1),arguments[0]):(G(e),n())}}function $n(n,e){var i;var t=(i=n.$$events)==null?void 0:i[e.type],r=Wt(t)?t.slice():t==null?[]:[t];for(var s of r)s.call(this,e)}var Pe={exports:{}},Qe,pr;function Ve(){if(pr)return Qe;pr=1;const n="2.0.0",e=256,t=Number.MAX_SAFE_INTEGER||9007199254740991,r=16,s=e-6;return Qe={MAX_LENGTH:e,MAX_SAFE_COMPONENT_LENGTH:r,MAX_SAFE_BUILD_LENGTH:s,MAX_SAFE_INTEGER:t,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:n,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2},Qe}var Ze,Er;function qe(){if(Er)return Ze;Er=1;var n={};return Ze=typeof process=="object"&&n&&n.NODE_DEBUG&&/\bsemver\b/i.test(n.NODE_DEBUG)?(...t)=>console.error("SEMVER",...t):()=>{},Ze}var vr;function xe(){return vr||(vr=1,function(n,e){const{MAX_SAFE_COMPONENT_LENGTH:t,MAX_SAFE_BUILD_LENGTH:r,MAX_LENGTH:s}=Ve(),i=qe();e=n.exports={};const o=e.re=[],u=e.safeRe=[],l=e.src=[],a=e.t={};let d=0;const c="[a-zA-Z0-9-]",h=[["\\s",1],["\\d",s],[c,r]],m=y=>{for(const[_,N]of h)y=y.split(`${_}*`).join(`${_}{0,${N}}`).split(`${_}+`).join(`${_}{1,${N}}`);return y},f=(y,_,N)=>{const g=m(_),E=d++;i(y,E,_),a[y]=E,l[E]=_,o[E]=new RegExp(_,N?"g":void 0),u[E]=new RegExp(g,N?"g":void 0)};f("NUMERICIDENTIFIER","0|[1-9]\\d*"),f("NUMERICIDENTIFIERLOOSE","\\d+"),f("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${c}*`),f("MAINVERSION",`(${l[a.NUMERICIDENTIFIER]})\\.(${l[a.NUMERICIDENTIFIER]})\\.(${l[a.NUMERICIDENTIFIER]})`),f("MAINVERSIONLOOSE",`(${l[a.NUMERICIDENTIFIERLOOSE]})\\.(${l[a.NUMERICIDENTIFIERLOOSE]})\\.(${l[a.NUMERICIDENTIFIERLOOSE]})`),f("PRERELEASEIDENTIFIER",`(?:${l[a.NUMERICIDENTIFIER]}|${l[a.NONNUMERICIDENTIFIER]})`),f("PRERELEASEIDENTIFIERLOOSE",`(?:${l[a.NUMERICIDENTIFIERLOOSE]}|${l[a.NONNUMERICIDENTIFIER]})`),f("PRERELEASE",`(?:-(${l[a.PRERELEASEIDENTIFIER]}(?:\\.${l[a.PRERELEASEIDENTIFIER]})*))`),f("PRERELEASELOOSE",`(?:-?(${l[a.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${l[a.PRERELEASEIDENTIFIERLOOSE]})*))`),f("BUILDIDENTIFIER",`${c}+`),f("BUILD",`(?:\\+(${l[a.BUILDIDENTIFIER]}(?:\\.${l[a.BUILDIDENTIFIER]})*))`),f("FULLPLAIN",`v?${l[a.MAINVERSION]}${l[a.PRERELEASE]}?${l[a.BUILD]}?`),f("FULL",`^${l[a.FULLPLAIN]}$`),f("LOOSEPLAIN",`[v=\\s]*${l[a.MAINVERSIONLOOSE]}${l[a.PRERELEASELOOSE]}?${l[a.BUILD]}?`),f("LOOSE",`^${l[a.LOOSEPLAIN]}$`),f("GTLT","((?:<|>)?=?)"),f("XRANGEIDENTIFIERLOOSE",`${l[a.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),f("XRANGEIDENTIFIER",`${l[a.NUMERICIDENTIFIER]}|x|X|\\*`),f("XRANGEPLAIN",`[v=\\s]*(${l[a.XRANGEIDENTIFIER]})(?:\\.(${l[a.XRANGEIDENTIFIER]})(?:\\.(${l[a.XRANGEIDENTIFIER]})(?:${l[a.PRERELEASE]})?${l[a.BUILD]}?)?)?`),f("XRANGEPLAINLOOSE",`[v=\\s]*(${l[a.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[a.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[a.XRANGEIDENTIFIERLOOSE]})(?:${l[a.PRERELEASELOOSE]})?${l[a.BUILD]}?)?)?`),f("XRANGE",`^${l[a.GTLT]}\\s*${l[a.XRANGEPLAIN]}$`),f("XRANGELOOSE",`^${l[a.GTLT]}\\s*${l[a.XRANGEPLAINLOOSE]}$`),f("COERCEPLAIN",`(^|[^\\d])(\\d{1,${t}})(?:\\.(\\d{1,${t}}))?(?:\\.(\\d{1,${t}}))?`),f("COERCE",`${l[a.COERCEPLAIN]}(?:$|[^\\d])`),f("COERCEFULL",l[a.COERCEPLAIN]+`(?:${l[a.PRERELEASE]})?(?:${l[a.BUILD]})?(?:$|[^\\d])`),f("COERCERTL",l[a.COERCE],!0),f("COERCERTLFULL",l[a.COERCEFULL],!0),f("LONETILDE","(?:~>?)"),f("TILDETRIM",`(\\s*)${l[a.LONETILDE]}\\s+`,!0),e.tildeTrimReplace="$1~",f("TILDE",`^${l[a.LONETILDE]}${l[a.XRANGEPLAIN]}$`),f("TILDELOOSE",`^${l[a.LONETILDE]}${l[a.XRANGEPLAINLOOSE]}$`),f("LONECARET","(?:\\^)"),f("CARETTRIM",`(\\s*)${l[a.LONECARET]}\\s+`,!0),e.caretTrimReplace="$1^",f("CARET",`^${l[a.LONECARET]}${l[a.XRANGEPLAIN]}$`),f("CARETLOOSE",`^${l[a.LONECARET]}${l[a.XRANGEPLAINLOOSE]}$`),f("COMPARATORLOOSE",`^${l[a.GTLT]}\\s*(${l[a.LOOSEPLAIN]})$|^$`),f("COMPARATOR",`^${l[a.GTLT]}\\s*(${l[a.FULLPLAIN]})$|^$`),f("COMPARATORTRIM",`(\\s*)${l[a.GTLT]}\\s*(${l[a.LOOSEPLAIN]}|${l[a.XRANGEPLAIN]})`,!0),e.comparatorTrimReplace="$1$2$3",f("HYPHENRANGE",`^\\s*(${l[a.XRANGEPLAIN]})\\s+-\\s+(${l[a.XRANGEPLAIN]})\\s*$`),f("HYPHENRANGELOOSE",`^\\s*(${l[a.XRANGEPLAINLOOSE]})\\s+-\\s+(${l[a.XRANGEPLAINLOOSE]})\\s*$`),f("STAR","(<|>)?=?\\s*\\*"),f("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),f("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")}(Pe,Pe.exports)),Pe.exports}var et,gr;function er(){if(gr)return et;gr=1;const n=Object.freeze({loose:!0}),e=Object.freeze({});return et=r=>r?typeof r!="object"?n:r:e,et}var tt,br;function xn(){if(br)return tt;br=1;const n=/^[0-9]+$/,e=(r,s)=>{const i=n.test(r),o=n.test(s);return i&&o&&(r=+r,s=+s),r===s?0:i&&!o?-1:o&&!i?1:r<s?-1:1};return tt={compareIdentifiers:e,rcompareIdentifiers:(r,s)=>e(s,r)},tt}var rt,_r;function ae(){if(_r)return rt;_r=1;const n=qe(),{MAX_LENGTH:e,MAX_SAFE_INTEGER:t}=Ve(),{safeRe:r,t:s}=xe(),i=er(),{compareIdentifiers:o}=xn();class u{constructor(a,d){if(d=i(d),a instanceof u){if(a.loose===!!d.loose&&a.includePrerelease===!!d.includePrerelease)return a;a=a.version}else if(typeof a!="string")throw new TypeError(`Invalid version. Must be a string. Got type "${typeof a}".`);if(a.length>e)throw new TypeError(`version is longer than ${e} characters`);n("SemVer",a,d),this.options=d,this.loose=!!d.loose,this.includePrerelease=!!d.includePrerelease;const c=a.trim().match(d.loose?r[s.LOOSE]:r[s.FULL]);if(!c)throw new TypeError(`Invalid Version: ${a}`);if(this.raw=a,this.major=+c[1],this.minor=+c[2],this.patch=+c[3],this.major>t||this.major<0)throw new TypeError("Invalid major version");if(this.minor>t||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>t||this.patch<0)throw new TypeError("Invalid patch version");c[4]?this.prerelease=c[4].split(".").map(h=>{if(/^[0-9]+$/.test(h)){const m=+h;if(m>=0&&m<t)return m}return h}):this.prerelease=[],this.build=c[5]?c[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(a){if(n("SemVer.compare",this.version,this.options,a),!(a instanceof u)){if(typeof a=="string"&&a===this.version)return 0;a=new u(a,this.options)}return a.version===this.version?0:this.compareMain(a)||this.comparePre(a)}compareMain(a){return a instanceof u||(a=new u(a,this.options)),o(this.major,a.major)||o(this.minor,a.minor)||o(this.patch,a.patch)}comparePre(a){if(a instanceof u||(a=new u(a,this.options)),this.prerelease.length&&!a.prerelease.length)return-1;if(!this.prerelease.length&&a.prerelease.length)return 1;if(!this.prerelease.length&&!a.prerelease.length)return 0;let d=0;do{const c=this.prerelease[d],h=a.prerelease[d];if(n("prerelease compare",d,c,h),c===void 0&&h===void 0)return 0;if(h===void 0)return 1;if(c===void 0)return-1;if(c===h)continue;return o(c,h)}while(++d)}compareBuild(a){a instanceof u||(a=new u(a,this.options));let d=0;do{const c=this.build[d],h=a.build[d];if(n("build compare",d,c,h),c===void 0&&h===void 0)return 0;if(h===void 0)return 1;if(c===void 0)return-1;if(c===h)continue;return o(c,h)}while(++d)}inc(a,d,c){switch(a){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",d,c);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",d,c);break;case"prepatch":this.prerelease.length=0,this.inc("patch",d,c),this.inc("pre",d,c);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",d,c),this.inc("pre",d,c);break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":{const h=Number(c)?1:0;if(!d&&c===!1)throw new Error("invalid increment argument: identifier is empty");if(this.prerelease.length===0)this.prerelease=[h];else{let m=this.prerelease.length;for(;--m>=0;)typeof this.prerelease[m]=="number"&&(this.prerelease[m]++,m=-2);if(m===-1){if(d===this.prerelease.join(".")&&c===!1)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(h)}}if(d){let m=[d,h];c===!1&&(m=[d]),o(this.prerelease[0],d)===0?isNaN(this.prerelease[1])&&(this.prerelease=m):this.prerelease=m}break}default:throw new Error(`invalid increment argument: ${a}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}return rt=u,rt}var nt,Nr;function Ce(){if(Nr)return nt;Nr=1;const n=ae();return nt=(t,r,s=!1)=>{if(t instanceof n)return t;try{return new n(t,r)}catch(i){if(!s)return null;throw i}},nt}var st,yr;function $s(){if(yr)return st;yr=1;const n=Ce();return st=(t,r)=>{const s=n(t,r);return s?s.version:null},st}var it,Rr;function xs(){if(Rr)return it;Rr=1;const n=Ce();return it=(t,r)=>{const s=n(t.trim().replace(/^[=v]+/,""),r);return s?s.version:null},it}var at,Sr;function Ds(){if(Sr)return at;Sr=1;const n=ae();return at=(t,r,s,i,o)=>{typeof s=="string"&&(o=i,i=s,s=void 0);try{return new n(t instanceof n?t.version:t,s).inc(r,i,o).version}catch{return null}},at}var ot,Ir;function Ps(){if(Ir)return ot;Ir=1;const n=Ce();return ot=(t,r)=>{const s=n(t,null,!0),i=n(r,null,!0),o=s.compare(i);if(o===0)return null;const u=o>0,l=u?s:i,a=u?i:s,d=!!l.prerelease.length;if(!!a.prerelease.length&&!d)return!a.patch&&!a.minor?"major":l.patch?"patch":l.minor?"minor":"major";const h=d?"pre":"";return s.major!==i.major?h+"major":s.minor!==i.minor?h+"minor":s.patch!==i.patch?h+"patch":"prerelease"},ot}var lt,wr;function ks(){if(wr)return lt;wr=1;const n=ae();return lt=(t,r)=>new n(t,r).major,lt}var ct,Cr;function Bs(){if(Cr)return ct;Cr=1;const n=ae();return ct=(t,r)=>new n(t,r).minor,ct}var ut,Ar;function Us(){if(Ar)return ut;Ar=1;const n=ae();return ut=(t,r)=>new n(t,r).patch,ut}var dt,Mr;function Gs(){if(Mr)return dt;Mr=1;const n=Ce();return dt=(t,r)=>{const s=n(t,r);return s&&s.prerelease.length?s.prerelease:null},dt}var ft,Tr;function me(){if(Tr)return ft;Tr=1;const n=ae();return ft=(t,r,s)=>new n(t,s).compare(new n(r,s)),ft}var ht,Or;function Fs(){if(Or)return ht;Or=1;const n=me();return ht=(t,r,s)=>n(r,t,s),ht}var mt,Lr;function Hs(){if(Lr)return mt;Lr=1;const n=me();return mt=(t,r)=>n(t,r,!0),mt}var pt,$r;function tr(){if($r)return pt;$r=1;const n=ae();return pt=(t,r,s)=>{const i=new n(t,s),o=new n(r,s);return i.compare(o)||i.compareBuild(o)},pt}var Et,xr;function Vs(){if(xr)return Et;xr=1;const n=tr();return Et=(t,r)=>t.sort((s,i)=>n(s,i,r)),Et}var vt,Dr;function qs(){if(Dr)return vt;Dr=1;const n=tr();return vt=(t,r)=>t.sort((s,i)=>n(i,s,r)),vt}var gt,Pr;function je(){if(Pr)return gt;Pr=1;const n=me();return gt=(t,r,s)=>n(t,r,s)>0,gt}var bt,kr;function rr(){if(kr)return bt;kr=1;const n=me();return bt=(t,r,s)=>n(t,r,s)<0,bt}var _t,Br;function Dn(){if(Br)return _t;Br=1;const n=me();return _t=(t,r,s)=>n(t,r,s)===0,_t}var Nt,Ur;function Pn(){if(Ur)return Nt;Ur=1;const n=me();return Nt=(t,r,s)=>n(t,r,s)!==0,Nt}var yt,Gr;function nr(){if(Gr)return yt;Gr=1;const n=me();return yt=(t,r,s)=>n(t,r,s)>=0,yt}var Rt,Fr;function sr(){if(Fr)return Rt;Fr=1;const n=me();return Rt=(t,r,s)=>n(t,r,s)<=0,Rt}var St,Hr;function kn(){if(Hr)return St;Hr=1;const n=Dn(),e=Pn(),t=je(),r=nr(),s=rr(),i=sr();return St=(u,l,a,d)=>{switch(l){case"===":return typeof u=="object"&&(u=u.version),typeof a=="object"&&(a=a.version),u===a;case"!==":return typeof u=="object"&&(u=u.version),typeof a=="object"&&(a=a.version),u!==a;case"":case"=":case"==":return n(u,a,d);case"!=":return e(u,a,d);case">":return t(u,a,d);case">=":return r(u,a,d);case"<":return s(u,a,d);case"<=":return i(u,a,d);default:throw new TypeError(`Invalid operator: ${l}`)}},St}var It,Vr;function js(){if(Vr)return It;Vr=1;const n=ae(),e=Ce(),{safeRe:t,t:r}=xe();return It=(i,o)=>{if(i instanceof n)return i;if(typeof i=="number"&&(i=String(i)),typeof i!="string")return null;o=o||{};let u=null;if(!o.rtl)u=i.match(o.includePrerelease?t[r.COERCEFULL]:t[r.COERCE]);else{const m=o.includePrerelease?t[r.COERCERTLFULL]:t[r.COERCERTL];let f;for(;(f=m.exec(i))&&(!u||u.index+u[0].length!==i.length);)(!u||f.index+f[0].length!==u.index+u[0].length)&&(u=f),m.lastIndex=f.index+f[1].length+f[2].length;m.lastIndex=-1}if(u===null)return null;const l=u[2],a=u[3]||"0",d=u[4]||"0",c=o.includePrerelease&&u[5]?`-${u[5]}`:"",h=o.includePrerelease&&u[6]?`+${u[6]}`:"";return e(`${l}.${a}.${d}${c}${h}`,o)},It}var wt,qr;function zs(){if(qr)return wt;qr=1;class n{constructor(){this.max=1e3,this.map=new Map}get(t){const r=this.map.get(t);if(r!==void 0)return this.map.delete(t),this.map.set(t,r),r}delete(t){return this.map.delete(t)}set(t,r){if(!this.delete(t)&&r!==void 0){if(this.map.size>=this.max){const i=this.map.keys().next().value;this.delete(i)}this.map.set(t,r)}return this}}return wt=n,wt}var Ct,jr;function pe(){if(jr)return Ct;jr=1;const n=/\s+/g;class e{constructor(v,L){if(L=s(L),v instanceof e)return v.loose===!!L.loose&&v.includePrerelease===!!L.includePrerelease?v:new e(v.raw,L);if(v instanceof i)return this.raw=v.value,this.set=[[v]],this.formatted=void 0,this;if(this.options=L,this.loose=!!L.loose,this.includePrerelease=!!L.includePrerelease,this.raw=v.trim().replace(n," "),this.set=this.raw.split("||").map(O=>this.parseRange(O.trim())).filter(O=>O.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const O=this.set[0];if(this.set=this.set.filter(D=>!y(D[0])),this.set.length===0)this.set=[O];else if(this.set.length>1){for(const D of this.set)if(D.length===1&&_(D[0])){this.set=[D];break}}}this.formatted=void 0}get range(){if(this.formatted===void 0){this.formatted="";for(let v=0;v<this.set.length;v++){v>0&&(this.formatted+="||");const L=this.set[v];for(let O=0;O<L.length;O++)O>0&&(this.formatted+=" "),this.formatted+=L[O].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(v){const O=((this.options.includePrerelease&&m)|(this.options.loose&&f))+":"+v,D=r.get(O);if(D)return D;const $=this.options.loose,k=$?l[a.HYPHENRANGELOOSE]:l[a.HYPHENRANGE];v=v.replace(k,te(this.options.includePrerelease)),o("hyphen replace",v),v=v.replace(l[a.COMPARATORTRIM],d),o("comparator trim",v),v=v.replace(l[a.TILDETRIM],c),o("tilde trim",v),v=v.replace(l[a.CARETTRIM],h),o("caret trim",v);let Y=v.split(" ").map(ee=>g(ee,this.options)).join(" ").split(/\s+/).map(ee=>Q(ee,this.options));$&&(Y=Y.filter(ee=>(o("loose invalid filter",ee,this.options),!!ee.match(l[a.COMPARATORLOOSE])))),o("range list",Y);const V=new Map,J=Y.map(ee=>new i(ee,this.options));for(const ee of J){if(y(ee))return[ee];V.set(ee.value,ee)}V.size>1&&V.has("")&&V.delete("");const re=[...V.values()];return r.set(O,re),re}intersects(v,L){if(!(v instanceof e))throw new TypeError("a Range is required");return this.set.some(O=>N(O,L)&&v.set.some(D=>N(D,L)&&O.every($=>D.every(k=>$.intersects(k,L)))))}test(v){if(!v)return!1;if(typeof v=="string")try{v=new u(v,this.options)}catch{return!1}for(let L=0;L<this.set.length;L++)if(K(this.set[L],v,this.options))return!0;return!1}}Ct=e;const t=zs(),r=new t,s=er(),i=ze(),o=qe(),u=ae(),{safeRe:l,t:a,comparatorTrimReplace:d,tildeTrimReplace:c,caretTrimReplace:h}=xe(),{FLAG_INCLUDE_PRERELEASE:m,FLAG_LOOSE:f}=Ve(),y=C=>C.value==="<0.0.0-0",_=C=>C.value==="",N=(C,v)=>{let L=!0;const O=C.slice();let D=O.pop();for(;L&&O.length;)L=O.every($=>D.intersects($,v)),D=O.pop();return L},g=(C,v)=>(o("comp",C,v),C=A(C,v),o("caret",C),C=I(C,v),o("tildes",C),C=M(C,v),o("xrange",C),C=X(C,v),o("stars",C),C),E=C=>!C||C.toLowerCase()==="x"||C==="*",I=(C,v)=>C.trim().split(/\s+/).map(L=>T(L,v)).join(" "),T=(C,v)=>{const L=v.loose?l[a.TILDELOOSE]:l[a.TILDE];return C.replace(L,(O,D,$,k,Y)=>{o("tilde",C,O,D,$,k,Y);let V;return E(D)?V="":E($)?V=`>=${D}.0.0 <${+D+1}.0.0-0`:E(k)?V=`>=${D}.${$}.0 <${D}.${+$+1}.0-0`:Y?(o("replaceTilde pr",Y),V=`>=${D}.${$}.${k}-${Y} <${D}.${+$+1}.0-0`):V=`>=${D}.${$}.${k} <${D}.${+$+1}.0-0`,o("tilde return",V),V})},A=(C,v)=>C.trim().split(/\s+/).map(L=>x(L,v)).join(" "),x=(C,v)=>{o("caret",C,v);const L=v.loose?l[a.CARETLOOSE]:l[a.CARET],O=v.includePrerelease?"-0":"";return C.replace(L,(D,$,k,Y,V)=>{o("caret",C,D,$,k,Y,V);let J;return E($)?J="":E(k)?J=`>=${$}.0.0${O} <${+$+1}.0.0-0`:E(Y)?$==="0"?J=`>=${$}.${k}.0${O} <${$}.${+k+1}.0-0`:J=`>=${$}.${k}.0${O} <${+$+1}.0.0-0`:V?(o("replaceCaret pr",V),$==="0"?k==="0"?J=`>=${$}.${k}.${Y}-${V} <${$}.${k}.${+Y+1}-0`:J=`>=${$}.${k}.${Y}-${V} <${$}.${+k+1}.0-0`:J=`>=${$}.${k}.${Y}-${V} <${+$+1}.0.0-0`):(o("no pr"),$==="0"?k==="0"?J=`>=${$}.${k}.${Y}${O} <${$}.${k}.${+Y+1}-0`:J=`>=${$}.${k}.${Y}${O} <${$}.${+k+1}.0-0`:J=`>=${$}.${k}.${Y} <${+$+1}.0.0-0`),o("caret return",J),J})},M=(C,v)=>(o("replaceXRanges",C,v),C.split(/\s+/).map(L=>q(L,v)).join(" ")),q=(C,v)=>{C=C.trim();const L=v.loose?l[a.XRANGELOOSE]:l[a.XRANGE];return C.replace(L,(O,D,$,k,Y,V)=>{o("xRange",C,O,D,$,k,Y,V);const J=E($),re=J||E(k),ee=re||E(Y),Ae=ee;return D==="="&&Ae&&(D=""),V=v.includePrerelease?"-0":"",J?D===">"||D==="<"?O="<0.0.0-0":O="*":D&&Ae?(re&&(k=0),Y=0,D===">"?(D=">=",re?($=+$+1,k=0,Y=0):(k=+k+1,Y=0)):D==="<="&&(D="<",re?$=+$+1:k=+k+1),D==="<"&&(V="-0"),O=`${D+$}.${k}.${Y}${V}`):re?O=`>=${$}.0.0${V} <${+$+1}.0.0-0`:ee&&(O=`>=${$}.${k}.0${V} <${$}.${+k+1}.0-0`),o("xRange return",O),O})},X=(C,v)=>(o("replaceStars",C,v),C.trim().replace(l[a.STAR],"")),Q=(C,v)=>(o("replaceGTE0",C,v),C.trim().replace(l[v.includePrerelease?a.GTE0PRE:a.GTE0],"")),te=C=>(v,L,O,D,$,k,Y,V,J,re,ee,Ae)=>(E(O)?L="":E(D)?L=`>=${O}.0.0${C?"-0":""}`:E($)?L=`>=${O}.${D}.0${C?"-0":""}`:k?L=`>=${L}`:L=`>=${L}${C?"-0":""}`,E(J)?V="":E(re)?V=`<${+J+1}.0.0-0`:E(ee)?V=`<${J}.${+re+1}.0-0`:Ae?V=`<=${J}.${re}.${ee}-${Ae}`:C?V=`<${J}.${re}.${+ee+1}-0`:V=`<=${V}`,`${L} ${V}`.trim()),K=(C,v,L)=>{for(let O=0;O<C.length;O++)if(!C[O].test(v))return!1;if(v.prerelease.length&&!L.includePrerelease){for(let O=0;O<C.length;O++)if(o(C[O].semver),C[O].semver!==i.ANY&&C[O].semver.prerelease.length>0){const D=C[O].semver;if(D.major===v.major&&D.minor===v.minor&&D.patch===v.patch)return!0}return!1}return!0};return Ct}var At,zr;function ze(){if(zr)return At;zr=1;const n=Symbol("SemVer ANY");class e{static get ANY(){return n}constructor(d,c){if(c=t(c),d instanceof e){if(d.loose===!!c.loose)return d;d=d.value}d=d.trim().split(/\s+/).join(" "),o("comparator",d,c),this.options=c,this.loose=!!c.loose,this.parse(d),this.semver===n?this.value="":this.value=this.operator+this.semver.version,o("comp",this)}parse(d){const c=this.options.loose?r[s.COMPARATORLOOSE]:r[s.COMPARATOR],h=d.match(c);if(!h)throw new TypeError(`Invalid comparator: ${d}`);this.operator=h[1]!==void 0?h[1]:"",this.operator==="="&&(this.operator=""),h[2]?this.semver=new u(h[2],this.options.loose):this.semver=n}toString(){return this.value}test(d){if(o("Comparator.test",d,this.options.loose),this.semver===n||d===n)return!0;if(typeof d=="string")try{d=new u(d,this.options)}catch{return!1}return i(d,this.operator,this.semver,this.options)}intersects(d,c){if(!(d instanceof e))throw new TypeError("a Comparator is required");return this.operator===""?this.value===""?!0:new l(d.value,c).test(this.value):d.operator===""?d.value===""?!0:new l(this.value,c).test(d.semver):(c=t(c),c.includePrerelease&&(this.value==="<0.0.0-0"||d.value==="<0.0.0-0")||!c.includePrerelease&&(this.value.startsWith("<0.0.0")||d.value.startsWith("<0.0.0"))?!1:!!(this.operator.startsWith(">")&&d.operator.startsWith(">")||this.operator.startsWith("<")&&d.operator.startsWith("<")||this.semver.version===d.semver.version&&this.operator.includes("=")&&d.operator.includes("=")||i(this.semver,"<",d.semver,c)&&this.operator.startsWith(">")&&d.operator.startsWith("<")||i(this.semver,">",d.semver,c)&&this.operator.startsWith("<")&&d.operator.startsWith(">")))}}At=e;const t=er(),{safeRe:r,t:s}=xe(),i=kn(),o=qe(),u=ae(),l=pe();return At}var Mt,Yr;function Ye(){if(Yr)return Mt;Yr=1;const n=pe();return Mt=(t,r,s)=>{try{r=new n(r,s)}catch{return!1}return r.test(t)},Mt}var Tt,Xr;function Ys(){if(Xr)return Tt;Xr=1;const n=pe();return Tt=(t,r)=>new n(t,r).set.map(s=>s.map(i=>i.value).join(" ").trim().split(" ")),Tt}var Ot,Wr;function Xs(){if(Wr)return Ot;Wr=1;const n=ae(),e=pe();return Ot=(r,s,i)=>{let o=null,u=null,l=null;try{l=new e(s,i)}catch{return null}return r.forEach(a=>{l.test(a)&&(!o||u.compare(a)===-1)&&(o=a,u=new n(o,i))}),o},Ot}var Lt,Kr;function Ws(){if(Kr)return Lt;Kr=1;const n=ae(),e=pe();return Lt=(r,s,i)=>{let o=null,u=null,l=null;try{l=new e(s,i)}catch{return null}return r.forEach(a=>{l.test(a)&&(!o||u.compare(a)===1)&&(o=a,u=new n(o,i))}),o},Lt}var $t,Jr;function Ks(){if(Jr)return $t;Jr=1;const n=ae(),e=pe(),t=je();return $t=(s,i)=>{s=new e(s,i);let o=new n("0.0.0");if(s.test(o)||(o=new n("0.0.0-0"),s.test(o)))return o;o=null;for(let u=0;u<s.set.length;++u){const l=s.set[u];let a=null;l.forEach(d=>{const c=new n(d.semver.version);switch(d.operator){case">":c.prerelease.length===0?c.patch++:c.prerelease.push(0),c.raw=c.format();case"":case">=":(!a||t(c,a))&&(a=c);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${d.operator}`)}}),a&&(!o||t(o,a))&&(o=a)}return o&&s.test(o)?o:null},$t}var xt,Qr;function Js(){if(Qr)return xt;Qr=1;const n=pe();return xt=(t,r)=>{try{return new n(t,r).range||"*"}catch{return null}},xt}var Dt,Zr;function ir(){if(Zr)return Dt;Zr=1;const n=ae(),e=ze(),{ANY:t}=e,r=pe(),s=Ye(),i=je(),o=rr(),u=sr(),l=nr();return Dt=(d,c,h,m)=>{d=new n(d,m),c=new r(c,m);let f,y,_,N,g;switch(h){case">":f=i,y=u,_=o,N=">",g=">=";break;case"<":f=o,y=l,_=i,N="<",g="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(s(d,c,m))return!1;for(let E=0;E<c.set.length;++E){const I=c.set[E];let T=null,A=null;if(I.forEach(x=>{x.semver===t&&(x=new e(">=0.0.0")),T=T||x,A=A||x,f(x.semver,T.semver,m)?T=x:_(x.semver,A.semver,m)&&(A=x)}),T.operator===N||T.operator===g||(!A.operator||A.operator===N)&&y(d,A.semver))return!1;if(A.operator===g&&_(d,A.semver))return!1}return!0},Dt}var Pt,en;function Qs(){if(en)return Pt;en=1;const n=ir();return Pt=(t,r,s)=>n(t,r,">",s),Pt}var kt,tn;function Zs(){if(tn)return kt;tn=1;const n=ir();return kt=(t,r,s)=>n(t,r,"<",s),kt}var Bt,rn;function ei(){if(rn)return Bt;rn=1;const n=pe();return Bt=(t,r,s)=>(t=new n(t,s),r=new n(r,s),t.intersects(r,s)),Bt}var Ut,nn;function ti(){if(nn)return Ut;nn=1;const n=Ye(),e=me();return Ut=(t,r,s)=>{const i=[];let o=null,u=null;const l=t.sort((h,m)=>e(h,m,s));for(const h of l)n(h,r,s)?(u=h,o||(o=h)):(u&&i.push([o,u]),u=null,o=null);o&&i.push([o,null]);const a=[];for(const[h,m]of i)h===m?a.push(h):!m&&h===l[0]?a.push("*"):m?h===l[0]?a.push(`<=${m}`):a.push(`${h} - ${m}`):a.push(`>=${h}`);const d=a.join(" || "),c=typeof r.raw=="string"?r.raw:String(r);return d.length<c.length?d:r},Ut}var Gt,sn;function ri(){if(sn)return Gt;sn=1;const n=pe(),e=ze(),{ANY:t}=e,r=Ye(),s=me(),i=(c,h,m={})=>{if(c===h)return!0;c=new n(c,m),h=new n(h,m);let f=!1;e:for(const y of c.set){for(const _ of h.set){const N=l(y,_,m);if(f=f||N!==null,N)continue e}if(f)return!1}return!0},o=[new e(">=0.0.0-0")],u=[new e(">=0.0.0")],l=(c,h,m)=>{if(c===h)return!0;if(c.length===1&&c[0].semver===t){if(h.length===1&&h[0].semver===t)return!0;m.includePrerelease?c=o:c=u}if(h.length===1&&h[0].semver===t){if(m.includePrerelease)return!0;h=u}const f=new Set;let y,_;for(const M of c)M.operator===">"||M.operator===">="?y=a(y,M,m):M.operator==="<"||M.operator==="<="?_=d(_,M,m):f.add(M.semver);if(f.size>1)return null;let N;if(y&&_){if(N=s(y.semver,_.semver,m),N>0)return null;if(N===0&&(y.operator!==">="||_.operator!=="<="))return null}for(const M of f){if(y&&!r(M,String(y),m)||_&&!r(M,String(_),m))return null;for(const q of h)if(!r(M,String(q),m))return!1;return!0}let g,E,I,T,A=_&&!m.includePrerelease&&_.semver.prerelease.length?_.semver:!1,x=y&&!m.includePrerelease&&y.semver.prerelease.length?y.semver:!1;A&&A.prerelease.length===1&&_.operator==="<"&&A.prerelease[0]===0&&(A=!1);for(const M of h){if(T=T||M.operator===">"||M.operator===">=",I=I||M.operator==="<"||M.operator==="<=",y){if(x&&M.semver.prerelease&&M.semver.prerelease.length&&M.semver.major===x.major&&M.semver.minor===x.minor&&M.semver.patch===x.patch&&(x=!1),M.operator===">"||M.operator===">="){if(g=a(y,M,m),g===M&&g!==y)return!1}else if(y.operator===">="&&!r(y.semver,String(M),m))return!1}if(_){if(A&&M.semver.prerelease&&M.semver.prerelease.length&&M.semver.major===A.major&&M.semver.minor===A.minor&&M.semver.patch===A.patch&&(A=!1),M.operator==="<"||M.operator==="<="){if(E=d(_,M,m),E===M&&E!==_)return!1}else if(_.operator==="<="&&!r(_.semver,String(M),m))return!1}if(!M.operator&&(_||y)&&N!==0)return!1}return!(y&&I&&!_&&N!==0||_&&T&&!y&&N!==0||x||A)},a=(c,h,m)=>{if(!c)return h;const f=s(c.semver,h.semver,m);return f>0?c:f<0||h.operator===">"&&c.operator===">="?h:c},d=(c,h,m)=>{if(!c)return h;const f=s(c.semver,h.semver,m);return f<0?c:f>0||h.operator==="<"&&c.operator==="<="?h:c};return Gt=i,Gt}var Ft,an;function ni(){if(an)return Ft;an=1;const n=xe(),e=Ve(),t=ae(),r=xn(),s=Ce(),i=$s(),o=xs(),u=Ds(),l=Ps(),a=ks(),d=Bs(),c=Us(),h=Gs(),m=me(),f=Fs(),y=Hs(),_=tr(),N=Vs(),g=qs(),E=je(),I=rr(),T=Dn(),A=Pn(),x=nr(),M=sr(),q=kn(),X=js(),Q=ze(),te=pe(),K=Ye(),C=Ys(),v=Xs(),L=Ws(),O=Ks(),D=Js(),$=ir(),k=Qs(),Y=Zs(),V=ei(),J=ti(),re=ri();return Ft={parse:s,valid:i,clean:o,inc:u,diff:l,major:a,minor:d,patch:c,prerelease:h,compare:m,rcompare:f,compareLoose:y,compareBuild:_,sort:N,rsort:g,gt:E,lt:I,eq:T,neq:A,gte:x,lte:M,cmp:q,coerce:X,Comparator:Q,Range:te,satisfies:K,toComparators:C,maxSatisfying:v,minSatisfying:L,minVersion:O,validRange:D,outside:$,gtr:k,ltr:Y,intersects:V,simplifyRange:J,subset:re,SemVer:t,re:n.re,src:n.src,tokens:n.t,SEMVER_SPEC_VERSION:e.SEMVER_SPEC_VERSION,RELEASE_TYPES:e.RELEASE_TYPES,compareIdentifiers:r.compareIdentifiers,rcompareIdentifiers:r.rcompareIdentifiers},Ft}var we=ni();class he{constructor(e=!1){this.eventMap={},this.eventsSuspended=e==!0}addListener(e,t,r={}){if(typeof e=="string"&&e.length<1||e instanceof String&&e.length<1||typeof e!="string"&&!(e instanceof String)&&e!==he.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(typeof t!="function")throw new TypeError("The callback must be a function.");const s=new on(e,this,t,r);return this.eventMap[e]||(this.eventMap[e]=[]),r.prepend?this.eventMap[e].unshift(s):this.eventMap[e].push(s),s}addOneTimeListener(e,t,r={}){r.remaining=1,this.addListener(e,t,r)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(e,t){return e===void 0?this.eventMap[he.ANY_EVENT]&&this.eventMap[he.ANY_EVENT].length>0?!0:Object.entries(this.eventMap).some(([,r])=>r.length>0):this.eventMap[e]&&this.eventMap[e].length>0?t instanceof on?this.eventMap[e].filter(s=>s===t).length>0:typeof t=="function"?this.eventMap[e].filter(s=>s.callback===t).length>0:t==null:!1}get eventNames(){return Object.keys(this.eventMap)}getListeners(e){return this.eventMap[e]||[]}suspendEvent(e){this.getListeners(e).forEach(t=>{t.suspended=!0})}unsuspendEvent(e){this.getListeners(e).forEach(t=>{t.suspended=!1})}getListenerCount(e){return this.getListeners(e).length}emit(e,...t){if(typeof e!="string"&&!(e instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.eventsSuspended)return;let r=[],s=this.eventMap[he.ANY_EVENT]||[];return this.eventMap[e]&&(s=s.concat(this.eventMap[e])),s.forEach(i=>{if(i.suspended)return;let o=[...t];Array.isArray(i.arguments)&&(o=o.concat(i.arguments)),i.remaining>0&&(r.push(i.callback.apply(i.context,o)),i.count++),--i.remaining<1&&i.remove()}),r}removeListener(e,t,r={}){if(e===void 0){this.eventMap={};return}else if(!this.eventMap[e])return;let s=this.eventMap[e].filter(i=>t&&i.callback!==t||r.remaining&&r.remaining!==i.remaining||r.context&&r.context!==i.context);s.length?this.eventMap[e]=s:delete this.eventMap[e]}async waitFor(e,t={}){return t.duration=parseInt(t.duration),(isNaN(t.duration)||t.duration<=0)&&(t.duration=1/0),new Promise((r,s)=>{let i,o=this.addListener(e,()=>{clearTimeout(i),r()},{remaining:1});t.duration!==1/0&&(i=setTimeout(()=>{o.remove(),s("The duration expired before the event was emitted.")},t.duration))})}get eventCount(){return Object.keys(this.eventMap).length}}class on{constructor(e,t,r,s={}){if(typeof e!="string"&&!(e instanceof String)&&e!==he.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!t)throw new ReferenceError("The 'target' parameter is mandatory.");if(typeof r!="function")throw new TypeError("The 'callback' must be a function.");s.arguments!==void 0&&!Array.isArray(s.arguments)&&(s.arguments=[s.arguments]),s=Object.assign({context:t,remaining:1/0,arguments:void 0,duration:1/0},s),s.duration!==1/0&&setTimeout(()=>this.remove(),s.duration),this.arguments=s.arguments,this.callback=r,this.context=s.context,this.count=0,this.event=e,this.remaining=parseInt(s.remaining)>=1?parseInt(s.remaining):1/0,this.suspended=!1,this.target=t}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}/**
 * The `Enumerations` class contains enumerations and arrays of elements used throughout the
 * library. All its properties are static and should be referenced using the class name. For
 * example: `Enumerations.CHANNEL_MESSAGES`.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class p{static get MIDI_CHANNEL_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MESSAGES enum instead."),p.CHANNEL_MESSAGES}static get CHANNEL_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,programchange:12,channelaftertouch:13,pitchbend:14}}static get CHANNEL_NUMBERS(){return[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get MIDI_CHANNEL_NUMBERS(){return this.validation&&console.warn("The MIDI_CHANNEL_NUMBERS array has been deprecated. Use the Enumerations.CHANNEL_NUMBERS array instead."),[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MODE_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MODE_MESSAGES enum instead."),p.CHANNEL_MODE_MESSAGES}static get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn("The MIDI_CONTROL_CHANGE_MESSAGES enum has been deprecated. Use the Enumerations.CONTROL_CHANGE_MESSAGES array instead."),{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,controller3:3,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,controller9:9,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,controller14:14,controller15:15,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,controller20:20,controller21:21,controller22:22,controller23:23,controller24:24,controller25:25,controller26:26,controller27:27,controller28:28,controller29:29,controller30:30,controller31:31,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,controller35:35,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,controller41:41,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,controller46:46,controller47:47,controller48:48,controller49:49,controller50:50,controller51:51,controller52:52,controller53:53,controller54:54,controller55:55,controller56:56,controller57:57,controller58:58,controller59:59,controller60:60,controller61:61,controller62:62,controller63:63,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,controller84:84,controller85:85,controller86:86,controller87:87,controller88:88,controller89:89,controller90:90,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101,controller102:102,controller103:103,controller104:104,controller105:105,controller106:106,controller107:107,controller108:108,controller109:109,controller110:110,controller111:111,controller112:112,controller113:113,controller114:114,controller115:115,controller116:116,controller117:117,controller118:118,controller119:119,allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get CONTROL_CHANGE_MESSAGES(){return[{number:0,name:"bankselectcoarse",description:"Bank Select (Coarse)",position:"msb"},{number:1,name:"modulationwheelcoarse",description:"Modulation Wheel (Coarse)",position:"msb"},{number:2,name:"breathcontrollercoarse",description:"Breath Controller (Coarse)",position:"msb"},{number:3,name:"controller3",description:"Undefined",position:"msb"},{number:4,name:"footcontrollercoarse",description:"Foot Controller (Coarse)",position:"msb"},{number:5,name:"portamentotimecoarse",description:"Portamento Time (Coarse)",position:"msb"},{number:6,name:"dataentrycoarse",description:"Data Entry (Coarse)",position:"msb"},{number:7,name:"volumecoarse",description:"Channel Volume (Coarse)",position:"msb"},{number:8,name:"balancecoarse",description:"Balance (Coarse)",position:"msb"},{number:9,name:"controller9",description:"Controller 9 (Coarse)",position:"msb"},{number:10,name:"pancoarse",description:"Pan (Coarse)",position:"msb"},{number:11,name:"expressioncoarse",description:"Expression Controller (Coarse)",position:"msb"},{number:12,name:"effectcontrol1coarse",description:"Effect Control 1 (Coarse)",position:"msb"},{number:13,name:"effectcontrol2coarse",description:"Effect Control 2 (Coarse)",position:"msb"},{number:14,name:"controller14",description:"Undefined",position:"msb"},{number:15,name:"controller15",description:"Undefined",position:"msb"},{number:16,name:"generalpurposecontroller1",description:"General Purpose Controller 1 (Coarse)",position:"msb"},{number:17,name:"generalpurposecontroller2",description:"General Purpose Controller 2 (Coarse)",position:"msb"},{number:18,name:"generalpurposecontroller3",description:"General Purpose Controller 3 (Coarse)",position:"msb"},{number:19,name:"generalpurposecontroller4",description:"General Purpose Controller 4 (Coarse)",position:"msb"},{number:20,name:"controller20",description:"Undefined",position:"msb"},{number:21,name:"controller21",description:"Undefined",position:"msb"},{number:22,name:"controller22",description:"Undefined",position:"msb"},{number:23,name:"controller23",description:"Undefined",position:"msb"},{number:24,name:"controller24",description:"Undefined",position:"msb"},{number:25,name:"controller25",description:"Undefined",position:"msb"},{number:26,name:"controller26",description:"Undefined",position:"msb"},{number:27,name:"controller27",description:"Undefined",position:"msb"},{number:28,name:"controller28",description:"Undefined",position:"msb"},{number:29,name:"controller29",description:"Undefined",position:"msb"},{number:30,name:"controller30",description:"Undefined",position:"msb"},{number:31,name:"controller31",description:"Undefined",position:"msb"},{number:32,name:"bankselectfine",description:"Bank Select (Fine)",position:"lsb"},{number:33,name:"modulationwheelfine",description:"Modulation Wheel (Fine)",position:"lsb"},{number:34,name:"breathcontrollerfine",description:"Breath Controller (Fine)",position:"lsb"},{number:35,name:"controller35",description:"Undefined",position:"lsb"},{number:36,name:"footcontrollerfine",description:"Foot Controller (Fine)",position:"lsb"},{number:37,name:"portamentotimefine",description:"Portamento Time (Fine)",position:"lsb"},{number:38,name:"dataentryfine",description:"Data Entry (Fine)",position:"lsb"},{number:39,name:"channelvolumefine",description:"Channel Volume (Fine)",position:"lsb"},{number:40,name:"balancefine",description:"Balance (Fine)",position:"lsb"},{number:41,name:"controller41",description:"Undefined",position:"lsb"},{number:42,name:"panfine",description:"Pan (Fine)",position:"lsb"},{number:43,name:"expressionfine",description:"Expression Controller (Fine)",position:"lsb"},{number:44,name:"effectcontrol1fine",description:"Effect control 1 (Fine)",position:"lsb"},{number:45,name:"effectcontrol2fine",description:"Effect control 2 (Fine)",position:"lsb"},{number:46,name:"controller46",description:"Undefined",position:"lsb"},{number:47,name:"controller47",description:"Undefined",position:"lsb"},{number:48,name:"controller48",description:"General Purpose Controller 1 (Fine)",position:"lsb"},{number:49,name:"controller49",description:"General Purpose Controller 2 (Fine)",position:"lsb"},{number:50,name:"controller50",description:"General Purpose Controller 3 (Fine)",position:"lsb"},{number:51,name:"controller51",description:"General Purpose Controller 4 (Fine)",position:"lsb"},{number:52,name:"controller52",description:"Undefined",position:"lsb"},{number:53,name:"controller53",description:"Undefined",position:"lsb"},{number:54,name:"controller54",description:"Undefined",position:"lsb"},{number:55,name:"controller55",description:"Undefined",position:"lsb"},{number:56,name:"controller56",description:"Undefined",position:"lsb"},{number:57,name:"controller57",description:"Undefined",position:"lsb"},{number:58,name:"controller58",description:"Undefined",position:"lsb"},{number:59,name:"controller59",description:"Undefined",position:"lsb"},{number:60,name:"controller60",description:"Undefined",position:"lsb"},{number:61,name:"controller61",description:"Undefined",position:"lsb"},{number:62,name:"controller62",description:"Undefined",position:"lsb"},{number:63,name:"controller63",description:"Undefined",position:"lsb"},{number:64,name:"damperpedal",description:"Damper Pedal On/Off"},{number:65,name:"portamento",description:"Portamento On/Off"},{number:66,name:"sostenuto",description:"Sostenuto On/Off"},{number:67,name:"softpedal",description:"Soft Pedal On/Off"},{number:68,name:"legatopedal",description:"Legato Pedal On/Off"},{number:69,name:"hold2",description:"Hold 2 On/Off"},{number:70,name:"soundvariation",description:"Sound Variation",position:"lsb"},{number:71,name:"resonance",description:"Resonance",position:"lsb"},{number:72,name:"releasetime",description:"Release Time",position:"lsb"},{number:73,name:"attacktime",description:"Attack Time",position:"lsb"},{number:74,name:"brightness",description:"Brightness",position:"lsb"},{number:75,name:"decaytime",description:"Decay Time",position:"lsb"},{number:76,name:"vibratorate",description:"Vibrato Rate",position:"lsb"},{number:77,name:"vibratodepth",description:"Vibrato Depth",position:"lsb"},{number:78,name:"vibratodelay",description:"Vibrato Delay",position:"lsb"},{number:79,name:"controller79",description:"Undefined",position:"lsb"},{number:80,name:"generalpurposecontroller5",description:"General Purpose Controller 5",position:"lsb"},{number:81,name:"generalpurposecontroller6",description:"General Purpose Controller 6",position:"lsb"},{number:82,name:"generalpurposecontroller7",description:"General Purpose Controller 7",position:"lsb"},{number:83,name:"generalpurposecontroller8",description:"General Purpose Controller 8",position:"lsb"},{number:84,name:"portamentocontrol",description:"Portamento Control",position:"lsb"},{number:85,name:"controller85",description:"Undefined"},{number:86,name:"controller86",description:"Undefined"},{number:87,name:"controller87",description:"Undefined"},{number:88,name:"highresolutionvelocityprefix",description:"High Resolution Velocity Prefix",position:"lsb"},{number:89,name:"controller89",description:"Undefined"},{number:90,name:"controller90",description:"Undefined"},{number:91,name:"effect1depth",description:"Effects 1 Depth (Reverb Send Level)"},{number:92,name:"effect2depth",description:"Effects 2 Depth"},{number:93,name:"effect3depth",description:"Effects 3 Depth (Chorus Send Level)"},{number:94,name:"effect4depth",description:"Effects 4 Depth"},{number:95,name:"effect5depth",description:"Effects 5 Depth"},{number:96,name:"dataincrement",description:"Data Increment"},{number:97,name:"datadecrement",description:"Data Decrement"},{number:98,name:"nonregisteredparameterfine",description:"Non-Registered Parameter Number (Fine)",position:"lsb"},{number:99,name:"nonregisteredparametercoarse",description:"Non-Registered Parameter Number (Coarse)",position:"msb"},{number:100,name:"registeredparameterfine",description:"Registered Parameter Number (Fine)",position:"lsb"},{number:101,name:"registeredparametercoarse",description:"Registered Parameter Number (Coarse)",position:"msb"},{number:102,name:"controller102",description:"Undefined"},{number:103,name:"controller103",description:"Undefined"},{number:104,name:"controller104",description:"Undefined"},{number:105,name:"controller105",description:"Undefined"},{number:106,name:"controller106",description:"Undefined"},{number:107,name:"controller107",description:"Undefined"},{number:108,name:"controller108",description:"Undefined"},{number:109,name:"controller109",description:"Undefined"},{number:110,name:"controller110",description:"Undefined"},{number:111,name:"controller111",description:"Undefined"},{number:112,name:"controller112",description:"Undefined"},{number:113,name:"controller113",description:"Undefined"},{number:114,name:"controller114",description:"Undefined"},{number:115,name:"controller115",description:"Undefined"},{number:116,name:"controller116",description:"Undefined"},{number:117,name:"controller117",description:"Undefined"},{number:118,name:"controller118",description:"Undefined"},{number:119,name:"controller119",description:"Undefined"},{number:120,name:"allsoundoff",description:"All Sound Off"},{number:121,name:"resetallcontrollers",description:"Reset All Controllers"},{number:122,name:"localcontrol",description:"Local Control On/Off"},{number:123,name:"allnotesoff",description:"All Notes Off"},{number:124,name:"omnimodeoff",description:"Omni Mode Off"},{number:125,name:"omnimodeon",description:"Omni Mode On"},{number:126,name:"monomodeon",description:"Mono Mode On"},{number:127,name:"polymodeon",description:"Poly Mode On"}]}static get REGISTERED_PARAMETERS(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}static get MIDI_REGISTERED_PARAMETERS(){return this.validation&&console.warn("The MIDI_REGISTERED_PARAMETERS enum has been deprecated. Use the Enumerations.REGISTERED_PARAMETERS enum instead."),p.MIDI_REGISTERED_PARAMETERS}static get SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}static get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn("The MIDI_SYSTEM_MESSAGES enum has been deprecated. Use the Enumerations.SYSTEM_MESSAGES enum instead."),p.SYSTEM_MESSAGES}static get CHANNEL_EVENTS(){return["noteoff","controlchange","noteon","keyaftertouch","programchange","channelaftertouch","pitchbend","allnotesoff","allsoundoff","localcontrol","monomode","omnimode","resetallcontrollers","nrpn","nrpn-dataentrycoarse","nrpn-dataentryfine","nrpn-dataincrement","nrpn-datadecrement","rpn","rpn-dataentrycoarse","rpn-dataentryfine","rpn-dataincrement","rpn-datadecrement","nrpn-databuttonincrement","nrpn-databuttondecrement","rpn-databuttonincrement","rpn-databuttondecrement"]}}/**
 * The `Note` class represents a single musical note such as `"D3"`, `"G#4"`, `"F-1"`, `"Gb7"`, etc.
 *
 * `Note` objects can be played back on a single channel by calling
 * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same
 * output, by calling [`Output.playNote()`]{@link Output#playNote}.
 *
 * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.
 * These can be changed by passing in the appropriate option. It is also possible to set a
 * system-wide default for attack and release velocities by using the
 * [`WebMidi.defaults`](WebMidi#defaults) property.
 *
 * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and
 * [`rawRelease`](#rawRelease) to both get and set the values.
 *
 * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped
 * when the duration has elapsed by sending a `"noteoff"` event. By default, the duration is set to
 * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a
 * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},
 * [`Output.stopNote()`]{@link Output#stopNote} or similar.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class ye{constructor(e,t={}){this.duration=R.defaults.note.duration,this.attack=R.defaults.note.attack,this.release=R.defaults.note.release,t.duration!=null&&(this.duration=t.duration),t.attack!=null&&(this.attack=t.attack),t.rawAttack!=null&&(this.attack=S.from7bitToFloat(t.rawAttack)),t.release!=null&&(this.release=t.release),t.rawRelease!=null&&(this.release=S.from7bitToFloat(t.rawRelease)),Number.isInteger(e)?this.identifier=S.toNoteIdentifier(e):this.identifier=e}get identifier(){return this._name+(this._accidental||"")+this._octave}set identifier(e){const t=S.getNoteDetails(e);if(R.validation&&!e)throw new Error("Invalid note identifier");this._name=t.name,this._accidental=t.accidental,this._octave=t.octave}get name(){return this._name}set name(e){if(R.validation&&(e=e.toUpperCase(),!["C","D","E","F","G","A","B"].includes(e)))throw new Error("Invalid name value");this._name=e}get accidental(){return this._accidental}set accidental(e){if(R.validation&&(e=e.toLowerCase(),!["#","##","b","bb"].includes(e)))throw new Error("Invalid accidental value");this._accidental=e}get octave(){return this._octave}set octave(e){if(R.validation&&(e=parseInt(e),isNaN(e)))throw new Error("Invalid octave value");this._octave=e}get duration(){return this._duration}set duration(e){if(R.validation&&(e=parseFloat(e),isNaN(e)||e===null||e<0))throw new RangeError("Invalid duration value.");this._duration=e}get attack(){return this._attack}set attack(e){if(R.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError("Invalid attack value.");this._attack=e}get release(){return this._release}set release(e){if(R.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError("Invalid release value.");this._release=e}get rawAttack(){return S.fromFloatTo7Bit(this._attack)}set rawAttack(e){this._attack=S.from7bitToFloat(e)}get rawRelease(){return S.fromFloatTo7Bit(this._release)}set rawRelease(e){this._release=S.from7bitToFloat(e)}get number(){return S.toNoteNumber(this.identifier)}getOffsetNumber(e=0,t=0){return R.validation&&(e=parseInt(e)||0,t=parseInt(t)||0),Math.min(Math.max(this.number+e*12+t,0),127)}}/**
 * The `Utilities` class contains general-purpose utility methods. All methods are static and
 * should be called using the class name. For example: `Utilities.getNoteDetails("C4")`.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class S{static toNoteNumber(e,t=0){if(t=t==null?0:parseInt(t),isNaN(t))throw new RangeError("Invalid 'octaveOffset' value");typeof e!="string"&&(e="");const r=this.getNoteDetails(e);if(!r)throw new TypeError("Invalid note identifier");const s={C:0,D:2,E:4,F:5,G:7,A:9,B:11};let i=(r.octave+1+t)*12;if(i+=s[r.name],r.accidental&&(r.accidental.startsWith("b")?i-=r.accidental.length:i+=r.accidental.length),i<0||i>127)throw new RangeError("Invalid octaveOffset value");return i}static getNoteDetails(e){Number.isInteger(e)&&(e=this.toNoteIdentifier(e));const t=e.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)$/i);if(!t)throw new TypeError("Invalid note identifier");const r=t[1].toUpperCase(),s=parseInt(t[3]);let i=t[2].toLowerCase();return i=i===""?void 0:i,{accidental:i,identifier:r+(i||"")+s,name:r,octave:s}}static sanitizeChannels(e){let t;if(R.validation){if(e==="all")t=["all"];else if(e==="none")return[]}return Array.isArray(e)?t=e:t=[e],t.indexOf("all")>-1&&(t=p.MIDI_CHANNEL_NUMBERS),t.map(function(r){return parseInt(r)}).filter(function(r){return r>=1&&r<=16})}static toTimestamp(e){let t=!1;const r=parseFloat(e);return isNaN(r)?!1:(typeof e=="string"&&e.substring(0,1)==="+"?r>=0&&(t=R.time+r):r>=0&&(t=r),t)}static guessNoteNumber(e,t){t=parseInt(t)||0;let r=!1;if(Number.isInteger(e)&&e>=0&&e<=127)r=parseInt(e);else if(parseInt(e)>=0&&parseInt(e)<=127)r=parseInt(e);else if(typeof e=="string"||e instanceof String)try{r=this.toNoteNumber(e.trim(),t)}catch{return!1}return r}static toNoteIdentifier(e,t){if(e=parseInt(e),isNaN(e)||e<0||e>127)throw new RangeError("Invalid note number");if(t=t==null?0:parseInt(t),isNaN(t))throw new RangeError("Invalid octaveOffset value");const r=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],s=Math.floor(e/12-1)+t;return r[e%12]+s.toString()}static buildNote(e,t={}){if(t.octaveOffset=parseInt(t.octaveOffset)||0,e instanceof ye)return e;let r=this.guessNoteNumber(e,t.octaveOffset);if(r===!1)throw new TypeError(`The input could not be parsed as a note (${e})`);return t.octaveOffset=void 0,new ye(r,t)}static buildNoteArray(e,t={}){let r=[];return Array.isArray(e)||(e=[e]),e.forEach(s=>{r.push(this.buildNote(s,t))}),r}static from7bitToFloat(e){return e===1/0&&(e=127),e=parseInt(e)||0,Math.min(Math.max(e/127,0),1)}static fromFloatTo7Bit(e){return e===1/0&&(e=1),e=parseFloat(e)||0,Math.min(Math.max(Math.round(e*127),0),127)}static fromMsbLsbToFloat(e,t=0){R.validation&&(e=Math.min(Math.max(parseInt(e)||0,0),127),t=Math.min(Math.max(parseInt(t)||0,0),127));const r=((e<<7)+t)/16383;return Math.min(Math.max(r,0),1)}static fromFloatToMsbLsb(e){R.validation&&(e=Math.min(Math.max(parseFloat(e)||0,0),1));const t=Math.round(e*16383);return{msb:t>>7,lsb:t&127}}static offsetNumber(e,t=0,r=0){if(R.validation){if(e=parseInt(e),isNaN(e))throw new Error("Invalid note number");t=parseInt(t)||0,r=parseInt(r)||0}return Math.min(Math.max(e+t*12+r,0),127)}static getPropertyByValue(e,t){return Object.keys(e).find(r=>e[r]===t)}static getCcNameByNumber(e){if(!(R.validation&&(e=parseInt(e),!(e>=0&&e<=127))))return p.CONTROL_CHANGE_MESSAGES[e].name}static getCcNumberByName(e){let t=p.CONTROL_CHANGE_MESSAGES.find(r=>r.name===e);return t?t.number:p.MIDI_CONTROL_CHANGE_MESSAGES[e]}static getChannelModeByNumber(e){if(!(e>=120&&e<=127))return!1;for(let t in p.CHANNEL_MODE_MESSAGES)if(p.CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===p.CHANNEL_MODE_MESSAGES[t])return t;return!1}static get isNode(){return typeof process<"u"&&process.versions!=null&&process.versions.node!=null}static get isBrowser(){return typeof window<"u"&&typeof window.document<"u"}}/**
 * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are
 * provided by an [`Output`](Output) port which, itself, is made available by a device. The
 * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated
 * directly.
 *
 * All 16 `OutputChannel` objects can be found inside the parent output's
 * [`channels`]{@link Output#channels} property.
 *
 * @param {Output} output The [`Output`](Output) this channel belongs to.
 * @param {number} number The MIDI channel number (`1` - `16`).
 *
 * @extends EventEmitter
 * @license Apache-2.0
 * @since 3.0.0
 */class si extends he{constructor(e,t){super(),this._output=e,this._number=t,this._octaveOffset=0}destroy(){this._output=null,this._number=null,this._octaveOffset=0,this.removeListener()}send(e,t={time:0}){return this.output.send(e,t),this}sendKeyAftertouch(e,t,r={}){if(R.validation){if(r.useRawValue&&(r.rawValue=r.useRawValue),isNaN(parseFloat(t)))throw new RangeError("Invalid key aftertouch value.");if(r.rawValue){if(!(t>=0&&t<=127&&Number.isInteger(t)))throw new RangeError("Key aftertouch raw value must be an integer between 0 and 127.")}else if(!(t>=0&&t<=1))throw new RangeError("Key aftertouch value must be a float between 0 and 1.")}r.rawValue||(t=S.fromFloatTo7Bit(t));const s=R.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Array.isArray(e)||(e=[e]),S.buildNoteArray(e).forEach(i=>{this.send([(p.CHANNEL_MESSAGES.keyaftertouch<<4)+(this.number-1),i.getOffsetNumber(s),t],{time:S.toTimestamp(r.time)})}),this}sendControlChange(e,t,r={}){if(typeof e=="string"&&(e=S.getCcNumberByName(e)),Array.isArray(t)||(t=[t]),R.validation){if(e===void 0)throw new TypeError("Control change must be identified with a valid name or an integer between 0 and 127.");if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new TypeError("Control change number must be an integer between 0 and 127.");if(t=t.map(s=>{const i=Math.min(Math.max(parseInt(s),0),127);if(isNaN(i))throw new TypeError("Values must be integers between 0 and 127");return i}),t.length===2&&e>=32)throw new TypeError("To use a value array, the controller must be between 0 and 31")}return t.forEach((s,i)=>{this.send([(p.CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e+i*32,t[i]],{time:S.toTimestamp(r.time)})}),this}_selectNonRegisteredParameter(e,t={}){return this.sendControlChange(99,e[0],t),this.sendControlChange(98,e[1],t),this}_deselectRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_deselectNonRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_selectRegisteredParameter(e,t={}){return this.sendControlChange(101,e[0],t),this.sendControlChange(100,e[1],t),this}_setCurrentParameter(e,t={}){return e=[].concat(e),this.sendControlChange(6,e[0],t),e.length<2?this:(this.sendControlChange(38,e[1],t),this)}sendRpnDecrement(e,t={}){if(Array.isArray(e)||(e=p.REGISTERED_PARAMETERS[e]),R.validation){if(e===void 0)throw new TypeError("The specified registered parameter is invalid.");let r=!1;if(Object.getOwnPropertyNames(p.REGISTERED_PARAMETERS).forEach(s=>{p.REGISTERED_PARAMETERS[s][0]===e[0]&&p.REGISTERED_PARAMETERS[s][1]===e[1]&&(r=!0)}),!r)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(97,0,t),this._deselectRegisteredParameter(t),this}sendRpnIncrement(e,t={}){if(Array.isArray(e)||(e=p.REGISTERED_PARAMETERS[e]),R.validation){if(e===void 0)throw new TypeError("The specified registered parameter is invalid.");let r=!1;if(Object.getOwnPropertyNames(p.REGISTERED_PARAMETERS).forEach(s=>{p.REGISTERED_PARAMETERS[s][0]===e[0]&&p.REGISTERED_PARAMETERS[s][1]===e[1]&&(r=!0)}),!r)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(96,0,t),this._deselectRegisteredParameter(t),this}playNote(e,t={}){this.sendNoteOn(e,t);const r=Array.isArray(e)?e:[e];for(let s of r)if(parseInt(s.duration)>0){const i={time:(S.toTimestamp(t.time)||R.time)+parseInt(s.duration),release:s.release,rawRelease:s.rawRelease};this.sendNoteOff(s,i)}else if(parseInt(t.duration)>0){const i={time:(S.toTimestamp(t.time)||R.time)+parseInt(t.duration),release:t.release,rawRelease:t.rawRelease};this.sendNoteOff(s,i)}return this}sendNoteOff(e,t={}){if(R.validation){if(t.rawRelease!=null&&!(t.rawRelease>=0&&t.rawRelease<=127))throw new RangeError("The 'rawRelease' option must be an integer between 0 and 127");if(t.release!=null&&!(t.release>=0&&t.release<=1))throw new RangeError("The 'release' option must be an number between 0 and 1");t.rawVelocity&&(t.rawRelease=t.velocity,console.warn("The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.")),t.velocity&&(t.release=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let r=64;t.rawRelease!=null?r=t.rawRelease:isNaN(t.release)||(r=Math.round(t.release*127));const s=R.octaveOffset+this.output.octaveOffset+this.octaveOffset;return S.buildNoteArray(e,{rawRelease:parseInt(r)}).forEach(i=>{this.send([(p.CHANNEL_MESSAGES.noteoff<<4)+(this.number-1),i.getOffsetNumber(s),i.rawRelease],{time:S.toTimestamp(t.time)})}),this}stopNote(e,t={}){return this.sendNoteOff(e,t)}sendNoteOn(e,t={}){if(R.validation){if(t.rawAttack!=null&&!(t.rawAttack>=0&&t.rawAttack<=127))throw new RangeError("The 'rawAttack' option must be an integer between 0 and 127");if(t.attack!=null&&!(t.attack>=0&&t.attack<=1))throw new RangeError("The 'attack' option must be an number between 0 and 1");t.rawVelocity&&(t.rawAttack=t.velocity,t.rawRelease=t.release,console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.")),t.velocity&&(t.attack=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let r=64;t.rawAttack!=null?r=t.rawAttack:isNaN(t.attack)||(r=Math.round(t.attack*127));const s=R.octaveOffset+this.output.octaveOffset+this.octaveOffset;return S.buildNoteArray(e,{rawAttack:r}).forEach(i=>{this.send([(p.CHANNEL_MESSAGES.noteon<<4)+(this.number-1),i.getOffsetNumber(s),i.rawAttack],{time:S.toTimestamp(t.time)})}),this}sendChannelMode(e,t=0,r={}){if(typeof e=="string"&&(e=p.CHANNEL_MODE_MESSAGES[e]),R.validation){if(e===void 0)throw new TypeError("Invalid channel mode message name or number.");if(isNaN(e)||!(e>=120&&e<=127))throw new TypeError("Invalid channel mode message number.");if(isNaN(parseInt(t))||t<0||t>127)throw new RangeError("Value must be an integer between 0 and 127.")}return this.send([(p.CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e,t],{time:S.toTimestamp(r.time)}),this}sendOmniMode(e,t={}){return e===void 0||e?this.sendChannelMode("omnimodeon",0,t):this.sendChannelMode("omnimodeoff",0,t),this}sendChannelAftertouch(e,t={}){if(R.validation){if(isNaN(parseFloat(e)))throw new RangeError("Invalid channel aftertouch value.");if(t.rawValue){if(!(e>=0&&e<=127&&Number.isInteger(e)))throw new RangeError("Channel aftertouch raw value must be an integer between 0 and 127.")}else if(!(e>=0&&e<=1))throw new RangeError("Channel aftertouch value must be a float between 0 and 1.")}return t.rawValue||(e=S.fromFloatTo7Bit(e)),this.send([(p.CHANNEL_MESSAGES.channelaftertouch<<4)+(this.number-1),Math.round(e)],{time:S.toTimestamp(t.time)}),this}sendMasterTuning(e,t={}){if(e=parseFloat(e)||0,R.validation&&!(e>-65&&e<64))throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");let r=Math.floor(e)+64,s=e-Math.floor(e);s=Math.round((s+1)/2*16383);let i=s>>7&127,o=s&127;return this.sendRpnValue("channelcoarsetuning",r,t),this.sendRpnValue("channelfinetuning",[i,o],t),this}sendModulationRange(e,t,r={}){if(R.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(t!=null&&(!Number.isInteger(t)||!(t>=0&&t<=127)))throw new RangeError("If specified, the cents value must be an integer between 0 and 127.")}return t>=0&&t<=127||(t=0),this.sendRpnValue("modulationrange",[e,t],r),this}sendNrpnValue(e,t,r={}){if(t=[].concat(t),R.validation){if(!Array.isArray(e)||!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the NRPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the NRPN must be between 0 and 127.");t.forEach(s=>{if(!(s>=0&&s<=127))throw new RangeError("The data bytes of the NRPN must be between 0 and 127.")})}return this._selectNonRegisteredParameter(e,r),this._setCurrentParameter(t,r),this._deselectNonRegisteredParameter(r),this}sendPitchBend(e,t={}){if(R.validation)if(t.rawValue&&Array.isArray(e)){if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The pitch bend LSB must be an integer between 0 and 127.")}else if(t.rawValue&&!Array.isArray(e)){if(!(e>=0&&e<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}else{if(isNaN(e)||e===null)throw new RangeError("Invalid pitch bend value.");if(!(e>=-1&&e<=1))throw new RangeError("The pitch bend value must be a float between -1 and 1.")}let r=0,s=0;if(t.rawValue&&Array.isArray(e))r=e[0],s=e[1];else if(t.rawValue&&!Array.isArray(e))r=e;else{const i=S.fromFloatToMsbLsb((e+1)/2);r=i.msb,s=i.lsb}return this.send([(p.CHANNEL_MESSAGES.pitchbend<<4)+(this.number-1),s,r],{time:S.toTimestamp(t.time)}),this}sendPitchBendRange(e,t,r={}){if(R.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError("The cents value must be an integer between 0 and 127.")}return this.sendRpnValue("pitchbendrange",[e,t],r),this}sendProgramChange(e,t={}){if(e=parseInt(e)||0,R.validation&&!(e>=0&&e<=127))throw new RangeError("The program number must be between 0 and 127.");return this.send([(p.CHANNEL_MESSAGES.programchange<<4)+(this.number-1),e],{time:S.toTimestamp(t.time)}),this}sendRpnValue(e,t,r={}){if(Array.isArray(e)||(e=p.REGISTERED_PARAMETERS[e]),R.validation){if(!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the RPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the RPN must be between 0 and 127.");[].concat(t).forEach(s=>{if(!(s>=0&&s<=127))throw new RangeError("The data bytes of the RPN must be between 0 and 127.")})}return this._selectRegisteredParameter(e,r),this._setCurrentParameter(t,r),this._deselectRegisteredParameter(r),this}sendTuningBank(e,t={}){if(R.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError("The tuning bank number must be between 0 and 127.");return this.sendRpnValue("tuningbank",e,t),this}sendTuningProgram(e,t={}){if(R.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError("The tuning program number must be between 0 and 127.");return this.sendRpnValue("tuningprogram",e,t),this}sendLocalControl(e,t={}){return e?this.sendChannelMode("localcontrol",127,t):this.sendChannelMode("localcontrol",0,t)}sendAllNotesOff(e={}){return this.sendChannelMode("allnotesoff",0,e)}sendAllSoundOff(e={}){return this.sendChannelMode("allsoundoff",0,e)}sendResetAllControllers(e={}){return this.sendChannelMode("resetallcontrollers",0,e)}sendPolyphonicMode(e,t={}){return e==="mono"?this.sendChannelMode("monomodeon",0,t):this.sendChannelMode("polymodeon",0,t)}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get output(){return this._output}get number(){return this._number}}/**
 * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).
 * A port is made available by a MIDI device. A MIDI device can advertise several input and output
 * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)
 * property.
 *
 * The `Output` object is automatically instantiated by the library according to the host's MIDI
 * subsystem and should not be directly instantiated.
 *
 * You can access all available `Output` objects by referring to the
 * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as
 * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or
 * [`WebMidi.getOutputById()`](WebMidi#getOutputById).
 *
 * @fires Output#opened
 * @fires Output#disconnected
 * @fires Output#closed
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class Yt extends he{constructor(e){super(),this._midiOutput=e,this._octaveOffset=0,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new si(this,t);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiOutput&&(this._midiOutput.onstatechange=null),await this.close(),this._midiOutput=null}_onStateChange(e){let t={timestamp:R.time};e.port.connection==="open"?(t.type="opened",t.target=this,t.port=t.target,this.emit("opened",t)):e.port.connection==="closed"&&e.port.state==="connected"?(t.type="closed",t.target=this,t.port=t.target,this.emit("closed",t)):e.port.connection==="closed"&&e.port.state==="disconnected"?(t.type="disconnected",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):e.port.connection==="pending"&&e.port.state==="disconnected"||console.warn("This statechange event was not caught:",e.port.connection,e.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}send(e,t={time:0},r=0){if(e instanceof Bn&&(e=S.isNode?e.data:e.rawData),e instanceof Uint8Array&&S.isNode&&(e=Array.from(e)),R.validation){if(!Array.isArray(e)&&!(e instanceof Uint8Array)&&(e=[e],Array.isArray(t)&&(e=e.concat(t)),t=isNaN(r)?{time:0}:{time:r}),!(parseInt(e[0])>=128&&parseInt(e[0])<=255))throw new RangeError("The first byte (status) must be an integer between 128 and 255.");e.slice(1).forEach(s=>{if(s=parseInt(s),!(s>=0&&s<=255))throw new RangeError("Data bytes must be integers between 0 and 255.")}),t||(t={time:0})}return this._midiOutput.send(e,S.toTimestamp(t.time)),this}sendSysex(e,t=[],r={}){if(e=[].concat(e),t instanceof Uint8Array){const s=new Uint8Array(1+e.length+t.length+1);s[0]=p.SYSTEM_MESSAGES.sysex,s.set(Uint8Array.from(e),1),s.set(t,1+e.length),s[s.length-1]=p.SYSTEM_MESSAGES.sysexend,this.send(s,{time:r.time})}else{const s=e.concat(t,p.SYSTEM_MESSAGES.sysexend);this.send([p.SYSTEM_MESSAGES.sysex].concat(s),{time:r.time})}return this}clear(){return this._midiOutput.clear?this._midiOutput.clear():R.validation&&console.warn("The 'clear()' method has not yet been implemented in your environment."),this}sendTimecodeQuarterFrame(e,t={}){if(R.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The value must be an integer between 0 and 127.");return this.send([p.SYSTEM_MESSAGES.timecode,e],{time:t.time}),this}sendSongPosition(e=0,t={}){e=Math.floor(e)||0;var r=e>>7&127,s=e&127;return this.send([p.SYSTEM_MESSAGES.songposition,r,s],{time:t.time}),this}sendSongSelect(e=0,t={}){if(R.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The program value must be between 0 and 127");return this.send([p.SYSTEM_MESSAGES.songselect,e],{time:t.time}),this}sendTuneRequest(e={}){return this.send([p.SYSTEM_MESSAGES.tunerequest],{time:e.time}),this}sendClock(e={}){return this.send([p.SYSTEM_MESSAGES.clock],{time:e.time}),this}sendStart(e={}){return this.send([p.SYSTEM_MESSAGES.start],{time:e.time}),this}sendContinue(e={}){return this.send([p.SYSTEM_MESSAGES.continue],{time:e.time}),this}sendStop(e={}){return this.send([p.SYSTEM_MESSAGES.stop],{time:e.time}),this}sendActiveSensing(e={}){return this.send([p.SYSTEM_MESSAGES.activesensing],{time:e.time}),this}sendReset(e={}){return this.send([p.SYSTEM_MESSAGES.reset],{time:e.time}),this}sendTuningRequest(e={}){return R.validation&&console.warn("The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead."),this.sendTuneRequest(e)}sendKeyAftertouch(e,t,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendKeyAftertouch(e,t,r)}),this}sendControlChange(e,t,r={},s={}){if(R.validation&&(Array.isArray(r)||Number.isInteger(r)||r==="all")){const i=r;r=s,r.channels=i,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)}return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(r.channels).forEach(i=>{this.channels[i].sendControlChange(e,t,r)}),this}sendPitchBendRange(e=0,t=0,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendPitchBendRange(e,t,r)}),this}setPitchBendRange(e=0,t=0,r="all",s={}){return R.validation&&(console.warn("The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead."),s.channels=r,s.channels==="all"&&(s.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendPitchBendRange(e,t,s)}sendRpnValue(e,t,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendRpnValue(e,t,r)}),this}setRegisteredParameter(e,t=[],r="all",s={}){return R.validation&&(console.warn("The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead."),s.channels=r,s.channels==="all"&&(s.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendRpnValue(e,t,s)}sendChannelAftertouch(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendChannelAftertouch(e,t)}),this}sendPitchBend(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendPitchBend(e,t)}),this}sendProgramChange(e=0,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendProgramChange(e,t)}),this}sendModulationRange(e,t,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendModulationRange(e,t,r)}),this}setModulationRange(e=0,t=0,r="all",s={}){return R.validation&&(console.warn("The setModulationRange() method is deprecated. Use sendModulationRange() instead."),s.channels=r,s.channels==="all"&&(s.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendModulationRange(e,t,s)}sendMasterTuning(e,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendMasterTuning(e,t)}),this}setMasterTuning(e,t={},r={}){return R.validation&&(console.warn("The setMasterTuning() method is deprecated. Use sendMasterTuning() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendMasterTuning(e,r)}sendTuningProgram(e,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendTuningProgram(e,t)}),this}setTuningProgram(e,t="all",r={}){return R.validation&&(console.warn("The setTuningProgram() method is deprecated. Use sendTuningProgram() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendTuningProgram(e,r)}sendTuningBank(e=0,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendTuningBank(e,t)}),this}setTuningBank(e,t="all",r={}){return R.validation&&(console.warn("The setTuningBank() method is deprecated. Use sendTuningBank() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendTuningBank(e,r)}sendChannelMode(e,t=0,r={},s={}){if(R.validation&&(Array.isArray(r)||Number.isInteger(r)||r==="all")){const i=r;r=s,r.channels=i,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)}return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(r.channels).forEach(i=>{this.channels[i].sendChannelMode(e,t,r)}),this}sendAllSoundOff(e={}){return e.channels==null&&(e.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllSoundOff(e)}),this}sendAllNotesOff(e={}){return e.channels==null&&(e.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllNotesOff(e)}),this}sendResetAllControllers(e={},t={}){if(R.validation&&(Array.isArray(e)||Number.isInteger(e)||e==="all")){const r=e;e=t,e.channels=r,e.channels==="all"&&(e.channels=p.MIDI_CHANNEL_NUMBERS)}return e.channels==null&&(e.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(e.channels).forEach(r=>{this.channels[r].sendResetAllControllers(e)}),this}sendPolyphonicMode(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendPolyphonicMode(e,t)}),this}sendLocalControl(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendLocalControl(e,t)}),this}sendOmniMode(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendOmniMode(e,t)}),this}sendNrpnValue(e,t,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendNrpnValue(e,t,r)}),this}setNonRegisteredParameter(e,t=[],r="all",s={}){return R.validation&&(console.warn("The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead."),s.channels=r,s.channels==="all"&&(s.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendNrpnValue(e,t,s)}sendRpnIncrement(e,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendRpnIncrement(e,t)}),this}incrementRegisteredParameter(e,t="all",r={}){return R.validation&&(console.warn("The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendRpnIncrement(e,r)}sendRpnDecrement(e,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendRpnDecrement(e,t)}),this}decrementRegisteredParameter(e,t="all",r={}){return R.validation&&(console.warn("The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendRpnDecrement(e,r)}sendNoteOff(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendNoteOff(e,t)}),this}stopNote(e,t){return this.sendNoteOff(e,t)}playNote(e,t={},r={}){if(R.validation&&(t.rawVelocity&&console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' instead."),t.velocity&&console.warn("The 'velocity' option is deprecated. Use 'velocity' instead."),Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].playNote(e,t)}),this}sendNoteOn(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendNoteOn(e,t)}),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}}/**
 * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you
 * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object
 * to all the outputs listed in its [`destinations`](#destinations) property.
 *
 * If specific channels or message types have been defined in the [`channels`](#channels) or
 * [`types`](#types) properties, only messages matching the channels/types will be forwarded.
 *
 * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as
 * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class ln{constructor(e=[],t={}){this.destinations=[],this.types=[...Object.keys(p.SYSTEM_MESSAGES),...Object.keys(p.CHANNEL_MESSAGES)],this.channels=p.MIDI_CHANNEL_NUMBERS,this.suspended=!1,Array.isArray(e)||(e=[e]),t.types&&!Array.isArray(t.types)&&(t.types=[t.types]),t.channels&&!Array.isArray(t.channels)&&(t.channels=[t.channels]),R.validation&&(e.forEach(r=>{if(!(r instanceof Yt))throw new TypeError("Destinations must be of type 'Output'.")}),t.types!==void 0&&t.types.forEach(r=>{if(!p.SYSTEM_MESSAGES.hasOwnProperty(r)&&!p.CHANNEL_MESSAGES.hasOwnProperty(r))throw new TypeError("Type must be a valid message type.")}),t.channels!==void 0&&t.channels.forEach(r=>{if(!p.MIDI_CHANNEL_NUMBERS.includes(r))throw new TypeError("MIDI channel must be between 1 and 16.")})),this.destinations=e,t.types&&(this.types=t.types),t.channels&&(this.channels=t.channels)}forward(e){this.suspended||this.types.includes(e.type)&&(e.channel&&!this.channels.includes(e.channel)||this.destinations.forEach(t=>{R.validation&&!(t instanceof Yt)||t.send(e)}))}}/**
 * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input
 * device. This object is derived from the host's MIDI subsystem and should not be instantiated
 * directly.
 *
 * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)
 * property.
 *
 * @fires InputChannel#midimessage
 * @fires InputChannel#unknownmessage
 *
 * @fires InputChannel#noteoff
 * @fires InputChannel#noteon
 * @fires InputChannel#keyaftertouch
 * @fires InputChannel#programchange
 * @fires InputChannel#channelaftertouch
 * @fires InputChannel#pitchbend
 *
 * @fires InputChannel#allnotesoff
 * @fires InputChannel#allsoundoff
 * @fires InputChannel#localcontrol
 * @fires InputChannel#monomode
 * @fires InputChannel#omnimode
 * @fires InputChannel#resetallcontrollers
 *
 * @fires InputChannel#event:nrpn
 * @fires InputChannel#event:nrpn-dataentrycoarse
 * @fires InputChannel#event:nrpn-dataentryfine
 * @fires InputChannel#event:nrpn-dataincrement
 * @fires InputChannel#event:nrpn-datadecrement
 * @fires InputChannel#event:rpn
 * @fires InputChannel#event:rpn-dataentrycoarse
 * @fires InputChannel#event:rpn-dataentryfine
 * @fires InputChannel#event:rpn-dataincrement
 * @fires InputChannel#event:rpn-datadecrement
 *
 * @fires InputChannel#controlchange
 * @fires InputChannel#event:controlchange-controllerxxx
 * @fires InputChannel#event:controlchange-bankselectcoarse
 * @fires InputChannel#event:controlchange-modulationwheelcoarse
 * @fires InputChannel#event:controlchange-breathcontrollercoarse
 * @fires InputChannel#event:controlchange-footcontrollercoarse
 * @fires InputChannel#event:controlchange-portamentotimecoarse
 * @fires InputChannel#event:controlchange-dataentrycoarse
 * @fires InputChannel#event:controlchange-volumecoarse
 * @fires InputChannel#event:controlchange-balancecoarse
 * @fires InputChannel#event:controlchange-pancoarse
 * @fires InputChannel#event:controlchange-expressioncoarse
 * @fires InputChannel#event:controlchange-effectcontrol1coarse
 * @fires InputChannel#event:controlchange-effectcontrol2coarse
 * @fires InputChannel#event:controlchange-generalpurposecontroller1
 * @fires InputChannel#event:controlchange-generalpurposecontroller2
 * @fires InputChannel#event:controlchange-generalpurposecontroller3
 * @fires InputChannel#event:controlchange-generalpurposecontroller4
 * @fires InputChannel#event:controlchange-bankselectfine
 * @fires InputChannel#event:controlchange-modulationwheelfine
 * @fires InputChannel#event:controlchange-breathcontrollerfine
 * @fires InputChannel#event:controlchange-footcontrollerfine
 * @fires InputChannel#event:controlchange-portamentotimefine
 * @fires InputChannel#event:controlchange-dataentryfine
 * @fires InputChannel#event:controlchange-channelvolumefine
 * @fires InputChannel#event:controlchange-balancefine
 * @fires InputChannel#event:controlchange-panfine
 * @fires InputChannel#event:controlchange-expressionfine
 * @fires InputChannel#event:controlchange-effectcontrol1fine
 * @fires InputChannel#event:controlchange-effectcontrol2fine
 * @fires InputChannel#event:controlchange-damperpedal
 * @fires InputChannel#event:controlchange-portamento
 * @fires InputChannel#event:controlchange-sostenuto
 * @fires InputChannel#event:controlchange-softpedal
 * @fires InputChannel#event:controlchange-legatopedal
 * @fires InputChannel#event:controlchange-hold2
 * @fires InputChannel#event:controlchange-soundvariation
 * @fires InputChannel#event:controlchange-resonance
 * @fires InputChannel#event:controlchange-releasetime
 * @fires InputChannel#event:controlchange-attacktime
 * @fires InputChannel#event:controlchange-brightness
 * @fires InputChannel#event:controlchange-decaytime
 * @fires InputChannel#event:controlchange-vibratorate
 * @fires InputChannel#event:controlchange-vibratodepth
 * @fires InputChannel#event:controlchange-vibratodelay
 * @fires InputChannel#event:controlchange-generalpurposecontroller5
 * @fires InputChannel#event:controlchange-generalpurposecontroller6
 * @fires InputChannel#event:controlchange-generalpurposecontroller7
 * @fires InputChannel#event:controlchange-generalpurposecontroller8
 * @fires InputChannel#event:controlchange-portamentocontrol
 * @fires InputChannel#event:controlchange-highresolutionvelocityprefix
 * @fires InputChannel#event:controlchange-effect1depth
 * @fires InputChannel#event:controlchange-effect2depth
 * @fires InputChannel#event:controlchange-effect3depth
 * @fires InputChannel#event:controlchange-effect4depth
 * @fires InputChannel#event:controlchange-effect5depth
 * @fires InputChannel#event:controlchange-dataincrement
 * @fires InputChannel#event:controlchange-datadecrement
 * @fires InputChannel#event:controlchange-nonregisteredparameterfine
 * @fires InputChannel#event:controlchange-nonregisteredparametercoarse
 * @fires InputChannel#event:controlchange-registeredparameterfine
 * @fires InputChannel#event:controlchange-registeredparametercoarse
 * @fires InputChannel#event:controlchange-allsoundoff
 * @fires InputChannel#event:controlchange-resetallcontrollers
 * @fires InputChannel#event:controlchange-localcontrol
 * @fires InputChannel#event:controlchange-allnotesoff
 * @fires InputChannel#event:controlchange-omnimodeoff
 * @fires InputChannel#event:controlchange-omnimodeon
 * @fires InputChannel#event:controlchange-monomodeon
 * @fires InputChannel#event:controlchange-polymodeon
 * @fires InputChannel#event:
 *
 * @extends EventEmitter
 * @license Apache-2.0
 * @since 3.0.0
 */class ii extends he{constructor(e,t){super(),this._input=e,this._number=t,this._octaveOffset=0,this._nrpnBuffer=[],this._rpnBuffer=[],this.parameterNumberEventsEnabled=!0,this.notesState=new Array(128).fill(!1)}destroy(){this._input=null,this._number=null,this._octaveOffset=0,this._nrpnBuffer=[],this.notesState=new Array(128).fill(!1),this.parameterNumberEventsEnabled=!1,this.removeListener()}_processMidiMessageEvent(e){const t=Object.assign({},e);t.port=this.input,t.target=this,t.type="midimessage",this.emit(t.type,t),this._parseEventForStandardMessages(t)}_parseEventForStandardMessages(e){const t=Object.assign({},e);t.type=t.message.type||"unknownmessage";const r=e.message.dataBytes[0],s=e.message.dataBytes[1];if(t.type==="noteoff"||t.type==="noteon"&&s===0)this.notesState[r]=!1,t.type="noteoff",t.note=new ye(S.offsetNumber(r,this.octaveOffset+this.input.octaveOffset+R.octaveOffset),{rawAttack:0,rawRelease:s}),t.value=S.from7bitToFloat(s),t.rawValue=s,t.velocity=t.note.release,t.rawVelocity=t.note.rawRelease;else if(t.type==="noteon")this.notesState[r]=!0,t.note=new ye(S.offsetNumber(r,this.octaveOffset+this.input.octaveOffset+R.octaveOffset),{rawAttack:s}),t.value=S.from7bitToFloat(s),t.rawValue=s,t.velocity=t.note.attack,t.rawVelocity=t.note.rawAttack;else if(t.type==="keyaftertouch")t.note=new ye(S.offsetNumber(r,this.octaveOffset+this.input.octaveOffset+R.octaveOffset)),t.value=S.from7bitToFloat(s),t.rawValue=s,t.identifier=t.note.identifier,t.key=t.note.number,t.rawKey=r;else if(t.type==="controlchange"){t.controller={number:r,name:p.CONTROL_CHANGE_MESSAGES[r].name,description:p.CONTROL_CHANGE_MESSAGES[r].description,position:p.CONTROL_CHANGE_MESSAGES[r].position},t.subtype=t.controller.name||"controller"+r,t.value=S.from7bitToFloat(s),t.rawValue=s;const i=Object.assign({},t);i.type=`${t.type}-controller${r}`,delete i.subtype,this.emit(i.type,i);const o=Object.assign({},t);o.type=`${t.type}-`+p.CONTROL_CHANGE_MESSAGES[r].name,delete o.subtype,o.type.indexOf("controller")!==0&&this.emit(o.type,o),t.message.dataBytes[0]>=120&&this._parseChannelModeMessage(t),this.parameterNumberEventsEnabled&&this._isRpnOrNrpnController(t.message.dataBytes[0])&&this._parseEventForParameterNumber(t)}else t.type==="programchange"?(t.value=r,t.rawValue=t.value):t.type==="channelaftertouch"?(t.value=S.from7bitToFloat(r),t.rawValue=r):t.type==="pitchbend"?(t.value=((s<<7)+r-8192)/8192,t.rawValue=(s<<7)+r):t.type="unknownmessage";this.emit(t.type,t)}_parseChannelModeMessage(e){const t=Object.assign({},e);t.type=t.controller.name,t.type==="localcontrol"&&(t.value=t.message.data[2]===127,t.rawValue=t.message.data[2]),t.type==="omnimodeon"?(t.type="omnimode",t.value=!0,t.rawValue=t.message.data[2]):t.type==="omnimodeoff"&&(t.type="omnimode",t.value=!1,t.rawValue=t.message.data[2]),t.type==="monomodeon"?(t.type="monomode",t.value=!0,t.rawValue=t.message.data[2]):t.type==="polymodeon"&&(t.type="monomode",t.value=!1,t.rawValue=t.message.data[2]),this.emit(t.type,t)}_parseEventForParameterNumber(e){const t=e.message.dataBytes[0],r=e.message.dataBytes[1];t===99||t===101?(this._nrpnBuffer=[],this._rpnBuffer=[],t===99?this._nrpnBuffer=[e.message]:r!==127&&(this._rpnBuffer=[e.message])):t===98||t===100?t===98?(this._rpnBuffer=[],this._nrpnBuffer.length===1?this._nrpnBuffer.push(e.message):this._nrpnBuffer=[]):(this._nrpnBuffer=[],this._rpnBuffer.length===1&&r!==127?this._rpnBuffer.push(e.message):this._rpnBuffer=[]):(t===6||t===38||t===96||t===97)&&(this._rpnBuffer.length===2?this._dispatchParameterNumberEvent("rpn",this._rpnBuffer[0].dataBytes[1],this._rpnBuffer[1].dataBytes[1],e):this._nrpnBuffer.length===2?this._dispatchParameterNumberEvent("nrpn",this._nrpnBuffer[0].dataBytes[1],this._nrpnBuffer[1].dataBytes[1],e):(this._nrpnBuffer=[],this._rpnBuffer=[]))}_isRpnOrNrpnController(e){return e===6||e===38||e===96||e===97||e===98||e===99||e===100||e===101}_dispatchParameterNumberEvent(e,t,r,s){e=e==="nrpn"?"nrpn":"rpn";const i={target:s.target,timestamp:s.timestamp,message:s.message,parameterMsb:t,parameterLsb:r,value:S.from7bitToFloat(s.message.dataBytes[1]),rawValue:s.message.dataBytes[1]};e==="rpn"?i.parameter=Object.keys(p.REGISTERED_PARAMETERS).find(l=>p.REGISTERED_PARAMETERS[l][0]===t&&p.REGISTERED_PARAMETERS[l][1]===r):i.parameter=(t<<7)+r;const o=p.CONTROL_CHANGE_MESSAGES[s.message.dataBytes[0]].name;i.type=`${e}-${o}`,this.emit(i.type,i);const u=Object.assign({},i);u.type==="nrpn-dataincrement"?u.type="nrpn-databuttonincrement":u.type==="nrpn-datadecrement"?u.type="nrpn-databuttondecrement":u.type==="rpn-dataincrement"?u.type="rpn-databuttonincrement":u.type==="rpn-datadecrement"&&(u.type="rpn-databuttondecrement"),this.emit(u.type,u),i.type=e,i.subtype=o,this.emit(i.type,i)}getChannelModeByNumber(e){return R.validation&&(console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class."),e=Math.floor(e)),S.getChannelModeByNumber(e)}getCcNameByNumber(e){if(R.validation&&(console.warn("The 'getCcNameByNumber()' method has been moved to the 'Utilities' class."),e=parseInt(e),!(e>=0&&e<=127)))throw new RangeError("Invalid control change number.");return S.getCcNameByNumber(e)}getNoteState(e){e instanceof ye&&(e=e.identifier);const t=S.guessNoteNumber(e,R.octaveOffset+this.input.octaveOffset+this.octaveOffset);return this.notesState[t]}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get input(){return this._input}get number(){return this._number}get nrpnEventsEnabled(){return this.parameterNumberEventsEnabled}set nrpnEventsEnabled(e){this.validation&&(e=!!e),this.parameterNumberEventsEnabled=e}}/**
 * The `Message` class represents a single MIDI message. It has several properties that make it
 * easy to make sense of the binary data it contains.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class Bn{constructor(e){this.rawData=e,this.data=Array.from(this.rawData),this.statusByte=this.rawData[0],this.rawDataBytes=this.rawData.slice(1),this.dataBytes=this.data.slice(1),this.isChannelMessage=!1,this.isSystemMessage=!1,this.command=void 0,this.channel=void 0,this.manufacturerId=void 0,this.type=void 0,this.statusByte<240?(this.isChannelMessage=!0,this.command=this.statusByte>>4,this.channel=(this.statusByte&15)+1):(this.isSystemMessage=!0,this.command=this.statusByte),this.isChannelMessage?this.type=S.getPropertyByValue(p.CHANNEL_MESSAGES,this.command):this.isSystemMessage&&(this.type=S.getPropertyByValue(p.SYSTEM_MESSAGES,this.command)),this.statusByte===p.SYSTEM_MESSAGES.sysex&&(this.dataBytes[0]===0?(this.manufacturerId=this.dataBytes.slice(0,3),this.dataBytes=this.dataBytes.slice(3,this.rawDataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(3,this.rawDataBytes.length-1)):(this.manufacturerId=[this.dataBytes[0]],this.dataBytes=this.dataBytes.slice(1,this.dataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(1,this.rawDataBytes.length-1)))}}/**
 * The `Input` class represents a single MIDI input port. This object is automatically instantiated
 * by the library according to the host's MIDI subsystem and does not need to be directly
 * instantiated. Instead, you can access all `Input` objects by referring to the
 * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as
 * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and
 * [`WebMidi.getInputById()`](WebMidi#getInputById).
 *
 * Note that a single MIDI device may expose several inputs and/or outputs.
 *
 * **Important**: the `Input` class does not directly fire channel-specific MIDI messages
 * (such as [`noteon`](InputChannel#event:noteon) or
 * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)
 * object does that. However, you can still use the
 * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple
 * [`InputChannel`](InputChannel) objects at once.
 *
 * @fires Input#opened
 * @fires Input#disconnected
 * @fires Input#closed
 * @fires Input#midimessage
 *
 * @fires Input#sysex
 * @fires Input#timecode
 * @fires Input#songposition
 * @fires Input#songselect
 * @fires Input#tunerequest
 * @fires Input#clock
 * @fires Input#start
 * @fires Input#continue
 * @fires Input#stop
 * @fires Input#activesensing
 * @fires Input#reset
 *
 * @fires Input#unknownmidimessage
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class ai extends he{constructor(e){super(),this._midiInput=e,this._octaveOffset=0,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new ii(this,t);this._forwarders=[],this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._forwarders=[],this._midiInput&&(this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null),await this.close(),this._midiInput=null}_onStateChange(e){let t={timestamp:R.time,target:this,port:this};e.port.connection==="open"?(t.type="opened",this.emit("opened",t)):e.port.connection==="closed"&&e.port.state==="connected"?(t.type="closed",this.emit("closed",t)):e.port.connection==="closed"&&e.port.state==="disconnected"?(t.type="disconnected",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):e.port.connection==="pending"&&e.port.state==="disconnected"||console.warn("This statechange event was not caught: ",e.port.connection,e.port.state)}_onMidiMessage(e){const t=new Bn(e.data),r={port:this,target:this,message:t,timestamp:e.timeStamp,type:"midimessage",data:t.data,rawData:t.data,statusByte:t.data[0],dataBytes:t.dataBytes};this.emit("midimessage",r),t.isSystemMessage?this._parseEvent(r):t.isChannelMessage&&this.channels[t.channel]._processMidiMessageEvent(r),this._forwarders.forEach(s=>s.forward(t))}_parseEvent(e){const t=Object.assign({},e);t.type=t.message.type||"unknownmidimessage",t.type==="songselect"&&(t.song=e.data[1]+1,t.value=e.data[1],t.rawValue=t.value),this.emit(t.type,t)}async open(){try{await this._midiInput.open()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}async close(){if(!this._midiInput)return Promise.resolve(this);try{await this._midiInput.close()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}getChannelModeByNumber(){R.validation&&console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.")}addListener(e,t,r={}){if(R.validation&&typeof r=="function"){let s=t!=null?[].concat(t):void 0;t=r,r={channels:s}}if(p.CHANNEL_EVENTS.includes(e)){r.channels===void 0&&(r.channels=p.MIDI_CHANNEL_NUMBERS);let s=[];return S.sanitizeChannels(r.channels).forEach(i=>{s.push(this.channels[i].addListener(e,t,r))}),s}else return super.addListener(e,t,r)}addOneTimeListener(e,t,r={}){return r.remaining=1,this.addListener(e,t,r)}on(e,t,r,s){return this.addListener(e,t,r,s)}hasListener(e,t,r={}){if(R.validation&&typeof r=="function"){let s=[].concat(t);t=r,r={channels:s}}return p.CHANNEL_EVENTS.includes(e)?(r.channels===void 0&&(r.channels=p.MIDI_CHANNEL_NUMBERS),S.sanitizeChannels(r.channels).every(s=>this.channels[s].hasListener(e,t))):super.hasListener(e,t)}removeListener(e,t,r={}){if(R.validation&&typeof r=="function"){let s=[].concat(t);t=r,r={channels:s}}if(r.channels===void 0&&(r.channels=p.MIDI_CHANNEL_NUMBERS),e==null)return S.sanitizeChannels(r.channels).forEach(s=>{this.channels[s]&&this.channels[s].removeListener()}),super.removeListener();p.CHANNEL_EVENTS.includes(e)?S.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].removeListener(e,t,r)}):super.removeListener(e,t,r)}addForwarder(e,t={}){let r;return e instanceof ln?r=e:r=new ln(e,t),this._forwarders.push(r),r}removeForwarder(e){this._forwarders=this._forwarders.filter(t=>t!==e)}hasForwarder(e){return this._forwarders.includes(e)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return R.validation&&console.warn("The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class."),!1}}/**
 * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it
 * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.
 *
 * When using the WebMidi.js library, you should know that the `WebMidi` class has already been
 * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should
 * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6
 * module) version, you get an already-instantiated object when you import the module.
 *
 * @fires WebMidi#connected
 * @fires WebMidi#disabled
 * @fires WebMidi#disconnected
 * @fires WebMidi#enabled
 * @fires WebMidi#error
 * @fires WebMidi#midiaccessgranted
 * @fires WebMidi#portschanged
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class oi extends he{constructor(){super(),this.defaults={note:{attack:S.from7bitToFloat(64),release:S.from7bitToFloat(64),duration:1/0}},this.interface=null,this.validation=!0,this._inputs=[],this._disconnectedInputs=[],this._outputs=[],this._disconnectedOutputs=[],this._stateChangeQueue=[],this._octaveOffset=0}async enable(e={},t=!1){if(S.isNode)try{window.navigator}catch{let u=await Object.getPrototypeOf(async function(){}).constructor(`
        let jzz = await import("jzz");
        return jzz.default;
        `)();global.navigator||(global.navigator={}),Object.assign(global.navigator,u)}if(this.validation=e.validation!==!1,this.validation&&(typeof e=="function"&&(e={callback:e,sysex:t}),t&&(e.sysex=!0)),this.enabled)return typeof e.callback=="function"&&e.callback(),Promise.resolve();const r={timestamp:this.time,target:this,type:"error",error:void 0},s={timestamp:this.time,target:this,type:"midiaccessgranted"},i={timestamp:this.time,target:this,type:"enabled"};try{typeof e.requestMIDIAccessFunction=="function"?this.interface=await e.requestMIDIAccessFunction({sysex:e.sysex,software:e.software}):this.interface=await navigator.requestMIDIAccess({sysex:e.sysex,software:e.software})}catch(o){return r.error=o,this.emit("error",r),typeof e.callback=="function"&&e.callback(o),Promise.reject(o)}this.emit("midiaccessgranted",s),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{await this._updateInputsAndOutputs()}catch(o){return r.error=o,this.emit("error",r),typeof e.callback=="function"&&e.callback(o),Promise.reject(o)}return this.emit("enabled",i),typeof e.callback=="function"&&e.callback(),Promise.resolve(this)}async disable(){return this.interface&&(this.interface.onstatechange=void 0),this._destroyInputsAndOutputs().then(()=>{navigator&&typeof navigator.close=="function"&&navigator.close(),this.interface=null;let e={timestamp:this.time,target:this,type:"disabled"};this.emit("disabled",e),this.removeListener()})}getInputById(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return}if(t.disconnected){for(let r=0;r<this._disconnectedInputs.length;r++)if(this._disconnectedInputs[r].id===e.toString())return this._disconnectedInputs[r]}else for(let r=0;r<this.inputs.length;r++)if(this.inputs[r].id===e.toString())return this.inputs[r]}getInputByName(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return;e=e.toString()}if(t.disconnected){for(let r=0;r<this._disconnectedInputs.length;r++)if(~this._disconnectedInputs[r].name.indexOf(e))return this._disconnectedInputs[r]}else for(let r=0;r<this.inputs.length;r++)if(~this.inputs[r].name.indexOf(e))return this.inputs[r]}getOutputByName(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return;e=e.toString()}if(t.disconnected){for(let r=0;r<this._disconnectedOutputs.length;r++)if(~this._disconnectedOutputs[r].name.indexOf(e))return this._disconnectedOutputs[r]}else for(let r=0;r<this.outputs.length;r++)if(~this.outputs[r].name.indexOf(e))return this.outputs[r]}getOutputById(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return}if(t.disconnected){for(let r=0;r<this._disconnectedOutputs.length;r++)if(this._disconnectedOutputs[r].id===e.toString())return this._disconnectedOutputs[r]}else for(let r=0;r<this.outputs.length;r++)if(this.outputs[r].id===e.toString())return this.outputs[r]}noteNameToNumber(e){return this.validation&&console.warn("The noteNameToNumber() method is deprecated. Use Utilities.toNoteNumber() instead."),S.toNoteNumber(e,this.octaveOffset)}getOctave(e){return this.validation&&(console.warn("The getOctave()is deprecated. Use Utilities.getNoteDetails() instead"),e=parseInt(e)),!isNaN(e)&&e>=0&&e<=127?S.getNoteDetails(S.offsetNumber(e,this.octaveOffset)).octave:!1}sanitizeChannels(e){return this.validation&&console.warn("The sanitizeChannels() method has been moved to the utilities class."),S.sanitizeChannels(e)}toMIDIChannels(e){return this.validation&&console.warn("The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead."),S.sanitizeChannels(e)}guessNoteNumber(e){return this.validation&&console.warn("The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead."),S.guessNoteNumber(e,this.octaveOffset)}getValidNoteArray(e,t={}){return this.validation&&console.warn("The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()"),S.buildNoteArray(e,t)}convertToTimestamp(e){return this.validation&&console.warn("The convertToTimestamp() method has been moved to Utilities.toTimestamp()."),S.toTimestamp(e)}async _destroyInputsAndOutputs(){let e=[];return this.inputs.forEach(t=>e.push(t.destroy())),this.outputs.forEach(t=>e.push(t.destroy())),Promise.all(e).then(()=>{this._inputs=[],this._outputs=[]})}_onInterfaceStateChange(e){this._updateInputsAndOutputs();let t={timestamp:e.timeStamp,type:e.port.state,target:this};if(e.port.state==="connected"&&e.port.connection==="open"){e.port.type==="output"?t.port=this.getOutputById(e.port.id):e.port.type==="input"&&(t.port=this.getInputById(e.port.id)),this.emit(e.port.state,t);const r=Object.assign({},t);r.type="portschanged",this.emit(r.type,r)}else if(e.port.state==="disconnected"&&e.port.connection==="pending"){e.port.type==="input"?t.port=this.getInputById(e.port.id,{disconnected:!0}):e.port.type==="output"&&(t.port=this.getOutputById(e.port.id,{disconnected:!0})),this.emit(e.port.state,t);const r=Object.assign({},t);r.type="portschanged",this.emit(r.type,r)}}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){if(!this.interface)return;for(let t=this._inputs.length-1;t>=0;t--){const r=this._inputs[t];Array.from(this.interface.inputs.values()).find(i=>i===r._midiInput)||(this._disconnectedInputs.push(r),this._inputs.splice(t,1))}let e=[];return this.interface.inputs.forEach(t=>{if(!this._inputs.find(r=>r._midiInput===t)){let r=this._disconnectedInputs.find(s=>s._midiInput===t);r||(r=new ai(t)),this._inputs.push(r),e.push(r.open())}}),Promise.all(e)}async _updateOutputs(){if(!this.interface)return;for(let t=this._outputs.length-1;t>=0;t--){const r=this._outputs[t];Array.from(this.interface.outputs.values()).find(i=>i===r._midiOutput)||(this._disconnectedOutputs.push(r),this._outputs.splice(t,1))}let e=[];return this.interface.outputs.forEach(t=>{if(!this._outputs.find(r=>r._midiOutput===t)){let r=this._disconnectedOutputs.find(s=>s._midiOutput===t);r||(r=new Yt(t)),this._outputs.push(r),e.push(r.open())}}),Promise.all(e)}get enabled(){return this.interface!==null}get inputs(){return this._inputs}get isNode(){return this.validation&&console.warn("WebMidi.isNode has been deprecated. Use Utilities.isNode instead."),S.isNode}get isBrowser(){return this.validation&&console.warn("WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead."),S.isBrowser}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get outputs(){return this._outputs}get supported(){return typeof navigator<"u"&&!!navigator.requestMIDIAccess}get sysexEnabled(){return!!(this.interface&&this.interface.sysexEnabled)}get time(){return performance.now()}get version(){return"3.1.12"}get flavour(){return"esm"}get CHANNEL_EVENTS(){return this.validation&&console.warn("The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS."),p.CHANNEL_EVENTS}get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn("The MIDI_SYSTEM_MESSAGES enum has been moved to Enumerations.SYSTEM_MESSAGES."),p.SYSTEM_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to Enumerations.CHANNEL_MODE_MESSAGES."),p.CHANNEL_MODE_MESSAGES}get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn("The MIDI_CONTROL_CHANGE_MESSAGES enum has been replaced by the Enumerations.CONTROL_CHANGE_MESSAGES array."),p.MIDI_CONTROL_CHANGE_MESSAGES}get MIDI_REGISTERED_PARAMETER(){return this.validation&&console.warn("The MIDI_REGISTERED_PARAMETER enum has been moved to Enumerations.REGISTERED_PARAMETERS."),p.REGISTERED_PARAMETERS}get NOTES(){return this.validation&&console.warn("The NOTES enum has been deprecated."),["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}}const R=new oi;R.constructor=null;const He=(...n)=>{},li=[{name:"unknown",controlCount:0,capabilities:{}},{name:"Oxion development board",controlCount:4,capabilities:{led:!0}},{name:"16n",controlCount:16,capabilities:{i2c:!0,led:!0,faderCalibration:!0,highResolution:"2.2.0"},latestFirmwareVersion:"2.1.1",firmwareUrl:"https://github.com/16n-faderbank/16n/releases/latest"},{name:"16n (LC)",controlCount:16,capabilities:{i2c:!0,led:!0,faderCalibration:!0,highResolution:"2.2.0"},sendShortMessages:!0,latestFirmwareVersion:"2.1.1",firmwareUrl:"https://github.com/16n-faderbank/16n/releases/latest"},{name:"16rx",controlCount:16,capabilities:{i2c:!0,led:!0,highResolution:"3.1.0"},latestFirmwareVersion:"3.0.3",firmwareUrl:"https://github.com/16n-faderbank/16next_firmware/releases/latest"},{name:"16nx",controlCount:16,capabilities:{i2c:!0,led:!0,highResolution:"3.1.0"},latestFirmwareVersion:"3.0.3",firmwareUrl:"https://github.com/16n-faderbank/16next_firmware/releases/latest"}],Un=(n,e)=>{let t=n.ledOn==e.ledOn&&n.ledFlash==e.ledFlash&&n.controllerFlip==e.controllerFlip&&n.midiThru==e.midiThru;("i2cLeader"in n||"i2cLeader"in e)&&(t=t&&n.i2cLeader==e.i2cLeader),("faderMax"in n||"faderMax"in e)&&(t=t&&n.faderMax==e.faderMax&&n.faderMin==e.faderMin);let r=!0,s=!0;return n.usbControls.forEach((i,o)=>{const u=e.usbControls[o];(i.channel!=u.channel||i.cc!=u.cc||i.highResolution!=u.highResolution)&&(r=!1)}),n.trsControls.forEach((i,o)=>{const u=e.trsControls[o];(i.channel!=u.channel||i.cc!=u.cc||i.highResolution!=u.highResolution)&&(s=!1)}),t&&r&&s},De=n=>{const e=Array.from({length:84},()=>0),t=n.firmwareVersion.trim().split(".").map(c=>parseInt(c));e[0]=n.deviceId,e[1]=t[0],e[2]=t[1],e[3]=t[2],e[4]=n.ledOn?1:0,e[5]=n.ledFlash?1:0,e[6]=n.controllerFlip?1:0,e[7]=n.i2cLeader?1:0;const r=n.faderMin>>7,s=n.faderMin-(r<<7);e[8]=s,e[9]=r;const i=n.faderMax>>7,o=n.faderMax-(i<<7);e[10]=o,e[11]=i,e[12]=n.midiThru?1:0;const u=20,l=36,a=52,d=68;if(n.usbControls.forEach((c,h)=>{e[h+u]=c.channel,e[h+a]=c.cc}),n.trsControls.forEach((c,h)=>{e[h+l]=c.channel,e[h+d]=c.cc}),ge(ue(n.deviceId),"highResolution",t.join("."))){const m=un(n.usbControls),f=un(n.trsControls);m.forEach((y,_)=>{e[84+_]=m[_]}),f.forEach((y,_)=>{e[87+_]=f[_]})}return e},ci=n=>De(n).slice(4,20),ui=n=>{const e=De(n),t=e.slice(20,36),r=e.slice(52,68);return t.concat(r)},di=n=>{const e=De(n),t=e.slice(36,52),r=e.slice(68,84);return t.concat(r)},fi=n=>{const e={...n},t=ue(n.deviceId).controlCount;return e.usbControls=e.usbControls.splice(0,t),e.usbControls.forEach(r=>delete r.val),e.trsControls=e.trsControls.splice(0,t),JSON.stringify(e,null,2)},hi=(n,e)=>e.deviceId!=n.deviceId?`Cannot update - this data file is for a ${ue(e.deviceId).name}, but you are trying to install it on a ${ue(n.deviceId).name} `:!1,mi=(n,e)=>(Object.keys(e).forEach(t=>{n[t]=e[t]}),n),pi=n=>{const t=n[5],r=n[6]+"."+n[7]+"."+n[8],s=n[9]==1,i=n[10]==1,o=n[11]==1,u=n[12]==1,l=n[13],d=(n[14]<<7)+l,c=n[15],m=(n[16]<<7)+c,f=n[17]==1,y=[],_=[];n.slice(25,41).forEach((I,T)=>{I!=127&&(y[T]={channel:I})}),n.slice(41,57).forEach((I,T)=>{I!=127&&(_[T]={channel:I})}),n.slice(57,73).forEach((I,T)=>{I!=127&&(y[T].cc=I)}),n.slice(73,89).forEach((I,T)=>{I!=127&&(_[T].cc=I)}),y.forEach(I=>I.val=0);const N=ue(t);let g=Array.from(Array(16)).map(()=>!1),E=Array.from(Array(16)).map(()=>!1);if(N&&ge(N,"highResolution",r)){const I=n.slice(89,92);g=cn(I),y.forEach((A,x)=>{A.highResolution=g[x]});const T=n.slice(92,95);E=cn(T),_.forEach((A,x)=>{A.highResolution=E[x]})}return{ledOn:s,ledFlash:i,controllerFlip:o,midiThru:f,usbControls:y,trsControls:_,deviceId:t,firmwareVersion:r,i2cLeader:u,faderMin:d,faderMax:m,usbHighResolution:g,trsHighResolution:E}},cn=n=>{let e=0;for(let r=0;r<3;r++){const s=r==2?3:127;e|=(n[r]&s)<<7*r}const t=[];for(let r=0;r<16;r++)t.push((e&1<<r)!==0);return t},un=n=>{let e=0;return n.forEach((t,r)=>{t.highResolution&&(e|=1<<r)}),[e&127,e>>7&127,e>>14&3]},ue=n=>li[n],ge=(n,e,t)=>{if(n)return n.capabilities[e]?n.capabilities[e]===!0?!0:we.gte(t,n.capabilities[e]):!1},ne={sysexMfgId:[125,0,0],requestInfoMsg:31,updateConfigMsg:14,updateDeviceOptionsMsg:13,updateUSBOptionsMessage:12,updateTRSOptionsMessage:11,factoryResetMsg:26},Ei=n=>n[1]==ne.sysexMfgId[0]&&n[2]==ne.sysexMfgId[1]&&n[3]==ne.sysexMfgId[2],vi=(n,e)=>{ue(n.deviceId).sendShortMessages?bi(n,e):gi(n,e)},gi=(n,e)=>{e.sendSysex(ne.sysexMfgId,[ne.updateConfigMsg,...De(n)])},bi=(n,e)=>{e.sendSysex(ne.sysexMfgId,[ne.updateDeviceOptionsMsg,...ci(n)]),e.sendSysex(ne.sysexMfgId,[ne.updateUSBOptionsMessage,...ui(n)]),e.sendSysex(ne.sysexMfgId,[ne.updateTRSOptionsMessage,...di(n)])},ar=n=>{n.sendSysex(ne.sysexMfgId,[ne.requestInfoMsg])},Gn=n=>{n.sendSysex(ne.sysexMfgId,[ne.factoryResetMsg])},b=Jt({current:null,controllerMightNeedFactoryReset:!1,editing:null,editMode:!1}),F=Jt({inputs:[],outputs:[],selectedInput:null,selectedOutput:null,webMidiEnabled:!1});let Fe=-1;const Ht=()=>R.inputs.sort(Fn),Vt=()=>R.outputs.sort(Fn),Fn=(n,e)=>{const t=`${n.manufacturer} ${n.name}`,r=`${e.manufacturer} ${e.name}`;return t<r?-1:t>r?1:0},_i=()=>{F.webMidiEnabled=!0,Ni()},Ni=()=>{F.inputs=[...Ht()],F.outputs=[...Vt()],ke(),R.addListener("connected",()=>{F.inputs=[...Ht()],F.outputs=[...Vt()],ke()}),R.addListener("disconnected",()=>{F.inputs=[...Ht()],F.outputs=[...Vt()],F.selectedInput=null,F.selectedOutput=null,b.current=null,ke()}),setInterval(()=>{ke()},5e3)},ke=()=>{if(!F.selectedInput&&F.inputs.length>0){const n=F.inputs.find(e=>e.name.match(/.*16n.*/));n&&(F.selectedInput=n)}if(!F.selectedOutput&&F.outputs.length>0){const n=F.outputs.find(e=>e.name.match(/.*16n.*/));n&&(F.selectedOutput=n)}!b.current&&F.selectedInput&&F.selectedOutput&&(Hn(F.selectedInput),Vn(F.selectedInput),Xt())},yi=n=>{b.current&&b.current.usbControls.forEach(e=>{n.message.channel==e.channel&&n.controller.number==e.cc&&(e.msb=n.rawValue),e.highResolution&&n.message.channel==e.channel&&n.controller.number==e.cc+32&&(e.lsb=n.rawValue),e.highResolution&&e.msb?e.val=(e.msb<<7)+e.lsb:e.val=e.msb})},Hn=n=>{n.addListener("controlchange",yi)},Vn=n=>{n.addListener("sysex",e=>{const t=e.message.data;Ei(t)&&t[4]==15&&(b.current=pi(t),He("Received config",b.current),Fe=-1,b.controllerMightNeedFactoryReset=!1)}),He("Attached sysex listener to ",n.name)},Xt=()=>{Fe<0&&(Fe=Date.now()),Date.now()-Fe>8e3&&(b.controllerMightNeedFactoryReset||(b.controllerMightNeedFactoryReset=!0));const n=F.selectedInput,e=F.selectedOutput;n&&e&&(He("Requesting config over "+e.name),He("Hoping to receive on "+n.name),ar(e))};var Ri=U("<span></span>");function Si(n,e){let t=Ie(e,"classList",3,"");var r=Ri();ce(()=>Mn(r,`fas fa-${e.i??""} ${t()??""} svelte-pvbvkq`)),w(n,r)}var Ii=U('<div class="button-wrapper svelte-1qu28ag"><button class="svelte-1qu28ag"><!> <!></button></div>');function de(n,e){se(e,!0);let t=Ie(e,"icon",3,""),r=Ie(e,"disabled",3,!1);var s=Ii(),i=H(s);i.__click=function(...a){var d;(d=e.onclick)==null||d.apply(this,a)};var o=H(i);{var u=a=>{Si(a,{get i(){return t()}})};z(o,a=>{t()&&t().trim()!==""&&a(u)})}var l=P(o,2);_e(l,()=>e.children),B(i),B(s),ce(()=>i.disabled=r()),w(n,s),ie()}Zt(["click"]);var wi=U('<span class="upgrade svelte-ykry5x"> <a>Download</a></span>'),Ci=U('<p class="device svelte-ykry5x">Connected: <strong> </strong> running firmware <strong> </strong> <!></p>'),Ai=U('<p class="device svelte-ykry5x">No device connected.</p>'),Mi=U('<div class="details svelte-ykry5x"><!></div>');function Ti(n,e){se(e,!0);let t=jt(""),r=jt(""),s=!1;Kt(()=>{if(b.current&&b.current.firmwareVersion&&b.current.deviceId&&!s){s=!0;const l=ue(b.current.deviceId);l.latestFirmwareVersion&&we.gt(l.latestFirmwareVersion,b.current.firmwareVersion)?(Ne(t,`A new version of the ${l.name} firmware (${l.latestFirmwareVersion}) is available.`),Ne(r,Jt(l.firmwareUrl||""))):(Ne(t,""),Ne(r,""))}});var i=oe(),o=j(i);{var u=l=>{var a=Mi(),d=H(a);{var c=m=>{var f=Ci(),y=P(H(f)),_=H(y,!0);ce(()=>fe(_,ue(b.current.deviceId).name)),B(y);var N=P(y,2),g=H(N,!0);B(N);var E=P(N,2);{var I=T=>{var A=wi(),x=H(A),M=P(x);B(A),ce(()=>{fe(x,`${G(t)??""} `),be(M,"href",G(r))}),w(T,A)};z(E,T=>{G(t).trim()!=""&&T(I)})}B(f),ce(()=>fe(g,b.current.firmwareVersion)),w(m,f)},h=m=>{var f=Ai();w(m,f)};z(d,m=>{b.current?m(c):m(h,!1)})}B(a),w(l,a)};z(o,l=>{F.webMidiEnabled&&l(u)})}w(n,i),ie()}var Oi=U('<p><label><input type="checkbox"> <!></label></p>');function Be(n,e){se(e,!0);let t=Ie(e,"checked",15);var r=Oi(),s=H(r),i=H(s);$e(i);var o=P(i,2);{var u=l=>{var a=oe(),d=j(a);_e(d,()=>e.children),w(l,a)};z(o,l=>{e.children&&l(u)})}B(s),B(r),Tn(i,t),w(n,r),ie()}var Li=U("<!> <!>",1),$i=U(`<hr> <h3>Fader Minimum/Maximum calibration</h3> <div><label for="faderMin" class="svelte-idpdcv">Fader Minimum raw value</label> <input name="faderMin" type="number" min="0"></div> <div><label for="faderMax" class="svelte-idpdcv">Fader Maximum raw value</label> <input name="faderMax" type="number" min="0"></div> <p class="note svelte-idpdcv">You shouldn't touch this unless you are having issues with your faders
      either reaching <code>127</code> before the end of their travel, or not at all.<br><br> "Raw" analog values are read from the faders between 0 and 8192. Bring the
      fader maximum down until all faders smoothly travel from 0 to 127 on the debug
      view (bearing in mind there is a small dead zone at either end of a fader).</p>`,1),xi=U(`<hr> <h3>I2C Leader/Follower</h3> <select><option>Follower</option><option>Leader</option></select> <p class="note svelte-idpdcv"><strong>Follower</strong> mode is for use with Teletype.</p> <p class="note svelte-idpdcv"><strong>Leader</strong> mode is for use with Ansible, TXo, ER-301. 16n will
      not respond to Teletype when in leader mode.</p> <p class="note svelte-idpdcv">This will not take effect until you restart (disconnect/reconnect) your
      16n.</p> <p class="note small svelte-idpdcv">("Leader" is sometimes also referred to as 'master' mode)</p>`,1),Di=U("<!> <!> <!> <!> <!>",1);function Pi(n,e){se(e,!0);let t=Ee(()=>b.current&&ue(b.current.deviceId));var r=oe(),s=j(r);{var i=o=>{var u=Di(),l=j(u);{var a=N=>{var g=Li(),E=j(g);Be(E,{get checked(){return b.editing.ledOn},set checked(T){b.editing.ledOn=T},children:(T,A)=>{W();var x=Z("LED permanently on when powered");w(T,x)},$$slots:{default:!0}});var I=P(E,2);Be(I,{get checked(){return b.editing.ledFlash},set checked(T){b.editing.ledFlash=T},children:(T,A)=>{W();var x=Z("LED flash on MIDI activity");w(T,x)},$$slots:{default:!0}}),w(N,g)};z(l,N=>{ge(G(t),"led",b.current.firmwareVersion)&&N(a)})}var d=P(l,2);Be(d,{get checked(){return b.editing.controllerFlip},set checked(N){b.editing.controllerFlip=N},children:(N,g)=>{W();var E=Z("Rotate controller 180º");w(N,E)},$$slots:{default:!0}});var c=P(d,2);{var h=N=>{Be(N,{get checked(){return b.editing.midiThru},set checked(g){b.editing.midiThru=g},children:(g,E)=>{W();var I=Z("Soft MIDI thru (echo MIDI clock/note data sent to USB out of the minijack)");w(g,I)},$$slots:{default:!0}})};z(c,N=>{we.gte(b.current.firmwareVersion,"2.1.0")&&N(h)})}var m=P(c,2);{var f=N=>{var g=$i(),E=P(j(g),4),I=P(H(E),2);$e(I),be(I,"max",8191),B(E);var T=P(E,2),A=P(H(T),2);$e(A),be(A,"max",8191),B(T),W(2),zt(I,()=>b.editing.faderMin,x=>b.editing.faderMin=x),zt(A,()=>b.editing.faderMax,x=>b.editing.faderMax=x),w(N,g)};z(m,N=>{ge(G(t),"faderCalibration",b.current.firmwareVersion)&&N(f)})}var y=P(m,2);{var _=N=>{var g=xi(),E=P(j(g),4),I=H(E);I.value=(I.__value=!1)==null?"":!1;var T=P(I);T.value=(T.__value=!0)==null?"":!0,B(E),W(8),Ln(E,()=>b.editing.i2cLeader,A=>b.editing.i2cLeader=A),w(N,g)};z(y,N=>{ge(G(t),"i2c",b.current.firmwareVersion)&&N(_)})}w(o,u)};z(s,o=>{b.current&&b.editing&&G(t)&&o(i)})}w(n,r),ie()}const ki=(n,e)=>{e(e().highResolution=!e().highResolution,!0)};var Bi=U("<option> </option>"),Ui=U('<dt class="hr-title svelte-1fipzis">High Resolution?</dt> <dd class="svelte-1fipzis"><input type="checkbox" class="svelte-1fipzis"></dd>',1),Gi=U('<dl class="config-column svelte-1fipzis"><dt class="index svelte-1fipzis"> </dt> <dt class="no-top-border svelte-1fipzis">Channel</dt> <dd class="svelte-1fipzis"><select class="svelte-1fipzis"></select></dd> <dt class="svelte-1fipzis">CC</dt> <dd class="svelte-1fipzis"><input type="number" min="0" class="svelte-1fipzis"></dd> <!></dl>');function dn(n,e){se(e,!0);let t=Ie(e,"editControl",15),r=Ee(()=>t().highResolution?95:127),s=Ee(()=>b.editing?ue(b.editing.deviceId):null),i=Ee(()=>G(s)&&b.editing&&ge(G(s),"highResolution",b.editing.firmwareVersion));const o=Array.from({length:16},(g,E)=>E+1),u=g=>{const E=g.target;parseInt(E.value)<0&&t(t().cc=0,!0),parseInt(E.value)>G(r)&&t(t().cc=G(r),!0)},l=()=>{t().cc>G(r)&&t(t().cc=G(r),!0)};var a=Gi(),d=H(a),c=H(d,!0);B(d);var h=P(d,4),m=H(h);Le(m,21,()=>o,Oe,(g,E)=>{var I=Bi(),T={},A=H(I,!0);B(I),ce(()=>{T!==(T=G(E))&&(I.value=(I.__value=G(E))==null?"":G(E)),fe(A,G(E))}),w(g,I)}),B(m),B(h);var f=P(h,4),y=H(f);$e(y),y.__change=u,B(f);var _=P(f,2);{var N=g=>{var E=Ui(),I=j(E);I.__click=[ki,t];var T=P(I,2),A=H(T);$e(A),A.__change=l,B(T),dr("blur",A,l),Tn(A,()=>t().highResolution,x=>t(t().highResolution=x,!0)),w(g,E)};z(_,g=>{G(i)&&g(N)})}B(a),ce(()=>{fe(c,e.index+1),be(y,"max",G(r))}),Ln(m,()=>t().channel,g=>t(t().channel=g,!0)),dr("blur",y,u),zt(y,()=>t().cc,g=>t(t().cc=g,!0)),w(n,a),ie()}Zt(["change","click"]);var fn=Ls(()=>b),Fi=U(`<p>"Factory Reset" will reset the configuration of your 16n back to 'default'
  values; primarily, MIDI CCs 32-48, Channel 1, for both TRS and USB MIDI.</p> <p>Note that this will also reset any calibration data or other options you may
  have adjusted on the "Device Options" tab. You will need to repeat this
  configuration after performing a reset.</p> <!>`,1);function Hi(n,e){se(e,!1);const t="Confirm that you wish to reset your controller configuration to the default values. You will lose any configuration stored on the controller.",r=()=>{F.selectedOutput&&confirm(t)&&(fn(fn().editMode=!1),Gn(F.selectedOutput),setTimeout(()=>{F.selectedOutput&&ar(F.selectedOutput)},50))};_s();var s=Fi(),i=P(j(s),4);de(i,{icon:"history",onclick:r,$$events:{message(o){$n.call(this,e,o)}},children:(o,u)=>{W();var l=Z("Reset controller configuration to defaults");w(o,l)},$$slots:{default:!0}}),w(n,s),ie()}var Vi=U('<div class="subhead svelte-1o2kpty"><h2 class="svelte-1o2kpty"> </h2> <div class="details svelte-1o2kpty"><!></div></div>');function qn(n,e){se(e,!0);var t=Vi(),r=H(t),s=H(r,!0);B(r);var i=P(r,2),o=H(i);{var u=l=>{var a=oe(),d=j(a);_e(d,()=>e.children),w(l,a)};z(o,l=>{e.children&&l(u)})}B(i),B(t),ce(()=>fe(s,e.title)),w(n,t),ie()}const or={};var qi=U('<div class="tabs"><!></div>');function jn(n,e){se(e,!0);const t=[],r=[],s=fr(null),i=fr(null);Es(or,{registerTab:l=>{t.push(l),s.update(a=>a||l),ur(()=>{const a=t.indexOf(l);t.splice(a,1),s.update(d=>d===l?t[a]||t[t.length-1]:d)})},registerPanel:l=>{r.push(l),i.update(a=>a||l),ur(()=>{const a=r.indexOf(l);r.splice(a,1),i.update(d=>d===l?r[a]||r[r.length-1]:d)})},selectTab:l=>{const a=t.indexOf(l);s.set(l),i.set(r[a])},selectedTab:s,selectedPanel:i});var o=qi(),u=H(o);_e(u,()=>e.children??yn),B(o),w(n,o),ie()}var ji=U('<div class="tab-list svelte-1c799zm"><!></div>');function zn(n,e){se(e,!0);var t=ji(),r=H(t);{var s=i=>{var o=oe(),u=j(o);_e(u,()=>e.children),w(i,o)};z(r,i=>{e.children&&i(s)})}B(t),w(n,t),ie()}function Re(n,e){se(e,!0);const t=Sn(),r=()=>In(o,"$selectedPanel",t),s={},{registerPanel:i,selectedPanel:o}=Rn(or);i(s);var u=oe(),l=j(u);{var a=d=>{var c=oe(),h=j(c);_e(h,()=>e.children),w(d,c)};z(l,d=>{e.children&&r()===s&&d(a)})}w(n,u),ie()}var zi=(n,e,t)=>e(t),Yi=U('<button class="svelte-1rryekj"><!></button>');function Se(n,e){se(e,!0);const t=Sn(),r=()=>In(u,"$selectedTab",t),s={},{registerTab:i,selectTab:o,selectedTab:u}=Rn(or);i(s);var l=Yi();l.__click=[zi,o,s];var a=H(l);_e(a,()=>e.children??yn),B(l),ce(()=>Ms(l,"selected",r()===s)),w(n,l),ie()}Zt(["click"]);const Xi=(n,e)=>{const t=document.createElement("input");t.type="file",t.id="uploadedConfig",t.addEventListener("change",r=>{const s=r.target.files;if(s&&s.length>0){const i=s[0],o=new FileReader;o.addEventListener("load",()=>{const u=JSON.parse(o.result),l=hi(n,u);if(l){alert(l);return}else b.editing=mi(n,u),Un(n,e)?alert("Imported configuration is identical to currently loaded configuration; no changes to upload."):alert("New configuration imported. Choose 'update controller' to import, or 'Cancel' to abort")}),o.readAsText(i)}}),t.click(),t.remove()},Wi=n=>{const e="data:text/json;charset=utf-8,"+encodeURIComponent(fi(n)),t=document.createElement("a");t.href=e,t.download=`${ue(n.deviceId).name}_controller_config.json`,document.body.appendChild(t),t.click(),t.remove()};var Ki=U("<p>The MIDI standard for a continuous controller sends 7-bit data - 0-127.</p> <p>“High resolution” CC data can send 14-bit data (0-16384).</p> <p>However: <strong>support for this is very limited</strong>. <em>If</em> you know you need it or can use it, go ahead, it’ll work. Both Ableton and Bitwig support this automatically - map a controller to a high-resolution MIDI output and it will automatically realise it’s 14-bit.</p> <p>If you think it sounds cool, but don’t know if your instruments or tools support it: you probably want to send standard 7-bit data. <strong>Don’t just click high resolution because it sounds better.</strong> Unless you know it’ll work, it might have unintended consequences.</p> <h4>How high-resolution CCs work</h4> <p>The 14 bits of data are split into two chunks, MSB/LSB style: one 7-bit chunk for bits 8-14, and one for bits 1-7. The higher significant chunk is sent on continuous controller number <code>x</code>; the lower significant chunk is sent on <code>x+32</code>. For instance, if you set a controller to send high-res data on CC <code>32</code> in the editor above, you’ll send the higher chunk on CC <code>32</code> and, simultaneously, the lower chunk on CC <code>64</code>. (This is why you should only use this feature if you think you need it: otherwise, you’re going to be sending extra CCs you might not want.)</p> <h4>Doesn’t my device have an ADC with less than 14 bits?</h4> <p>The RP2040 in 16nx devices only has a 12-bit ADC, and so the firmware actually multiples the read analog value by 4 (or left shifts it by 2, really) to get a 14-bit number. So yes, we don’t have 14 “real” usable bits of data.</p> <p>But: a 12-bit ADC probably doesn’t have <em>12</em> usable bits of data, really; one you filter out noise and jitter, you probably are working with 10 usable bits of data (ie: if you /4 or >> 2, you will filter out a lot of unwanted noise).</p> <p>But regardless: 10 usable bits - 0-1023 - is <em>still</em> better than 0-127. So there’s an advantage to using this, if it’s available to you.</p>",1);function Ji(n){var e=Ki();W(18),w(n,e)}var Qi=U('<details class="svelte-154bcv2"><summary class="svelte-154bcv2">What is High Resolution mode?</summary> <!></details>');function hn(n){var e=Qi(),t=P(H(e),2);Ji(t),B(e),w(n,e)}var Zi=U("<!> <!> <!>",1),ea=U("<!> <!> <!> <!>",1),ta=U("<!> <!> <!>",1),ra=U('<div id="controls" class="svelte-13ul1lp"></div> <!>',1),na=U("<!> <!> <!>",1),sa=U('<div id="controls" class="svelte-13ul1lp"></div> <!>',1),ia=U("<!> <!> <!> <!> <!>",1),aa=U("<!> <!>",1);function oa(n,e){se(e,!0);let t=jt(!1);Kt(()=>{b.editing&&b.current&&Ne(t,!Un(b.editing,b.current))});const r=()=>{b.editMode=!1},s=()=>{b.editing&&b.current&&Xi(b.editing,b.current)},i=()=>{if(!b.editing){console.error("No edit configuration found");return}if(!F.selectedOutput){console.error("No selected MIDI output found");return}De(b.editing),vi(b.editing,F.selectedOutput),b.current=structuredClone(wn(b.editing)),b.editMode=!1,ar(F.selectedOutput)};let o=Ee(()=>b.current?ue(b.current.deviceId):null),u=Ee(()=>b.editing&&G(o)&&ge(G(o),"highResolution",b.editing.firmwareVersion));const l=(m,f)=>{var y,_;f=="usb"&&((y=b.editing)==null||y.usbControls.forEach(N=>{N.highResolution=m})),f=="trs"&&((_=b.editing)==null||_.trsControls.forEach(N=>{N.highResolution=m}))};var a=aa(),d=j(a);qn(d,{title:"Edit Configuration",children:(m,f)=>{var y=Zi(),_=j(y);de(_,{icon:"times",onclick:r,children:(I,T)=>{W();var A=Z("Cancel");w(I,A)},$$slots:{default:!0}});var N=P(_,2);de(N,{icon:"file-import",onclick:s,children:(I,T)=>{W();var A=Z("Import config");w(I,A)},$$slots:{default:!0}});var g=P(N,2),E=Ee(()=>!G(t));de(g,{icon:"download",onclick:i,get disabled(){return G(E)},children:(I,T)=>{W();var A=Z("Update controller");w(I,A)},$$slots:{default:!0}}),w(m,y)},$$slots:{default:!0}});var c=P(d,2);{var h=m=>{jn(m,{children:(f,y)=>{var _=ia(),N=j(_);zn(N,{children:(x,M)=>{var q=ea(),X=j(q);Se(X,{children:(v,L)=>{W();var O=Z("USB");w(v,O)},$$slots:{default:!0}});var Q=P(X,2);Se(Q,{children:(v,L)=>{W();var O=Z("TRS Jack");w(v,O)},$$slots:{default:!0}});var te=P(Q,2);Se(te,{children:(v,L)=>{W();var O=Z("Device Options");w(v,O)},$$slots:{default:!0}});var K=P(te,2);{var C=v=>{Se(v,{children:(L,O)=>{W();var D=Z("Factory Reset");w(L,D)},$$slots:{default:!0}})};z(K,v=>{b.current&&we.gte(b.current.firmwareVersion,"2.1.0")&&v(C)})}w(x,q)},$$slots:{default:!0}});var g=P(N,2);Re(g,{children:(x,M)=>{var q=ra(),X=j(q);Le(X,21,()=>b.editing.usbControls,Oe,(K,C,v)=>{var L=oe(),O=j(L);{var D=$=>{dn($,{get editControl(){return G(C)},index:v})};z(O,$=>{G(o)&&v<G(o).controlCount&&$(D)})}w(K,L)}),B(X);var Q=P(X,2);{var te=K=>{var C=ta(),v=j(C);de(v,{onclick:()=>l(!0,"usb"),children:(D,$)=>{W();var k=Z("Set all USB channels to high-resolution (14 bit)");w(D,k)},$$slots:{default:!0}});var L=P(v,2);de(L,{onclick:()=>l(!1,"usb"),children:(D,$)=>{W();var k=Z("Set all USB channels to regular-resolution (7 bit)");w(D,k)},$$slots:{default:!0}});var O=P(L,2);hn(O),w(K,C)};z(Q,K=>{G(u)&&K(te)})}w(x,q)},$$slots:{default:!0}});var E=P(g,2);Re(E,{children:(x,M)=>{var q=sa(),X=j(q);Le(X,21,()=>b.editing.trsControls,Oe,(K,C,v)=>{var L=oe(),O=j(L);{var D=$=>{dn($,{get editControl(){return G(C)},index:v})};z(O,$=>{G(o)&&v<G(o).controlCount&&$(D)})}w(K,L)}),B(X);var Q=P(X,2);{var te=K=>{var C=na(),v=j(C);de(v,{onclick:()=>l(!0,"trs"),children:(D,$)=>{W();var k=Z("Set all TRS channels to high-resolution (14 bit)");w(D,k)},$$slots:{default:!0}});var L=P(v,2);de(L,{onclick:()=>l(!1,"trs"),children:(D,$)=>{W();var k=Z("Set all TRS channels to regular-resolution (7 bit)");w(D,k)},$$slots:{default:!0}});var O=P(L,2);hn(O),w(K,C)};z(Q,K=>{G(u)&&K(te)})}w(x,q)},$$slots:{default:!0}});var I=P(E,2);Re(I,{children:(x,M)=>{Pi(x,{})},$$slots:{default:!0}});var T=P(I,2);{var A=x=>{Re(x,{children:(M,q)=>{Hi(M,{$$events:{message(X){$n.call(this,e,X)}}})},$$slots:{default:!0}})};z(T,x=>{b.current&&we.gte(b.current.firmwareVersion,"2.1.0")&&x(A)})}w(f,_)},$$slots:{default:!0}})};z(c,m=>{b.editing&&m(h)})}w(n,a),ie()}var la=U(`<span class="hires svelte-1ifkqf8" title="This channel is in high-resolution mode, meaning it also uses a 'shadow' CC, 32 above the main CC"> </span>`),ca=U("<span> </span>"),ua=U('<dt class="svelte-1ifkqf8">Value</dt> <dd class="display svelte-1ifkqf8"><div class="inner svelte-1ifkqf8"><!> <div class="bar svelte-1ifkqf8"></div></div></dd>',1),da=U('<dl class="config-column svelte-1ifkqf8"><dt class="index svelte-1ifkqf8"> </dt> <dt class="svelte-1ifkqf8">Channel</dt> <dd class="svelte-1ifkqf8"> </dd> <dt class="svelte-1ifkqf8">CC</dt> <dd class="svelte-1ifkqf8"> <!></dd> <!></dl>');function mn(n,e){se(e,!0);let t=Ie(e,"disableValue",3,!1),r=Ee(()=>e.control.highResolution?(e.control.val||0)>>7:e.control.val),s=Ee(()=>e.control.highResolution?3456:27);var i=da(),o=H(i),u=H(o,!0);B(o);var l=P(o,4),a=H(l,!0);B(l);var d=P(l,4),c=H(d),h=P(c);{var m=_=>{var N=la(),g=H(N);B(N),ce(()=>fe(g,`& ${e.control.cc+32}`)),w(_,N)};z(h,_=>{e.control.highResolution&&_(m)})}B(d);var f=P(d,2);{var y=_=>{var N=ua(),g=P(j(N),2),E=H(g),I=H(E);{var T=x=>{var M=ca(),q=H(M,!0);B(M),ce(()=>{Mn(M,ws({controlval:!0,highresolution:e.control.highResolution,lowvalue:e.control.val<G(s)}),"svelte-1ifkqf8"),fe(q,e.control.val)}),w(x,M)};z(I,x=>{e.control.val!==void 0&&x(T)})}var A=P(I,2);B(E),B(g),ce(()=>be(A,"style",`height: ${G(r)??""}px`)),w(_,N)};z(f,_=>{t()||_(y)})}B(i),ce(()=>{fe(u,e.index+1),fe(a,e.control.channel),fe(c,`${e.control.cc??""} `)}),w(n,i),ie()}var fa=U("<!> <!>",1),ha=U("<!> <!>",1),ma=U('<div id="controls" class="svelte-13ul1lp"></div>'),pa=U('<div id="controls" class="svelte-13ul1lp"></div> <p>There is no realtime preview of the TRS outputs.</p>',1),Ea=U("<!> <!> <!>",1),va=U("<!> <!>",1);function ga(n,e){se(e,!0);const t=()=>{b.current&&Wi(b.current)},r=()=>{b.editMode=!0,b.current&&(b.editing=structuredClone(wn(b.current)))};let s=Ee(()=>b.current?ue(b.current.deviceId):null);var i=oe(),o=j(i);{var u=l=>{var a=va(),d=j(a);qn(d,{title:"Current Configuration",children:(h,m)=>{var f=fa(),y=j(f);de(y,{icon:"file-export",onclick:t,children:(N,g)=>{W();var E=Z("Export current config");w(N,E)},$$slots:{default:!0}});var _=P(y,2);de(_,{icon:"pencil-alt",onclick:r,children:(N,g)=>{W();var E=Z("Edit config");w(N,E)},$$slots:{default:!0}}),w(h,f)},$$slots:{default:!0}});var c=P(d,2);jn(c,{children:(h,m)=>{var f=Ea(),y=j(f);zn(y,{children:(g,E)=>{var I=ha(),T=j(I);Se(T,{children:(x,M)=>{W();var q=Z("USB");w(x,q)},$$slots:{default:!0}});var A=P(T,2);Se(A,{children:(x,M)=>{W();var q=Z("TRS Jack");w(x,q)},$$slots:{default:!0}}),w(g,I)},$$slots:{default:!0}});var _=P(y,2);Re(_,{children:(g,E)=>{var I=ma();Le(I,21,()=>b.current.usbControls,Oe,(T,A,x)=>{var M=oe(),q=j(M);{var X=Q=>{mn(Q,{get control(){return G(A)},index:x})};z(q,Q=>{G(s)&&x<G(s).controlCount&&Q(X)})}w(T,M)}),B(I),w(g,I)},$$slots:{default:!0}});var N=P(_,2);Re(N,{children:(g,E)=>{var I=pa(),T=j(I);Le(T,21,()=>b.current.trsControls,Oe,(A,x,M)=>{var q=oe(),X=j(q);{var Q=te=>{mn(te,{get control(){return G(x)},index:M,disableValue:!0})};z(X,te=>{G(s)&&M<G(s).controlCount&&te(Q)})}w(A,q)}),B(T),W(2),w(g,I)},$$slots:{default:!0}}),w(h,f)},$$slots:{default:!0}}),w(l,a)};z(o,l=>{b.current&&l(u)})}w(n,i),ie()}var ba=U(`<div class="notice svelte-kpoxps"><p>It looks like a 16n is trying to connect, but may have a corrupt
              memory.</p> <p><!></p></div>`),_a=U("<!> <p></p>",1),Na=U('<p class="notice svelte-kpoxps">Connect a controller via USB.</p>'),ya=U(`<p class="notice svelte-kpoxps">WebMIDI could not be enabled. Please use a web browser that supports
        WebMIDI, such as Google Chrome.</p>`),Ra=U('<main class="svelte-kpoxps"><div id="head" class="svelte-kpoxps"><h1 class="svelte-kpoxps">16n configuration tool</h1> <!></div> <div id="inner" class="svelte-kpoxps"><!></div> <div id="foot" class="svelte-kpoxps"><div class="foot-left svelte-kpoxps"></div></div></main>');function La(n,e){se(e,!0);const t="2.1.0",r=!!navigator.requestMIDIAccess;gs(()=>{r&&R.enable({sysex:!0}).then(_i).catch(f=>alert(f))}),Kt(()=>{F.selectedInput&&(F.inputs.forEach(f=>{f.removeListener()}),Hn(F.selectedInput),Vn(F.selectedInput),b.current=null,Xt()),F.selectedOutput&&(b.current=null,Xt())});const s=()=>{F.selectedOutput&&Gn(F.selectedOutput)};var i=Ra(),o=H(i),u=P(H(o),2);Ti(u,{}),B(o);var l=P(o,2),a=H(l);{var d=f=>{var y=oe(),_=j(y);{var N=E=>{var I=oe(),T=j(I);{var A=M=>{var q=ba(),X=P(H(q),2),Q=H(X);de(Q,{onclick:s,children:(te,K)=>{W();var C=Z("Click to reset your 16n's EEPROM to factory defaults");w(te,C)},$$slots:{default:!0}}),B(X),B(q),w(M,q)},x=M=>{var q=_a(),X=j(q);{var Q=K=>{oa(K,{})},te=K=>{ga(K,{})};z(X,K=>{b.editMode?K(Q):K(te,!1)})}W(2),w(M,q)};z(T,M=>{b.controllerMightNeedFactoryReset&&we.gte(b.current.firmwareVersion,"2.1.0")?M(A):M(x,!1)})}w(E,I)},g=E=>{var I=Na();w(E,I)};z(_,E=>{b.current?E(N):E(g,!1)})}w(f,y)},c=f=>{var y=ya();w(f,y)};z(a,f=>{F.webMidiEnabled?f(d):f(c,!1)})}B(l);var h=P(l,2),m=H(h);m.textContent=`16n Editor v${t}`,B(h),B(i),w(n,i),ie()}export{La as component};
