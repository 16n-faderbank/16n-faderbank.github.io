import"../chunks/CWj6FrbW.js";import{l as tr,b as es,d as rr,s as ve,e as mr,w as pr,c as vr,o as ts}from"../chunks/B1lGLh6A.js";import{af as ze,aC as Sn,aD as rs,C as Qe,x as le,ah as ns,ar as ss,y as is,w as as,g as F,S as Rn,z as os,A as ls,B as Er,D as Ze,J as $e,ai as cs,al as us,F as wn,G as In,I as ds,ap as Cn,L as fs,aE as Wt,aF as et,ae as gr,aG as hs,aH as ms,aI as ps,ao as vs,aJ as Es,aK as gs,aL as bs,aM as _s,aj as Ns,a3 as ys,aN as Ss,aO as Rs,M as ws,aP as Is,aQ as Cs,aR as As,aS as Ms,b as nr,a4 as An,aT as Ts,O as Ie,W as Mn,m as G,t as de,l as S,p as he,o as B,v as $,s as we,q as k,n as me,a as sr,i as fe,k as Y,a7 as Kt,a9 as ge,aU as K,aa as ee,e as Os,aB as Ls,K as Tn,az as On}from"../chunks/CWcPemJM.js";import{p as Re,i as X,s as Ln,a as $n}from"../chunks/CfbtRNmO.js";import{i as xn}from"../chunks/BDgrmPJC.js";const $s=[];function Jt(n,e=!1){return qe(n,new Map,"",$s)}function qe(n,e,t,r,s=null){if(typeof n=="object"&&n!==null){var i=e.get(n);if(i!==void 0)return i;if(n instanceof Map)return new Map(n);if(n instanceof Set)return new Set(n);if(ze(n)){var o=Array(n.length);e.set(n,o),s!==null&&e.set(s,o);for(var u=0;u<n.length;u+=1){var l=n[u];u in n&&(o[u]=qe(l,e,t,r))}return o}if(Sn(n)===rs){o={},e.set(n,o),s!==null&&e.set(s,o);for(var c in n)o[c]=qe(n[c],e,t,r);return o}if(n instanceof Date)return structuredClone(n);if(typeof n.toJSON=="function")return qe(n.toJSON(),e,t,r,n)}if(n instanceof EventTarget)return n;try{return structuredClone(n)}catch{return n}}function De(n,e){return e}function xs(n,e,t,r){for(var s=[],i=e.length,o=0;o<i;o++)ps(e[o].e,s,!0);var u=i>0&&s.length===0&&t!==null;if(u){var l=t.parentNode;vs(l),l.append(t),r.clear(),ye(n,e[0].prev,e[i-1].next)}Es(s,()=>{for(var c=0;c<i;c++){var a=e[c];u||(r.delete(a.k),ye(n,a.prev,a.next)),gs(a.e,!u)}})}function Pe(n,e,t,r,s,i=null){var o=n,u={flags:e,items:new Map,first:null};{var l=n;o=le?Qe(ns(l)):l.appendChild(ss())}le&&is();var c=null,a=!1,d=Rn(()=>{var f=t();return ze(f)?f:f==null?[]:Cn(f)});as(()=>{var f=F(d),v=f.length;if(a&&v===0)return;a=v===0;let I=!1;if(le){var h=os(o)===ls;h!==(v===0)&&(o=Er(),Qe(o),Ze(!1),I=!0)}if(le){for(var A=null,m,_=0;_<v;_++){if($e.nodeType===cs&&$e.data===us){o=$e,I=!0,Ze(!1);break}var g=f[_],b=r(g,_);m=Dn($e,u,A,null,g,b,_,s,e,t),u.items.set(b,m),A=m}v>0&&Qe(Er())}le||Ds(f,u,o,s,e,r,t),i!==null&&(v===0?c?wn(c):c=In(()=>i(o)):c!==null&&ds(c,()=>{c=null})),I&&Ze(!0),F(d)}),le&&(o=$e)}function Ds(n,e,t,r,s,i,o){var u=n.length,l=e.items,c=e.first,a=c,d,f=null,v=[],I=[],h,A,m,_;for(_=0;_<u;_+=1){if(h=n[_],A=i(h,_),m=l.get(A),m===void 0){var g=a?a.e.nodes_start:t;f=Dn(g,e,f,f===null?e.first:f.next,h,A,_,r,s,o),l.set(A,f),v=[],I=[],a=f.next;continue}if(Ps(m,h,_),m.e.f&et&&wn(m.e),m!==a){if(d!==void 0&&d.has(m)){if(v.length<I.length){var b=I[0],N;f=b.prev;var O=v[0],D=v[v.length-1];for(N=0;N<v.length;N+=1)br(v[N],b,t);for(N=0;N<I.length;N+=1)d.delete(I[N]);ye(e,O.prev,D.next),ye(e,f,O),ye(e,D,b),a=b,f=D,_-=1,v=[],I=[]}else d.delete(m),br(m,a,t),ye(e,m.prev,m.next),ye(e,m,f===null?e.first:f.next),ye(e,f,m),f=m;continue}for(v=[],I=[];a!==null&&a.k!==A;)a.e.f&et||(d??(d=new Set)).add(a),I.push(a),a=a.next;if(a===null)continue;m=a}v.push(m),f=m,a=m.next}if(a!==null||d!==void 0){for(var M=d===void 0?[]:Cn(d);a!==null;)a.e.f&et||M.push(a),a=a.next;var J=M.length;if(J>0){var te=u===0?t:null;xs(e,M,te,l)}}gr.first=e.first&&e.first.e,gr.last=f&&f.e}function Ps(n,e,t,r){ms(n.v,e),n.i=t}function Dn(n,e,t,r,s,i,o,u,l,c){var a=(l&bs)!==0,d=(l&_s)===0,f=a?d?fs(s,!1,!1):Wt(s):s,v=l&hs?Wt(o):o,I={i:v,v:f,k:i,a:null,e:null,prev:t,next:r};try{return I.e=In(()=>u(n,f,v,c),le),I.e.prev=t&&t.e,I.e.next=r&&r.e,t===null?e.first=I:(t.next=I,t.e.next=I.e),r!==null&&(r.prev=I,r.e.prev=I.e),I}finally{}}function br(n,e,t){for(var r=n.next?n.next.e.nodes_start:t,s=e?e.e.nodes_start:t,i=n.e.nodes_start;i!==r;){var o=Ns(i);s.before(i),i=o}}function ye(n,e,t){e===null?n.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function Pn(n){var e,t,r="";if(typeof n=="string"||typeof n=="number")r+=n;else if(typeof n=="object")if(Array.isArray(n)){var s=n.length;for(e=0;e<s;e++)n[e]&&(t=Pn(n[e]))&&(r&&(r+=" "),r+=t)}else for(t in n)n[t]&&(r&&(r+=" "),r+=t);return r}function ks(){for(var n,e,t=0,r="",s=arguments.length;t<s;t++)(n=arguments[t])&&(e=Pn(n))&&(r&&(r+=" "),r+=e);return r}function Us(n){return typeof n=="object"?ks(n):n??""}const _r=[...` 	
\r\fÂ \v\uFEFF`];function Bs(n,e,t){var r=n==null?"":""+n;if(e&&(r=r?r+" "+e:e),t){for(var s in t)if(t[s])r=r?r+" "+s:s;else if(r.length)for(var i=s.length,o=0;(o=r.indexOf(s,o))>=0;){var u=o+i;(o===0||_r.includes(r[o-1]))&&(u===r.length||_r.includes(r[u]))?r=(o===0?"":r.substring(0,o))+r.substring(u+1):o=u}}return r===""?null:r}function Gs(n,e){return n==null?null:String(n)}function ir(n,e,t,r,s,i){var o=n.__className;if(le||o!==t||o===void 0){var u=Bs(t,r,i);(!le||u!==n.getAttribute("class"))&&(u==null?n.removeAttribute("class"):n.className=u),n.__className=t}else if(i&&s!==i)for(var l in i){var c=!!i[l];(s==null||c!==!!s[l])&&n.classList.toggle(l,c)}return i}function Fs(n,e,t,r){var s=n.__style;if(le||s!==e){var i=Gs(e);(!le||i!==n.getAttribute("style"))&&(i==null?n.removeAttribute("style"):n.style.cssText=i),n.__style=e}return r}function kn(n,e,t){if(n.multiple){if(e==null)return;if(!ze(e))return Ss();for(var r of n.options)r.selected=e.includes(xe(r));return}for(r of n.options){var s=xe(r);if(Rs(s,e)){r.selected=!0;return}}(!t||e!==void 0)&&(n.selectedIndex=-1)}function Hs(n){var e=new MutationObserver(()=>{kn(n,n.__value)});e.observe(n,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),ws(()=>{e.disconnect()})}function Un(n,e,t=e){var r=!0;tr(n,"change",s=>{var i=s?"[selected]":":checked",o;if(n.multiple)o=[].map.call(n.querySelectorAll(i),xe);else{var u=n.querySelector(i)??n.querySelector("option:not([disabled])");o=u&&xe(u)}t(o)}),ys(()=>{var s=e();if(kn(n,s,r),r&&s===void 0){var i=n.querySelector(":checked");i!==null&&(s=xe(i),t(s))}n.__value=s,r=!1}),Hs(n)}function xe(n){return"__value"in n?n.__value:n.value}const qs=Symbol("is custom element"),Vs=Symbol("is html");function ke(n){if(le){var e=!1,t=()=>{if(!e){if(e=!0,n.hasAttribute("value")){var r=n.value;Te(n,"value",null),n.value=r}if(n.hasAttribute("checked")){var s=n.checked;Te(n,"checked",null),n.checked=s}}};n.__on_r=t,As(t),es()}}function Te(n,e,t,r){var s=js(n);le&&(s[e]=n.getAttribute(e),e==="src"||e==="srcset"||e==="href"&&n.nodeName==="LINK")||s[e]!==(s[e]=t)&&(e==="loading"&&(n[Ms]=t),t==null?n.removeAttribute(e):typeof t!="string"&&zs(n).includes(e)?n[e]=t:n.setAttribute(e,t))}function js(n){return n.__attributes??(n.__attributes={[qs]:n.nodeName.includes("-"),[Vs]:n.namespaceURI===Is})}var Nr=new Map;function zs(n){var e=Nr.get(n.nodeName);if(e)return e;Nr.set(n.nodeName,e=[]);for(var t,r=n,s=Element.prototype;s!==r;){t=Cs(r);for(var i in t)t[i].set&&e.push(i);r=Sn(r)}return e}function Qt(n,e,t=e){var r=Ts();tr(n,"input",s=>{var i=s?n.defaultValue:n.value;if(i=tt(n)?rt(i):i,t(i),r&&i!==(i=e())){var o=n.selectionStart,u=n.selectionEnd;n.value=i??"",u!==null&&(n.selectionStart=o,n.selectionEnd=Math.min(u,n.value.length))}}),(le&&n.defaultValue!==n.value||nr(e)==null&&n.value)&&t(tt(n)?rt(n.value):n.value),An(()=>{var s=e();tt(n)&&s===rt(n.value)||n.type==="date"&&!s&&!n.value||s!==n.value&&(n.value=s??"")})}function Bn(n,e,t=e){tr(n,"change",r=>{var s=r?n.defaultChecked:n.checked;t(s)}),(le&&n.defaultChecked!==n.checked||nr(e)==null)&&t(n.checked),An(()=>{var r=e();n.checked=!!r})}function tt(n){var e=n.type;return e==="number"||e==="range"}function rt(n){return n===""?null:+n}function Ys(n){var e=Wt(0);return function(){return arguments.length===1?(Ie(e,F(e)+1),arguments[0]):(F(e),n())}}function Gn(n,e){var i;var t=(i=n.$$events)==null?void 0:i[e.type],r=ze(t)?t.slice():t==null?[]:[t];for(var s of r)s.call(this,e)}var Ge={exports:{}},nt,yr;function Ye(){if(yr)return nt;yr=1;const n="2.0.0",e=256,t=Number.MAX_SAFE_INTEGER||9007199254740991,r=16,s=e-6;return nt={MAX_LENGTH:e,MAX_SAFE_COMPONENT_LENGTH:r,MAX_SAFE_BUILD_LENGTH:s,MAX_SAFE_INTEGER:t,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:n,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2},nt}var st,Sr;function Xe(){if(Sr)return st;Sr=1;var n={};return st=typeof process=="object"&&n&&n.NODE_DEBUG&&/\bsemver\b/i.test(n.NODE_DEBUG)?(...t)=>console.error("SEMVER",...t):()=>{},st}var Rr;function Ue(){return Rr||(Rr=1,function(n,e){const{MAX_SAFE_COMPONENT_LENGTH:t,MAX_SAFE_BUILD_LENGTH:r,MAX_LENGTH:s}=Ye(),i=Xe();e=n.exports={};const o=e.re=[],u=e.safeRe=[],l=e.src=[],c=e.safeSrc=[],a=e.t={};let d=0;const f="[a-zA-Z0-9-]",v=[["\\s",1],["\\d",s],[f,r]],I=A=>{for(const[m,_]of v)A=A.split(`${m}*`).join(`${m}{0,${_}}`).split(`${m}+`).join(`${m}{1,${_}}`);return A},h=(A,m,_)=>{const g=I(m),b=d++;i(A,b,m),a[A]=b,l[b]=m,c[b]=g,o[b]=new RegExp(m,_?"g":void 0),u[b]=new RegExp(g,_?"g":void 0)};h("NUMERICIDENTIFIER","0|[1-9]\\d*"),h("NUMERICIDENTIFIERLOOSE","\\d+"),h("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${f}*`),h("MAINVERSION",`(${l[a.NUMERICIDENTIFIER]})\\.(${l[a.NUMERICIDENTIFIER]})\\.(${l[a.NUMERICIDENTIFIER]})`),h("MAINVERSIONLOOSE",`(${l[a.NUMERICIDENTIFIERLOOSE]})\\.(${l[a.NUMERICIDENTIFIERLOOSE]})\\.(${l[a.NUMERICIDENTIFIERLOOSE]})`),h("PRERELEASEIDENTIFIER",`(?:${l[a.NONNUMERICIDENTIFIER]}|${l[a.NUMERICIDENTIFIER]})`),h("PRERELEASEIDENTIFIERLOOSE",`(?:${l[a.NONNUMERICIDENTIFIER]}|${l[a.NUMERICIDENTIFIERLOOSE]})`),h("PRERELEASE",`(?:-(${l[a.PRERELEASEIDENTIFIER]}(?:\\.${l[a.PRERELEASEIDENTIFIER]})*))`),h("PRERELEASELOOSE",`(?:-?(${l[a.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${l[a.PRERELEASEIDENTIFIERLOOSE]})*))`),h("BUILDIDENTIFIER",`${f}+`),h("BUILD",`(?:\\+(${l[a.BUILDIDENTIFIER]}(?:\\.${l[a.BUILDIDENTIFIER]})*))`),h("FULLPLAIN",`v?${l[a.MAINVERSION]}${l[a.PRERELEASE]}?${l[a.BUILD]}?`),h("FULL",`^${l[a.FULLPLAIN]}$`),h("LOOSEPLAIN",`[v=\\s]*${l[a.MAINVERSIONLOOSE]}${l[a.PRERELEASELOOSE]}?${l[a.BUILD]}?`),h("LOOSE",`^${l[a.LOOSEPLAIN]}$`),h("GTLT","((?:<|>)?=?)"),h("XRANGEIDENTIFIERLOOSE",`${l[a.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),h("XRANGEIDENTIFIER",`${l[a.NUMERICIDENTIFIER]}|x|X|\\*`),h("XRANGEPLAIN",`[v=\\s]*(${l[a.XRANGEIDENTIFIER]})(?:\\.(${l[a.XRANGEIDENTIFIER]})(?:\\.(${l[a.XRANGEIDENTIFIER]})(?:${l[a.PRERELEASE]})?${l[a.BUILD]}?)?)?`),h("XRANGEPLAINLOOSE",`[v=\\s]*(${l[a.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[a.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[a.XRANGEIDENTIFIERLOOSE]})(?:${l[a.PRERELEASELOOSE]})?${l[a.BUILD]}?)?)?`),h("XRANGE",`^${l[a.GTLT]}\\s*${l[a.XRANGEPLAIN]}$`),h("XRANGELOOSE",`^${l[a.GTLT]}\\s*${l[a.XRANGEPLAINLOOSE]}$`),h("COERCEPLAIN",`(^|[^\\d])(\\d{1,${t}})(?:\\.(\\d{1,${t}}))?(?:\\.(\\d{1,${t}}))?`),h("COERCE",`${l[a.COERCEPLAIN]}(?:$|[^\\d])`),h("COERCEFULL",l[a.COERCEPLAIN]+`(?:${l[a.PRERELEASE]})?(?:${l[a.BUILD]})?(?:$|[^\\d])`),h("COERCERTL",l[a.COERCE],!0),h("COERCERTLFULL",l[a.COERCEFULL],!0),h("LONETILDE","(?:~>?)"),h("TILDETRIM",`(\\s*)${l[a.LONETILDE]}\\s+`,!0),e.tildeTrimReplace="$1~",h("TILDE",`^${l[a.LONETILDE]}${l[a.XRANGEPLAIN]}$`),h("TILDELOOSE",`^${l[a.LONETILDE]}${l[a.XRANGEPLAINLOOSE]}$`),h("LONECARET","(?:\\^)"),h("CARETTRIM",`(\\s*)${l[a.LONECARET]}\\s+`,!0),e.caretTrimReplace="$1^",h("CARET",`^${l[a.LONECARET]}${l[a.XRANGEPLAIN]}$`),h("CARETLOOSE",`^${l[a.LONECARET]}${l[a.XRANGEPLAINLOOSE]}$`),h("COMPARATORLOOSE",`^${l[a.GTLT]}\\s*(${l[a.LOOSEPLAIN]})$|^$`),h("COMPARATOR",`^${l[a.GTLT]}\\s*(${l[a.FULLPLAIN]})$|^$`),h("COMPARATORTRIM",`(\\s*)${l[a.GTLT]}\\s*(${l[a.LOOSEPLAIN]}|${l[a.XRANGEPLAIN]})`,!0),e.comparatorTrimReplace="$1$2$3",h("HYPHENRANGE",`^\\s*(${l[a.XRANGEPLAIN]})\\s+-\\s+(${l[a.XRANGEPLAIN]})\\s*$`),h("HYPHENRANGELOOSE",`^\\s*(${l[a.XRANGEPLAINLOOSE]})\\s+-\\s+(${l[a.XRANGEPLAINLOOSE]})\\s*$`),h("STAR","(<|>)?=?\\s*\\*"),h("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),h("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")}(Ge,Ge.exports)),Ge.exports}var it,wr;function ar(){if(wr)return it;wr=1;const n=Object.freeze({loose:!0}),e=Object.freeze({});return it=r=>r?typeof r!="object"?n:r:e,it}var at,Ir;function Fn(){if(Ir)return at;Ir=1;const n=/^[0-9]+$/,e=(r,s)=>{const i=n.test(r),o=n.test(s);return i&&o&&(r=+r,s=+s),r===s?0:i&&!o?-1:o&&!i?1:r<s?-1:1};return at={compareIdentifiers:e,rcompareIdentifiers:(r,s)=>e(s,r)},at}var ot,Cr;function ue(){if(Cr)return ot;Cr=1;const n=Xe(),{MAX_LENGTH:e,MAX_SAFE_INTEGER:t}=Ye(),{safeRe:r,t:s}=Ue(),i=ar(),{compareIdentifiers:o}=Fn();class u{constructor(c,a){if(a=i(a),c instanceof u){if(c.loose===!!a.loose&&c.includePrerelease===!!a.includePrerelease)return c;c=c.version}else if(typeof c!="string")throw new TypeError(`Invalid version. Must be a string. Got type "${typeof c}".`);if(c.length>e)throw new TypeError(`version is longer than ${e} characters`);n("SemVer",c,a),this.options=a,this.loose=!!a.loose,this.includePrerelease=!!a.includePrerelease;const d=c.trim().match(a.loose?r[s.LOOSE]:r[s.FULL]);if(!d)throw new TypeError(`Invalid Version: ${c}`);if(this.raw=c,this.major=+d[1],this.minor=+d[2],this.patch=+d[3],this.major>t||this.major<0)throw new TypeError("Invalid major version");if(this.minor>t||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>t||this.patch<0)throw new TypeError("Invalid patch version");d[4]?this.prerelease=d[4].split(".").map(f=>{if(/^[0-9]+$/.test(f)){const v=+f;if(v>=0&&v<t)return v}return f}):this.prerelease=[],this.build=d[5]?d[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(c){if(n("SemVer.compare",this.version,this.options,c),!(c instanceof u)){if(typeof c=="string"&&c===this.version)return 0;c=new u(c,this.options)}return c.version===this.version?0:this.compareMain(c)||this.comparePre(c)}compareMain(c){return c instanceof u||(c=new u(c,this.options)),o(this.major,c.major)||o(this.minor,c.minor)||o(this.patch,c.patch)}comparePre(c){if(c instanceof u||(c=new u(c,this.options)),this.prerelease.length&&!c.prerelease.length)return-1;if(!this.prerelease.length&&c.prerelease.length)return 1;if(!this.prerelease.length&&!c.prerelease.length)return 0;let a=0;do{const d=this.prerelease[a],f=c.prerelease[a];if(n("prerelease compare",a,d,f),d===void 0&&f===void 0)return 0;if(f===void 0)return 1;if(d===void 0)return-1;if(d===f)continue;return o(d,f)}while(++a)}compareBuild(c){c instanceof u||(c=new u(c,this.options));let a=0;do{const d=this.build[a],f=c.build[a];if(n("build compare",a,d,f),d===void 0&&f===void 0)return 0;if(f===void 0)return 1;if(d===void 0)return-1;if(d===f)continue;return o(d,f)}while(++a)}inc(c,a,d){if(c.startsWith("pre")){if(!a&&d===!1)throw new Error("invalid increment argument: identifier is empty");if(a){const f=`-${a}`.match(this.options.loose?r[s.PRERELEASELOOSE]:r[s.PRERELEASE]);if(!f||f[1]!==a)throw new Error(`invalid identifier: ${a}`)}}switch(c){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",a,d);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",a,d);break;case"prepatch":this.prerelease.length=0,this.inc("patch",a,d),this.inc("pre",a,d);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",a,d),this.inc("pre",a,d);break;case"release":if(this.prerelease.length===0)throw new Error(`version ${this.raw} is not a prerelease`);this.prerelease.length=0;break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":{const f=Number(d)?1:0;if(this.prerelease.length===0)this.prerelease=[f];else{let v=this.prerelease.length;for(;--v>=0;)typeof this.prerelease[v]=="number"&&(this.prerelease[v]++,v=-2);if(v===-1){if(a===this.prerelease.join(".")&&d===!1)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(f)}}if(a){let v=[a,f];d===!1&&(v=[a]),o(this.prerelease[0],a)===0?isNaN(this.prerelease[1])&&(this.prerelease=v):this.prerelease=v}break}default:throw new Error(`invalid increment argument: ${c}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}return ot=u,ot}var lt,Ar;function Le(){if(Ar)return lt;Ar=1;const n=ue();return lt=(t,r,s=!1)=>{if(t instanceof n)return t;try{return new n(t,r)}catch(i){if(!s)return null;throw i}},lt}var ct,Mr;function Xs(){if(Mr)return ct;Mr=1;const n=Le();return ct=(t,r)=>{const s=n(t,r);return s?s.version:null},ct}var ut,Tr;function Ws(){if(Tr)return ut;Tr=1;const n=Le();return ut=(t,r)=>{const s=n(t.trim().replace(/^[=v]+/,""),r);return s?s.version:null},ut}var dt,Or;function Ks(){if(Or)return dt;Or=1;const n=ue();return dt=(t,r,s,i,o)=>{typeof s=="string"&&(o=i,i=s,s=void 0);try{return new n(t instanceof n?t.version:t,s).inc(r,i,o).version}catch{return null}},dt}var ft,Lr;function Js(){if(Lr)return ft;Lr=1;const n=Le();return ft=(t,r)=>{const s=n(t,null,!0),i=n(r,null,!0),o=s.compare(i);if(o===0)return null;const u=o>0,l=u?s:i,c=u?i:s,a=!!l.prerelease.length;if(!!c.prerelease.length&&!a){if(!c.patch&&!c.minor)return"major";if(c.compareMain(l)===0)return c.minor&&!c.patch?"minor":"patch"}const f=a?"pre":"";return s.major!==i.major?f+"major":s.minor!==i.minor?f+"minor":s.patch!==i.patch?f+"patch":"prerelease"},ft}var ht,$r;function Qs(){if($r)return ht;$r=1;const n=ue();return ht=(t,r)=>new n(t,r).major,ht}var mt,xr;function Zs(){if(xr)return mt;xr=1;const n=ue();return mt=(t,r)=>new n(t,r).minor,mt}var pt,Dr;function ei(){if(Dr)return pt;Dr=1;const n=ue();return pt=(t,r)=>new n(t,r).patch,pt}var vt,Pr;function ti(){if(Pr)return vt;Pr=1;const n=Le();return vt=(t,r)=>{const s=n(t,r);return s&&s.prerelease.length?s.prerelease:null},vt}var Et,kr;function _e(){if(kr)return Et;kr=1;const n=ue();return Et=(t,r,s)=>new n(t,s).compare(new n(r,s)),Et}var gt,Ur;function ri(){if(Ur)return gt;Ur=1;const n=_e();return gt=(t,r,s)=>n(r,t,s),gt}var bt,Br;function ni(){if(Br)return bt;Br=1;const n=_e();return bt=(t,r)=>n(t,r,!0),bt}var _t,Gr;function or(){if(Gr)return _t;Gr=1;const n=ue();return _t=(t,r,s)=>{const i=new n(t,s),o=new n(r,s);return i.compare(o)||i.compareBuild(o)},_t}var Nt,Fr;function si(){if(Fr)return Nt;Fr=1;const n=or();return Nt=(t,r)=>t.sort((s,i)=>n(s,i,r)),Nt}var yt,Hr;function ii(){if(Hr)return yt;Hr=1;const n=or();return yt=(t,r)=>t.sort((s,i)=>n(i,s,r)),yt}var St,qr;function We(){if(qr)return St;qr=1;const n=_e();return St=(t,r,s)=>n(t,r,s)>0,St}var Rt,Vr;function lr(){if(Vr)return Rt;Vr=1;const n=_e();return Rt=(t,r,s)=>n(t,r,s)<0,Rt}var wt,jr;function Hn(){if(jr)return wt;jr=1;const n=_e();return wt=(t,r,s)=>n(t,r,s)===0,wt}var It,zr;function qn(){if(zr)return It;zr=1;const n=_e();return It=(t,r,s)=>n(t,r,s)!==0,It}var Ct,Yr;function cr(){if(Yr)return Ct;Yr=1;const n=_e();return Ct=(t,r,s)=>n(t,r,s)>=0,Ct}var At,Xr;function ur(){if(Xr)return At;Xr=1;const n=_e();return At=(t,r,s)=>n(t,r,s)<=0,At}var Mt,Wr;function Vn(){if(Wr)return Mt;Wr=1;const n=Hn(),e=qn(),t=We(),r=cr(),s=lr(),i=ur();return Mt=(u,l,c,a)=>{switch(l){case"===":return typeof u=="object"&&(u=u.version),typeof c=="object"&&(c=c.version),u===c;case"!==":return typeof u=="object"&&(u=u.version),typeof c=="object"&&(c=c.version),u!==c;case"":case"=":case"==":return n(u,c,a);case"!=":return e(u,c,a);case">":return t(u,c,a);case">=":return r(u,c,a);case"<":return s(u,c,a);case"<=":return i(u,c,a);default:throw new TypeError(`Invalid operator: ${l}`)}},Mt}var Tt,Kr;function ai(){if(Kr)return Tt;Kr=1;const n=ue(),e=Le(),{safeRe:t,t:r}=Ue();return Tt=(i,o)=>{if(i instanceof n)return i;if(typeof i=="number"&&(i=String(i)),typeof i!="string")return null;o=o||{};let u=null;if(!o.rtl)u=i.match(o.includePrerelease?t[r.COERCEFULL]:t[r.COERCE]);else{const v=o.includePrerelease?t[r.COERCERTLFULL]:t[r.COERCERTL];let I;for(;(I=v.exec(i))&&(!u||u.index+u[0].length!==i.length);)(!u||I.index+I[0].length!==u.index+u[0].length)&&(u=I),v.lastIndex=I.index+I[1].length+I[2].length;v.lastIndex=-1}if(u===null)return null;const l=u[2],c=u[3]||"0",a=u[4]||"0",d=o.includePrerelease&&u[5]?`-${u[5]}`:"",f=o.includePrerelease&&u[6]?`+${u[6]}`:"";return e(`${l}.${c}.${a}${d}${f}`,o)},Tt}var Ot,Jr;function oi(){if(Jr)return Ot;Jr=1;class n{constructor(){this.max=1e3,this.map=new Map}get(t){const r=this.map.get(t);if(r!==void 0)return this.map.delete(t),this.map.set(t,r),r}delete(t){return this.map.delete(t)}set(t,r){if(!this.delete(t)&&r!==void 0){if(this.map.size>=this.max){const i=this.map.keys().next().value;this.delete(i)}this.map.set(t,r)}return this}}return Ot=n,Ot}var Lt,Qr;function Ne(){if(Qr)return Lt;Qr=1;const n=/\s+/g;class e{constructor(y,x){if(x=s(x),y instanceof e)return y.loose===!!x.loose&&y.includePrerelease===!!x.includePrerelease?y:new e(y.raw,x);if(y instanceof i)return this.raw=y.value,this.set=[[y]],this.formatted=void 0,this;if(this.options=x,this.loose=!!x.loose,this.includePrerelease=!!x.includePrerelease,this.raw=y.trim().replace(n," "),this.set=this.raw.split("||").map(L=>this.parseRange(L.trim())).filter(L=>L.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const L=this.set[0];if(this.set=this.set.filter(P=>!h(P[0])),this.set.length===0)this.set=[L];else if(this.set.length>1){for(const P of this.set)if(P.length===1&&A(P[0])){this.set=[P];break}}}this.formatted=void 0}get range(){if(this.formatted===void 0){this.formatted="";for(let y=0;y<this.set.length;y++){y>0&&(this.formatted+="||");const x=this.set[y];for(let L=0;L<x.length;L++)L>0&&(this.formatted+=" "),this.formatted+=x[L].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(y){const L=((this.options.includePrerelease&&v)|(this.options.loose&&I))+":"+y,P=r.get(L);if(P)return P;const T=this.options.loose,U=T?l[c.HYPHENRANGELOOSE]:l[c.HYPHENRANGE];y=y.replace(U,re(this.options.includePrerelease)),o("hyphen replace",y),y=y.replace(l[c.COMPARATORTRIM],a),o("comparator trim",y),y=y.replace(l[c.TILDETRIM],d),o("tilde trim",y),y=y.replace(l[c.CARETTRIM],f),o("caret trim",y);let V=y.split(" ").map(j=>_(j,this.options)).join(" ").split(/\s+/).map(j=>Z(j,this.options));T&&(V=V.filter(j=>(o("loose invalid filter",j,this.options),!!j.match(l[c.COMPARATORLOOSE])))),o("range list",V);const H=new Map,Q=V.map(j=>new i(j,this.options));for(const j of Q){if(h(j))return[j];H.set(j.value,j)}H.size>1&&H.has("")&&H.delete("");const q=[...H.values()];return r.set(L,q),q}intersects(y,x){if(!(y instanceof e))throw new TypeError("a Range is required");return this.set.some(L=>m(L,x)&&y.set.some(P=>m(P,x)&&L.every(T=>P.every(U=>T.intersects(U,x)))))}test(y){if(!y)return!1;if(typeof y=="string")try{y=new u(y,this.options)}catch{return!1}for(let x=0;x<this.set.length;x++)if(ne(this.set[x],y,this.options))return!0;return!1}}Lt=e;const t=oi(),r=new t,s=ar(),i=Ke(),o=Xe(),u=ue(),{safeRe:l,t:c,comparatorTrimReplace:a,tildeTrimReplace:d,caretTrimReplace:f}=Ue(),{FLAG_INCLUDE_PRERELEASE:v,FLAG_LOOSE:I}=Ye(),h=w=>w.value==="<0.0.0-0",A=w=>w.value==="",m=(w,y)=>{let x=!0;const L=w.slice();let P=L.pop();for(;x&&L.length;)x=L.every(T=>P.intersects(T,y)),P=L.pop();return x},_=(w,y)=>(o("comp",w,y),w=O(w,y),o("caret",w),w=b(w,y),o("tildes",w),w=M(w,y),o("xrange",w),w=te(w,y),o("stars",w),w),g=w=>!w||w.toLowerCase()==="x"||w==="*",b=(w,y)=>w.trim().split(/\s+/).map(x=>N(x,y)).join(" "),N=(w,y)=>{const x=y.loose?l[c.TILDELOOSE]:l[c.TILDE];return w.replace(x,(L,P,T,U,V)=>{o("tilde",w,L,P,T,U,V);let H;return g(P)?H="":g(T)?H=`>=${P}.0.0 <${+P+1}.0.0-0`:g(U)?H=`>=${P}.${T}.0 <${P}.${+T+1}.0-0`:V?(o("replaceTilde pr",V),H=`>=${P}.${T}.${U}-${V} <${P}.${+T+1}.0-0`):H=`>=${P}.${T}.${U} <${P}.${+T+1}.0-0`,o("tilde return",H),H})},O=(w,y)=>w.trim().split(/\s+/).map(x=>D(x,y)).join(" "),D=(w,y)=>{o("caret",w,y);const x=y.loose?l[c.CARETLOOSE]:l[c.CARET],L=y.includePrerelease?"-0":"";return w.replace(x,(P,T,U,V,H)=>{o("caret",w,P,T,U,V,H);let Q;return g(T)?Q="":g(U)?Q=`>=${T}.0.0${L} <${+T+1}.0.0-0`:g(V)?T==="0"?Q=`>=${T}.${U}.0${L} <${T}.${+U+1}.0-0`:Q=`>=${T}.${U}.0${L} <${+T+1}.0.0-0`:H?(o("replaceCaret pr",H),T==="0"?U==="0"?Q=`>=${T}.${U}.${V}-${H} <${T}.${U}.${+V+1}-0`:Q=`>=${T}.${U}.${V}-${H} <${T}.${+U+1}.0-0`:Q=`>=${T}.${U}.${V}-${H} <${+T+1}.0.0-0`):(o("no pr"),T==="0"?U==="0"?Q=`>=${T}.${U}.${V}${L} <${T}.${U}.${+V+1}-0`:Q=`>=${T}.${U}.${V}${L} <${T}.${+U+1}.0-0`:Q=`>=${T}.${U}.${V} <${+T+1}.0.0-0`),o("caret return",Q),Q})},M=(w,y)=>(o("replaceXRanges",w,y),w.split(/\s+/).map(x=>J(x,y)).join(" ")),J=(w,y)=>{w=w.trim();const x=y.loose?l[c.XRANGELOOSE]:l[c.XRANGE];return w.replace(x,(L,P,T,U,V,H)=>{o("xRange",w,L,P,T,U,V,H);const Q=g(T),q=Q||g(U),j=q||g(V),W=j;return P==="="&&W&&(P=""),H=y.includePrerelease?"-0":"",Q?P===">"||P==="<"?L="<0.0.0-0":L="*":P&&W?(q&&(U=0),V=0,P===">"?(P=">=",q?(T=+T+1,U=0,V=0):(U=+U+1,V=0)):P==="<="&&(P="<",q?T=+T+1:U=+U+1),P==="<"&&(H="-0"),L=`${P+T}.${U}.${V}${H}`):q?L=`>=${T}.0.0${H} <${+T+1}.0.0-0`:j&&(L=`>=${T}.${U}.0${H} <${T}.${+U+1}.0-0`),o("xRange return",L),L})},te=(w,y)=>(o("replaceStars",w,y),w.trim().replace(l[c.STAR],"")),Z=(w,y)=>(o("replaceGTE0",w,y),w.trim().replace(l[y.includePrerelease?c.GTE0PRE:c.GTE0],"")),re=w=>(y,x,L,P,T,U,V,H,Q,q,j,W)=>(g(L)?x="":g(P)?x=`>=${L}.0.0${w?"-0":""}`:g(T)?x=`>=${L}.${P}.0${w?"-0":""}`:U?x=`>=${x}`:x=`>=${x}${w?"-0":""}`,g(Q)?H="":g(q)?H=`<${+Q+1}.0.0-0`:g(j)?H=`<${Q}.${+q+1}.0-0`:W?H=`<=${Q}.${q}.${j}-${W}`:w?H=`<${Q}.${q}.${+j+1}-0`:H=`<=${H}`,`${x} ${H}`.trim()),ne=(w,y,x)=>{for(let L=0;L<w.length;L++)if(!w[L].test(y))return!1;if(y.prerelease.length&&!x.includePrerelease){for(let L=0;L<w.length;L++)if(o(w[L].semver),w[L].semver!==i.ANY&&w[L].semver.prerelease.length>0){const P=w[L].semver;if(P.major===y.major&&P.minor===y.minor&&P.patch===y.patch)return!0}return!1}return!0};return Lt}var $t,Zr;function Ke(){if(Zr)return $t;Zr=1;const n=Symbol("SemVer ANY");class e{static get ANY(){return n}constructor(a,d){if(d=t(d),a instanceof e){if(a.loose===!!d.loose)return a;a=a.value}a=a.trim().split(/\s+/).join(" "),o("comparator",a,d),this.options=d,this.loose=!!d.loose,this.parse(a),this.semver===n?this.value="":this.value=this.operator+this.semver.version,o("comp",this)}parse(a){const d=this.options.loose?r[s.COMPARATORLOOSE]:r[s.COMPARATOR],f=a.match(d);if(!f)throw new TypeError(`Invalid comparator: ${a}`);this.operator=f[1]!==void 0?f[1]:"",this.operator==="="&&(this.operator=""),f[2]?this.semver=new u(f[2],this.options.loose):this.semver=n}toString(){return this.value}test(a){if(o("Comparator.test",a,this.options.loose),this.semver===n||a===n)return!0;if(typeof a=="string")try{a=new u(a,this.options)}catch{return!1}return i(a,this.operator,this.semver,this.options)}intersects(a,d){if(!(a instanceof e))throw new TypeError("a Comparator is required");return this.operator===""?this.value===""?!0:new l(a.value,d).test(this.value):a.operator===""?a.value===""?!0:new l(this.value,d).test(a.semver):(d=t(d),d.includePrerelease&&(this.value==="<0.0.0-0"||a.value==="<0.0.0-0")||!d.includePrerelease&&(this.value.startsWith("<0.0.0")||a.value.startsWith("<0.0.0"))?!1:!!(this.operator.startsWith(">")&&a.operator.startsWith(">")||this.operator.startsWith("<")&&a.operator.startsWith("<")||this.semver.version===a.semver.version&&this.operator.includes("=")&&a.operator.includes("=")||i(this.semver,"<",a.semver,d)&&this.operator.startsWith(">")&&a.operator.startsWith("<")||i(this.semver,">",a.semver,d)&&this.operator.startsWith("<")&&a.operator.startsWith(">")))}}$t=e;const t=ar(),{safeRe:r,t:s}=Ue(),i=Vn(),o=Xe(),u=ue(),l=Ne();return $t}var xt,en;function Je(){if(en)return xt;en=1;const n=Ne();return xt=(t,r,s)=>{try{r=new n(r,s)}catch{return!1}return r.test(t)},xt}var Dt,tn;function li(){if(tn)return Dt;tn=1;const n=Ne();return Dt=(t,r)=>new n(t,r).set.map(s=>s.map(i=>i.value).join(" ").trim().split(" ")),Dt}var Pt,rn;function ci(){if(rn)return Pt;rn=1;const n=ue(),e=Ne();return Pt=(r,s,i)=>{let o=null,u=null,l=null;try{l=new e(s,i)}catch{return null}return r.forEach(c=>{l.test(c)&&(!o||u.compare(c)===-1)&&(o=c,u=new n(o,i))}),o},Pt}var kt,nn;function ui(){if(nn)return kt;nn=1;const n=ue(),e=Ne();return kt=(r,s,i)=>{let o=null,u=null,l=null;try{l=new e(s,i)}catch{return null}return r.forEach(c=>{l.test(c)&&(!o||u.compare(c)===1)&&(o=c,u=new n(o,i))}),o},kt}var Ut,sn;function di(){if(sn)return Ut;sn=1;const n=ue(),e=Ne(),t=We();return Ut=(s,i)=>{s=new e(s,i);let o=new n("0.0.0");if(s.test(o)||(o=new n("0.0.0-0"),s.test(o)))return o;o=null;for(let u=0;u<s.set.length;++u){const l=s.set[u];let c=null;l.forEach(a=>{const d=new n(a.semver.version);switch(a.operator){case">":d.prerelease.length===0?d.patch++:d.prerelease.push(0),d.raw=d.format();case"":case">=":(!c||t(d,c))&&(c=d);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${a.operator}`)}}),c&&(!o||t(o,c))&&(o=c)}return o&&s.test(o)?o:null},Ut}var Bt,an;function fi(){if(an)return Bt;an=1;const n=Ne();return Bt=(t,r)=>{try{return new n(t,r).range||"*"}catch{return null}},Bt}var Gt,on;function dr(){if(on)return Gt;on=1;const n=ue(),e=Ke(),{ANY:t}=e,r=Ne(),s=Je(),i=We(),o=lr(),u=ur(),l=cr();return Gt=(a,d,f,v)=>{a=new n(a,v),d=new r(d,v);let I,h,A,m,_;switch(f){case">":I=i,h=u,A=o,m=">",_=">=";break;case"<":I=o,h=l,A=i,m="<",_="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(s(a,d,v))return!1;for(let g=0;g<d.set.length;++g){const b=d.set[g];let N=null,O=null;if(b.forEach(D=>{D.semver===t&&(D=new e(">=0.0.0")),N=N||D,O=O||D,I(D.semver,N.semver,v)?N=D:A(D.semver,O.semver,v)&&(O=D)}),N.operator===m||N.operator===_||(!O.operator||O.operator===m)&&h(a,O.semver))return!1;if(O.operator===_&&A(a,O.semver))return!1}return!0},Gt}var Ft,ln;function hi(){if(ln)return Ft;ln=1;const n=dr();return Ft=(t,r,s)=>n(t,r,">",s),Ft}var Ht,cn;function mi(){if(cn)return Ht;cn=1;const n=dr();return Ht=(t,r,s)=>n(t,r,"<",s),Ht}var qt,un;function pi(){if(un)return qt;un=1;const n=Ne();return qt=(t,r,s)=>(t=new n(t,s),r=new n(r,s),t.intersects(r,s)),qt}var Vt,dn;function vi(){if(dn)return Vt;dn=1;const n=Je(),e=_e();return Vt=(t,r,s)=>{const i=[];let o=null,u=null;const l=t.sort((f,v)=>e(f,v,s));for(const f of l)n(f,r,s)?(u=f,o||(o=f)):(u&&i.push([o,u]),u=null,o=null);o&&i.push([o,null]);const c=[];for(const[f,v]of i)f===v?c.push(f):!v&&f===l[0]?c.push("*"):v?f===l[0]?c.push(`<=${v}`):c.push(`${f} - ${v}`):c.push(`>=${f}`);const a=c.join(" || "),d=typeof r.raw=="string"?r.raw:String(r);return a.length<d.length?a:r},Vt}var jt,fn;function Ei(){if(fn)return jt;fn=1;const n=Ne(),e=Ke(),{ANY:t}=e,r=Je(),s=_e(),i=(d,f,v={})=>{if(d===f)return!0;d=new n(d,v),f=new n(f,v);let I=!1;e:for(const h of d.set){for(const A of f.set){const m=l(h,A,v);if(I=I||m!==null,m)continue e}if(I)return!1}return!0},o=[new e(">=0.0.0-0")],u=[new e(">=0.0.0")],l=(d,f,v)=>{if(d===f)return!0;if(d.length===1&&d[0].semver===t){if(f.length===1&&f[0].semver===t)return!0;v.includePrerelease?d=o:d=u}if(f.length===1&&f[0].semver===t){if(v.includePrerelease)return!0;f=u}const I=new Set;let h,A;for(const M of d)M.operator===">"||M.operator===">="?h=c(h,M,v):M.operator==="<"||M.operator==="<="?A=a(A,M,v):I.add(M.semver);if(I.size>1)return null;let m;if(h&&A){if(m=s(h.semver,A.semver,v),m>0)return null;if(m===0&&(h.operator!==">="||A.operator!=="<="))return null}for(const M of I){if(h&&!r(M,String(h),v)||A&&!r(M,String(A),v))return null;for(const J of f)if(!r(M,String(J),v))return!1;return!0}let _,g,b,N,O=A&&!v.includePrerelease&&A.semver.prerelease.length?A.semver:!1,D=h&&!v.includePrerelease&&h.semver.prerelease.length?h.semver:!1;O&&O.prerelease.length===1&&A.operator==="<"&&O.prerelease[0]===0&&(O=!1);for(const M of f){if(N=N||M.operator===">"||M.operator===">=",b=b||M.operator==="<"||M.operator==="<=",h){if(D&&M.semver.prerelease&&M.semver.prerelease.length&&M.semver.major===D.major&&M.semver.minor===D.minor&&M.semver.patch===D.patch&&(D=!1),M.operator===">"||M.operator===">="){if(_=c(h,M,v),_===M&&_!==h)return!1}else if(h.operator===">="&&!r(h.semver,String(M),v))return!1}if(A){if(O&&M.semver.prerelease&&M.semver.prerelease.length&&M.semver.major===O.major&&M.semver.minor===O.minor&&M.semver.patch===O.patch&&(O=!1),M.operator==="<"||M.operator==="<="){if(g=a(A,M,v),g===M&&g!==A)return!1}else if(A.operator==="<="&&!r(A.semver,String(M),v))return!1}if(!M.operator&&(A||h)&&m!==0)return!1}return!(h&&b&&!A&&m!==0||A&&N&&!h&&m!==0||D||O)},c=(d,f,v)=>{if(!d)return f;const I=s(d.semver,f.semver,v);return I>0?d:I<0||f.operator===">"&&d.operator===">="?f:d},a=(d,f,v)=>{if(!d)return f;const I=s(d.semver,f.semver,v);return I<0?d:I>0||f.operator==="<"&&d.operator==="<="?f:d};return jt=i,jt}var zt,hn;function gi(){if(hn)return zt;hn=1;const n=Ue(),e=Ye(),t=ue(),r=Fn(),s=Le(),i=Xs(),o=Ws(),u=Ks(),l=Js(),c=Qs(),a=Zs(),d=ei(),f=ti(),v=_e(),I=ri(),h=ni(),A=or(),m=si(),_=ii(),g=We(),b=lr(),N=Hn(),O=qn(),D=cr(),M=ur(),J=Vn(),te=ai(),Z=Ke(),re=Ne(),ne=Je(),w=li(),y=ci(),x=ui(),L=di(),P=fi(),T=dr(),U=hi(),V=mi(),H=pi(),Q=vi(),q=Ei();return zt={parse:s,valid:i,clean:o,inc:u,diff:l,major:c,minor:a,patch:d,prerelease:f,compare:v,rcompare:I,compareLoose:h,compareBuild:A,sort:m,rsort:_,gt:g,lt:b,eq:N,neq:O,gte:D,lte:M,cmp:J,coerce:te,Comparator:Z,Range:re,satisfies:ne,toComparators:w,maxSatisfying:y,minSatisfying:x,minVersion:L,validRange:P,outside:T,gtr:U,ltr:V,intersects:H,simplifyRange:Q,subset:q,SemVer:t,re:n.re,src:n.src,tokens:n.t,SEMVER_SPEC_VERSION:e.SEMVER_SPEC_VERSION,RELEASE_TYPES:e.RELEASE_TYPES,compareIdentifiers:r.compareIdentifiers,rcompareIdentifiers:r.rcompareIdentifiers},zt}var Oe=gi();class be{constructor(e=!1){this.eventMap={},this.eventsSuspended=e==!0}addListener(e,t,r={}){if(typeof e=="string"&&e.length<1||e instanceof String&&e.length<1||typeof e!="string"&&!(e instanceof String)&&e!==be.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(typeof t!="function")throw new TypeError("The callback must be a function.");const s=new mn(e,this,t,r);return this.eventMap[e]||(this.eventMap[e]=[]),r.prepend?this.eventMap[e].unshift(s):this.eventMap[e].push(s),s}addOneTimeListener(e,t,r={}){r.remaining=1,this.addListener(e,t,r)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(e,t){return e===void 0?this.eventMap[be.ANY_EVENT]&&this.eventMap[be.ANY_EVENT].length>0?!0:Object.entries(this.eventMap).some(([,r])=>r.length>0):this.eventMap[e]&&this.eventMap[e].length>0?t instanceof mn?this.eventMap[e].filter(s=>s===t).length>0:typeof t=="function"?this.eventMap[e].filter(s=>s.callback===t).length>0:t==null:!1}get eventNames(){return Object.keys(this.eventMap)}getListeners(e){return this.eventMap[e]||[]}suspendEvent(e){this.getListeners(e).forEach(t=>{t.suspended=!0})}unsuspendEvent(e){this.getListeners(e).forEach(t=>{t.suspended=!1})}getListenerCount(e){return this.getListeners(e).length}emit(e,...t){if(typeof e!="string"&&!(e instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.eventsSuspended)return;let r=[],s=this.eventMap[be.ANY_EVENT]||[];return this.eventMap[e]&&(s=s.concat(this.eventMap[e])),s.forEach(i=>{if(i.suspended)return;let o=[...t];Array.isArray(i.arguments)&&(o=o.concat(i.arguments)),i.remaining>0&&(r.push(i.callback.apply(i.context,o)),i.count++),--i.remaining<1&&i.remove()}),r}removeListener(e,t,r={}){if(e===void 0){this.eventMap={};return}else if(!this.eventMap[e])return;let s=this.eventMap[e].filter(i=>t&&i.callback!==t||r.remaining&&r.remaining!==i.remaining||r.context&&r.context!==i.context);s.length?this.eventMap[e]=s:delete this.eventMap[e]}async waitFor(e,t={}){return t.duration=parseInt(t.duration),(isNaN(t.duration)||t.duration<=0)&&(t.duration=1/0),new Promise((r,s)=>{let i,o=this.addListener(e,()=>{clearTimeout(i),r()},{remaining:1});t.duration!==1/0&&(i=setTimeout(()=>{o.remove(),s("The duration expired before the event was emitted.")},t.duration))})}get eventCount(){return Object.keys(this.eventMap).length}}class mn{constructor(e,t,r,s={}){if(typeof e!="string"&&!(e instanceof String)&&e!==be.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!t)throw new ReferenceError("The 'target' parameter is mandatory.");if(typeof r!="function")throw new TypeError("The 'callback' must be a function.");s.arguments!==void 0&&!Array.isArray(s.arguments)&&(s.arguments=[s.arguments]),s=Object.assign({context:t,remaining:1/0,arguments:void 0,duration:1/0},s),s.duration!==1/0&&setTimeout(()=>this.remove(),s.duration),this.arguments=s.arguments,this.callback=r,this.context=s.context,this.count=0,this.event=e,this.remaining=parseInt(s.remaining)>=1?parseInt(s.remaining):1/0,this.suspended=!1,this.target=t}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}/**
 * The `Enumerations` class contains enumerations and arrays of elements used throughout the
 * library. All its properties are static and should be referenced using the class name. For
 * example: `Enumerations.CHANNEL_MESSAGES`.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class p{static get MIDI_CHANNEL_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MESSAGES enum instead."),p.CHANNEL_MESSAGES}static get CHANNEL_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,programchange:12,channelaftertouch:13,pitchbend:14}}static get CHANNEL_NUMBERS(){return[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get MIDI_CHANNEL_NUMBERS(){return this.validation&&console.warn("The MIDI_CHANNEL_NUMBERS array has been deprecated. Use the Enumerations.CHANNEL_NUMBERS array instead."),[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MODE_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MODE_MESSAGES enum instead."),p.CHANNEL_MODE_MESSAGES}static get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn("The MIDI_CONTROL_CHANGE_MESSAGES enum has been deprecated. Use the Enumerations.CONTROL_CHANGE_MESSAGES array instead."),{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,controller3:3,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,controller9:9,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,controller14:14,controller15:15,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,controller20:20,controller21:21,controller22:22,controller23:23,controller24:24,controller25:25,controller26:26,controller27:27,controller28:28,controller29:29,controller30:30,controller31:31,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,controller35:35,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,controller41:41,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,controller46:46,controller47:47,controller48:48,controller49:49,controller50:50,controller51:51,controller52:52,controller53:53,controller54:54,controller55:55,controller56:56,controller57:57,controller58:58,controller59:59,controller60:60,controller61:61,controller62:62,controller63:63,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,controller84:84,controller85:85,controller86:86,controller87:87,controller88:88,controller89:89,controller90:90,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101,controller102:102,controller103:103,controller104:104,controller105:105,controller106:106,controller107:107,controller108:108,controller109:109,controller110:110,controller111:111,controller112:112,controller113:113,controller114:114,controller115:115,controller116:116,controller117:117,controller118:118,controller119:119,allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get CONTROL_CHANGE_MESSAGES(){return[{number:0,name:"bankselectcoarse",description:"Bank Select (Coarse)",position:"msb"},{number:1,name:"modulationwheelcoarse",description:"Modulation Wheel (Coarse)",position:"msb"},{number:2,name:"breathcontrollercoarse",description:"Breath Controller (Coarse)",position:"msb"},{number:3,name:"controller3",description:"Undefined",position:"msb"},{number:4,name:"footcontrollercoarse",description:"Foot Controller (Coarse)",position:"msb"},{number:5,name:"portamentotimecoarse",description:"Portamento Time (Coarse)",position:"msb"},{number:6,name:"dataentrycoarse",description:"Data Entry (Coarse)",position:"msb"},{number:7,name:"volumecoarse",description:"Channel Volume (Coarse)",position:"msb"},{number:8,name:"balancecoarse",description:"Balance (Coarse)",position:"msb"},{number:9,name:"controller9",description:"Controller 9 (Coarse)",position:"msb"},{number:10,name:"pancoarse",description:"Pan (Coarse)",position:"msb"},{number:11,name:"expressioncoarse",description:"Expression Controller (Coarse)",position:"msb"},{number:12,name:"effectcontrol1coarse",description:"Effect Control 1 (Coarse)",position:"msb"},{number:13,name:"effectcontrol2coarse",description:"Effect Control 2 (Coarse)",position:"msb"},{number:14,name:"controller14",description:"Undefined",position:"msb"},{number:15,name:"controller15",description:"Undefined",position:"msb"},{number:16,name:"generalpurposecontroller1",description:"General Purpose Controller 1 (Coarse)",position:"msb"},{number:17,name:"generalpurposecontroller2",description:"General Purpose Controller 2 (Coarse)",position:"msb"},{number:18,name:"generalpurposecontroller3",description:"General Purpose Controller 3 (Coarse)",position:"msb"},{number:19,name:"generalpurposecontroller4",description:"General Purpose Controller 4 (Coarse)",position:"msb"},{number:20,name:"controller20",description:"Undefined",position:"msb"},{number:21,name:"controller21",description:"Undefined",position:"msb"},{number:22,name:"controller22",description:"Undefined",position:"msb"},{number:23,name:"controller23",description:"Undefined",position:"msb"},{number:24,name:"controller24",description:"Undefined",position:"msb"},{number:25,name:"controller25",description:"Undefined",position:"msb"},{number:26,name:"controller26",description:"Undefined",position:"msb"},{number:27,name:"controller27",description:"Undefined",position:"msb"},{number:28,name:"controller28",description:"Undefined",position:"msb"},{number:29,name:"controller29",description:"Undefined",position:"msb"},{number:30,name:"controller30",description:"Undefined",position:"msb"},{number:31,name:"controller31",description:"Undefined",position:"msb"},{number:32,name:"bankselectfine",description:"Bank Select (Fine)",position:"lsb"},{number:33,name:"modulationwheelfine",description:"Modulation Wheel (Fine)",position:"lsb"},{number:34,name:"breathcontrollerfine",description:"Breath Controller (Fine)",position:"lsb"},{number:35,name:"controller35",description:"Undefined",position:"lsb"},{number:36,name:"footcontrollerfine",description:"Foot Controller (Fine)",position:"lsb"},{number:37,name:"portamentotimefine",description:"Portamento Time (Fine)",position:"lsb"},{number:38,name:"dataentryfine",description:"Data Entry (Fine)",position:"lsb"},{number:39,name:"channelvolumefine",description:"Channel Volume (Fine)",position:"lsb"},{number:40,name:"balancefine",description:"Balance (Fine)",position:"lsb"},{number:41,name:"controller41",description:"Undefined",position:"lsb"},{number:42,name:"panfine",description:"Pan (Fine)",position:"lsb"},{number:43,name:"expressionfine",description:"Expression Controller (Fine)",position:"lsb"},{number:44,name:"effectcontrol1fine",description:"Effect control 1 (Fine)",position:"lsb"},{number:45,name:"effectcontrol2fine",description:"Effect control 2 (Fine)",position:"lsb"},{number:46,name:"controller46",description:"Undefined",position:"lsb"},{number:47,name:"controller47",description:"Undefined",position:"lsb"},{number:48,name:"controller48",description:"General Purpose Controller 1 (Fine)",position:"lsb"},{number:49,name:"controller49",description:"General Purpose Controller 2 (Fine)",position:"lsb"},{number:50,name:"controller50",description:"General Purpose Controller 3 (Fine)",position:"lsb"},{number:51,name:"controller51",description:"General Purpose Controller 4 (Fine)",position:"lsb"},{number:52,name:"controller52",description:"Undefined",position:"lsb"},{number:53,name:"controller53",description:"Undefined",position:"lsb"},{number:54,name:"controller54",description:"Undefined",position:"lsb"},{number:55,name:"controller55",description:"Undefined",position:"lsb"},{number:56,name:"controller56",description:"Undefined",position:"lsb"},{number:57,name:"controller57",description:"Undefined",position:"lsb"},{number:58,name:"controller58",description:"Undefined",position:"lsb"},{number:59,name:"controller59",description:"Undefined",position:"lsb"},{number:60,name:"controller60",description:"Undefined",position:"lsb"},{number:61,name:"controller61",description:"Undefined",position:"lsb"},{number:62,name:"controller62",description:"Undefined",position:"lsb"},{number:63,name:"controller63",description:"Undefined",position:"lsb"},{number:64,name:"damperpedal",description:"Damper Pedal On/Off"},{number:65,name:"portamento",description:"Portamento On/Off"},{number:66,name:"sostenuto",description:"Sostenuto On/Off"},{number:67,name:"softpedal",description:"Soft Pedal On/Off"},{number:68,name:"legatopedal",description:"Legato Pedal On/Off"},{number:69,name:"hold2",description:"Hold 2 On/Off"},{number:70,name:"soundvariation",description:"Sound Variation",position:"lsb"},{number:71,name:"resonance",description:"Resonance",position:"lsb"},{number:72,name:"releasetime",description:"Release Time",position:"lsb"},{number:73,name:"attacktime",description:"Attack Time",position:"lsb"},{number:74,name:"brightness",description:"Brightness",position:"lsb"},{number:75,name:"decaytime",description:"Decay Time",position:"lsb"},{number:76,name:"vibratorate",description:"Vibrato Rate",position:"lsb"},{number:77,name:"vibratodepth",description:"Vibrato Depth",position:"lsb"},{number:78,name:"vibratodelay",description:"Vibrato Delay",position:"lsb"},{number:79,name:"controller79",description:"Undefined",position:"lsb"},{number:80,name:"generalpurposecontroller5",description:"General Purpose Controller 5",position:"lsb"},{number:81,name:"generalpurposecontroller6",description:"General Purpose Controller 6",position:"lsb"},{number:82,name:"generalpurposecontroller7",description:"General Purpose Controller 7",position:"lsb"},{number:83,name:"generalpurposecontroller8",description:"General Purpose Controller 8",position:"lsb"},{number:84,name:"portamentocontrol",description:"Portamento Control",position:"lsb"},{number:85,name:"controller85",description:"Undefined"},{number:86,name:"controller86",description:"Undefined"},{number:87,name:"controller87",description:"Undefined"},{number:88,name:"highresolutionvelocityprefix",description:"High Resolution Velocity Prefix",position:"lsb"},{number:89,name:"controller89",description:"Undefined"},{number:90,name:"controller90",description:"Undefined"},{number:91,name:"effect1depth",description:"Effects 1 Depth (Reverb Send Level)"},{number:92,name:"effect2depth",description:"Effects 2 Depth"},{number:93,name:"effect3depth",description:"Effects 3 Depth (Chorus Send Level)"},{number:94,name:"effect4depth",description:"Effects 4 Depth"},{number:95,name:"effect5depth",description:"Effects 5 Depth"},{number:96,name:"dataincrement",description:"Data Increment"},{number:97,name:"datadecrement",description:"Data Decrement"},{number:98,name:"nonregisteredparameterfine",description:"Non-Registered Parameter Number (Fine)",position:"lsb"},{number:99,name:"nonregisteredparametercoarse",description:"Non-Registered Parameter Number (Coarse)",position:"msb"},{number:100,name:"registeredparameterfine",description:"Registered Parameter Number (Fine)",position:"lsb"},{number:101,name:"registeredparametercoarse",description:"Registered Parameter Number (Coarse)",position:"msb"},{number:102,name:"controller102",description:"Undefined"},{number:103,name:"controller103",description:"Undefined"},{number:104,name:"controller104",description:"Undefined"},{number:105,name:"controller105",description:"Undefined"},{number:106,name:"controller106",description:"Undefined"},{number:107,name:"controller107",description:"Undefined"},{number:108,name:"controller108",description:"Undefined"},{number:109,name:"controller109",description:"Undefined"},{number:110,name:"controller110",description:"Undefined"},{number:111,name:"controller111",description:"Undefined"},{number:112,name:"controller112",description:"Undefined"},{number:113,name:"controller113",description:"Undefined"},{number:114,name:"controller114",description:"Undefined"},{number:115,name:"controller115",description:"Undefined"},{number:116,name:"controller116",description:"Undefined"},{number:117,name:"controller117",description:"Undefined"},{number:118,name:"controller118",description:"Undefined"},{number:119,name:"controller119",description:"Undefined"},{number:120,name:"allsoundoff",description:"All Sound Off"},{number:121,name:"resetallcontrollers",description:"Reset All Controllers"},{number:122,name:"localcontrol",description:"Local Control On/Off"},{number:123,name:"allnotesoff",description:"All Notes Off"},{number:124,name:"omnimodeoff",description:"Omni Mode Off"},{number:125,name:"omnimodeon",description:"Omni Mode On"},{number:126,name:"monomodeon",description:"Mono Mode On"},{number:127,name:"polymodeon",description:"Poly Mode On"}]}static get REGISTERED_PARAMETERS(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}static get MIDI_REGISTERED_PARAMETERS(){return this.validation&&console.warn("The MIDI_REGISTERED_PARAMETERS enum has been deprecated. Use the Enumerations.REGISTERED_PARAMETERS enum instead."),p.MIDI_REGISTERED_PARAMETERS}static get SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}static get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn("The MIDI_SYSTEM_MESSAGES enum has been deprecated. Use the Enumerations.SYSTEM_MESSAGES enum instead."),p.SYSTEM_MESSAGES}static get CHANNEL_EVENTS(){return["noteoff","controlchange","noteon","keyaftertouch","programchange","channelaftertouch","pitchbend","allnotesoff","allsoundoff","localcontrol","monomode","omnimode","resetallcontrollers","nrpn","nrpn-dataentrycoarse","nrpn-dataentryfine","nrpn-dataincrement","nrpn-datadecrement","rpn","rpn-dataentrycoarse","rpn-dataentryfine","rpn-dataincrement","rpn-datadecrement","nrpn-databuttonincrement","nrpn-databuttondecrement","rpn-databuttonincrement","rpn-databuttondecrement"]}}/**
 * The `Note` class represents a single musical note such as `"D3"`, `"G#4"`, `"F-1"`, `"Gb7"`, etc.
 *
 * `Note` objects can be played back on a single channel by calling
 * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same
 * output, by calling [`Output.playNote()`]{@link Output#playNote}.
 *
 * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.
 * These can be changed by passing in the appropriate option. It is also possible to set a
 * system-wide default for attack and release velocities by using the
 * [`WebMidi.defaults`](WebMidi#defaults) property.
 *
 * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and
 * [`rawRelease`](#rawRelease) to both get and set the values.
 *
 * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped
 * when the duration has elapsed by sending a `"noteoff"` event. By default, the duration is set to
 * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a
 * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},
 * [`Output.stopNote()`]{@link Output#stopNote} or similar.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class Ce{constructor(e,t={}){this.duration=R.defaults.note.duration,this.attack=R.defaults.note.attack,this.release=R.defaults.note.release,t.duration!=null&&(this.duration=t.duration),t.attack!=null&&(this.attack=t.attack),t.rawAttack!=null&&(this.attack=C.from7bitToFloat(t.rawAttack)),t.release!=null&&(this.release=t.release),t.rawRelease!=null&&(this.release=C.from7bitToFloat(t.rawRelease)),Number.isInteger(e)?this.identifier=C.toNoteIdentifier(e):this.identifier=e}get identifier(){return this._name+(this._accidental||"")+this._octave}set identifier(e){const t=C.getNoteDetails(e);if(R.validation&&!e)throw new Error("Invalid note identifier");this._name=t.name,this._accidental=t.accidental,this._octave=t.octave}get name(){return this._name}set name(e){if(R.validation&&(e=e.toUpperCase(),!["C","D","E","F","G","A","B"].includes(e)))throw new Error("Invalid name value");this._name=e}get accidental(){return this._accidental}set accidental(e){if(R.validation&&(e=e.toLowerCase(),!["#","##","b","bb"].includes(e)))throw new Error("Invalid accidental value");this._accidental=e}get octave(){return this._octave}set octave(e){if(R.validation&&(e=parseInt(e),isNaN(e)))throw new Error("Invalid octave value");this._octave=e}get duration(){return this._duration}set duration(e){if(R.validation&&(e=parseFloat(e),isNaN(e)||e===null||e<0))throw new RangeError("Invalid duration value.");this._duration=e}get attack(){return this._attack}set attack(e){if(R.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError("Invalid attack value.");this._attack=e}get release(){return this._release}set release(e){if(R.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError("Invalid release value.");this._release=e}get rawAttack(){return C.fromFloatTo7Bit(this._attack)}set rawAttack(e){this._attack=C.from7bitToFloat(e)}get rawRelease(){return C.fromFloatTo7Bit(this._release)}set rawRelease(e){this._release=C.from7bitToFloat(e)}get number(){return C.toNoteNumber(this.identifier)}getOffsetNumber(e=0,t=0){return R.validation&&(e=parseInt(e)||0,t=parseInt(t)||0),Math.min(Math.max(this.number+e*12+t,0),127)}}/**
 * The `Utilities` class contains general-purpose utility methods. All methods are static and
 * should be called using the class name. For example: `Utilities.getNoteDetails("C4")`.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class C{static toNoteNumber(e,t=0){if(t=t==null?0:parseInt(t),isNaN(t))throw new RangeError("Invalid 'octaveOffset' value");typeof e!="string"&&(e="");const r=this.getNoteDetails(e);if(!r)throw new TypeError("Invalid note identifier");const s={C:0,D:2,E:4,F:5,G:7,A:9,B:11};let i=(r.octave+1+t)*12;if(i+=s[r.name],r.accidental&&(r.accidental.startsWith("b")?i-=r.accidental.length:i+=r.accidental.length),i<0||i>127)throw new RangeError("Invalid octaveOffset value");return i}static getNoteDetails(e){Number.isInteger(e)&&(e=this.toNoteIdentifier(e));const t=e.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)$/i);if(!t)throw new TypeError("Invalid note identifier");const r=t[1].toUpperCase(),s=parseInt(t[3]);let i=t[2].toLowerCase();return i=i===""?void 0:i,{accidental:i,identifier:r+(i||"")+s,name:r,octave:s}}static sanitizeChannels(e){let t;if(R.validation){if(e==="all")t=["all"];else if(e==="none")return[]}return Array.isArray(e)?t=e:t=[e],t.indexOf("all")>-1&&(t=p.MIDI_CHANNEL_NUMBERS),t.map(function(r){return parseInt(r)}).filter(function(r){return r>=1&&r<=16})}static toTimestamp(e){let t=!1;const r=parseFloat(e);return isNaN(r)?!1:(typeof e=="string"&&e.substring(0,1)==="+"?r>=0&&(t=R.time+r):r>=0&&(t=r),t)}static guessNoteNumber(e,t){t=parseInt(t)||0;let r=!1;if(Number.isInteger(e)&&e>=0&&e<=127)r=parseInt(e);else if(parseInt(e)>=0&&parseInt(e)<=127)r=parseInt(e);else if(typeof e=="string"||e instanceof String)try{r=this.toNoteNumber(e.trim(),t)}catch{return!1}return r}static toNoteIdentifier(e,t){if(e=parseInt(e),isNaN(e)||e<0||e>127)throw new RangeError("Invalid note number");if(t=t==null?0:parseInt(t),isNaN(t))throw new RangeError("Invalid octaveOffset value");const r=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],s=Math.floor(e/12-1)+t;return r[e%12]+s.toString()}static buildNote(e,t={}){if(t.octaveOffset=parseInt(t.octaveOffset)||0,e instanceof Ce)return e;let r=this.guessNoteNumber(e,t.octaveOffset);if(r===!1)throw new TypeError(`The input could not be parsed as a note (${e})`);return t.octaveOffset=void 0,new Ce(r,t)}static buildNoteArray(e,t={}){let r=[];return Array.isArray(e)||(e=[e]),e.forEach(s=>{r.push(this.buildNote(s,t))}),r}static from7bitToFloat(e){return e===1/0&&(e=127),e=parseInt(e)||0,Math.min(Math.max(e/127,0),1)}static fromFloatTo7Bit(e){return e===1/0&&(e=1),e=parseFloat(e)||0,Math.min(Math.max(Math.round(e*127),0),127)}static fromMsbLsbToFloat(e,t=0){R.validation&&(e=Math.min(Math.max(parseInt(e)||0,0),127),t=Math.min(Math.max(parseInt(t)||0,0),127));const r=((e<<7)+t)/16383;return Math.min(Math.max(r,0),1)}static fromFloatToMsbLsb(e){R.validation&&(e=Math.min(Math.max(parseFloat(e)||0,0),1));const t=Math.round(e*16383);return{msb:t>>7,lsb:t&127}}static offsetNumber(e,t=0,r=0){if(R.validation){if(e=parseInt(e),isNaN(e))throw new Error("Invalid note number");t=parseInt(t)||0,r=parseInt(r)||0}return Math.min(Math.max(e+t*12+r,0),127)}static getPropertyByValue(e,t){return Object.keys(e).find(r=>e[r]===t)}static getCcNameByNumber(e){if(!(R.validation&&(e=parseInt(e),!(e>=0&&e<=127))))return p.CONTROL_CHANGE_MESSAGES[e].name}static getCcNumberByName(e){let t=p.CONTROL_CHANGE_MESSAGES.find(r=>r.name===e);return t?t.number:p.MIDI_CONTROL_CHANGE_MESSAGES[e]}static getChannelModeByNumber(e){if(!(e>=120&&e<=127))return!1;for(let t in p.CHANNEL_MODE_MESSAGES)if(p.CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===p.CHANNEL_MODE_MESSAGES[t])return t;return!1}static get isNode(){return typeof process<"u"&&process.versions!=null&&process.versions.node!=null}static get isBrowser(){return typeof window<"u"&&typeof window.document<"u"}}/**
 * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are
 * provided by an [`Output`](Output) port which, itself, is made available by a device. The
 * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated
 * directly.
 *
 * All 16 `OutputChannel` objects can be found inside the parent output's
 * [`channels`]{@link Output#channels} property.
 *
 * @param {Output} output The [`Output`](Output) this channel belongs to.
 * @param {number} number The MIDI channel number (`1` - `16`).
 *
 * @extends EventEmitter
 * @license Apache-2.0
 * @since 3.0.0
 */class bi extends be{constructor(e,t){super(),this._output=e,this._number=t,this._octaveOffset=0}destroy(){this._output=null,this._number=null,this._octaveOffset=0,this.removeListener()}send(e,t={time:0}){return this.output.send(e,t),this}sendKeyAftertouch(e,t,r={}){if(R.validation){if(r.useRawValue&&(r.rawValue=r.useRawValue),isNaN(parseFloat(t)))throw new RangeError("Invalid key aftertouch value.");if(r.rawValue){if(!(t>=0&&t<=127&&Number.isInteger(t)))throw new RangeError("Key aftertouch raw value must be an integer between 0 and 127.")}else if(!(t>=0&&t<=1))throw new RangeError("Key aftertouch value must be a float between 0 and 1.")}r.rawValue||(t=C.fromFloatTo7Bit(t));const s=R.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Array.isArray(e)||(e=[e]),C.buildNoteArray(e).forEach(i=>{this.send([(p.CHANNEL_MESSAGES.keyaftertouch<<4)+(this.number-1),i.getOffsetNumber(s),t],{time:C.toTimestamp(r.time)})}),this}sendControlChange(e,t,r={}){if(typeof e=="string"&&(e=C.getCcNumberByName(e)),Array.isArray(t)||(t=[t]),R.validation){if(e===void 0)throw new TypeError("Control change must be identified with a valid name or an integer between 0 and 127.");if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new TypeError("Control change number must be an integer between 0 and 127.");if(t=t.map(s=>{const i=Math.min(Math.max(parseInt(s),0),127);if(isNaN(i))throw new TypeError("Values must be integers between 0 and 127");return i}),t.length===2&&e>=32)throw new TypeError("To use a value array, the controller must be between 0 and 31")}return t.forEach((s,i)=>{this.send([(p.CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e+i*32,t[i]],{time:C.toTimestamp(r.time)})}),this}_selectNonRegisteredParameter(e,t={}){return this.sendControlChange(99,e[0],t),this.sendControlChange(98,e[1],t),this}_deselectRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_deselectNonRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_selectRegisteredParameter(e,t={}){return this.sendControlChange(101,e[0],t),this.sendControlChange(100,e[1],t),this}_setCurrentParameter(e,t={}){return e=[].concat(e),this.sendControlChange(6,e[0],t),e.length<2?this:(this.sendControlChange(38,e[1],t),this)}sendRpnDecrement(e,t={}){if(Array.isArray(e)||(e=p.REGISTERED_PARAMETERS[e]),R.validation){if(e===void 0)throw new TypeError("The specified registered parameter is invalid.");let r=!1;if(Object.getOwnPropertyNames(p.REGISTERED_PARAMETERS).forEach(s=>{p.REGISTERED_PARAMETERS[s][0]===e[0]&&p.REGISTERED_PARAMETERS[s][1]===e[1]&&(r=!0)}),!r)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(97,0,t),this._deselectRegisteredParameter(t),this}sendRpnIncrement(e,t={}){if(Array.isArray(e)||(e=p.REGISTERED_PARAMETERS[e]),R.validation){if(e===void 0)throw new TypeError("The specified registered parameter is invalid.");let r=!1;if(Object.getOwnPropertyNames(p.REGISTERED_PARAMETERS).forEach(s=>{p.REGISTERED_PARAMETERS[s][0]===e[0]&&p.REGISTERED_PARAMETERS[s][1]===e[1]&&(r=!0)}),!r)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(96,0,t),this._deselectRegisteredParameter(t),this}playNote(e,t={}){this.sendNoteOn(e,t);const r=Array.isArray(e)?e:[e];for(let s of r)if(parseInt(s.duration)>0){const i={time:(C.toTimestamp(t.time)||R.time)+parseInt(s.duration),release:s.release,rawRelease:s.rawRelease};this.sendNoteOff(s,i)}else if(parseInt(t.duration)>0){const i={time:(C.toTimestamp(t.time)||R.time)+parseInt(t.duration),release:t.release,rawRelease:t.rawRelease};this.sendNoteOff(s,i)}return this}sendNoteOff(e,t={}){if(R.validation){if(t.rawRelease!=null&&!(t.rawRelease>=0&&t.rawRelease<=127))throw new RangeError("The 'rawRelease' option must be an integer between 0 and 127");if(t.release!=null&&!(t.release>=0&&t.release<=1))throw new RangeError("The 'release' option must be an number between 0 and 1");t.rawVelocity&&(t.rawRelease=t.velocity,console.warn("The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.")),t.velocity&&(t.release=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let r=64;t.rawRelease!=null?r=t.rawRelease:isNaN(t.release)||(r=Math.round(t.release*127));const s=R.octaveOffset+this.output.octaveOffset+this.octaveOffset;return C.buildNoteArray(e,{rawRelease:parseInt(r)}).forEach(i=>{this.send([(p.CHANNEL_MESSAGES.noteoff<<4)+(this.number-1),i.getOffsetNumber(s),i.rawRelease],{time:C.toTimestamp(t.time)})}),this}stopNote(e,t={}){return this.sendNoteOff(e,t)}sendNoteOn(e,t={}){if(R.validation){if(t.rawAttack!=null&&!(t.rawAttack>=0&&t.rawAttack<=127))throw new RangeError("The 'rawAttack' option must be an integer between 0 and 127");if(t.attack!=null&&!(t.attack>=0&&t.attack<=1))throw new RangeError("The 'attack' option must be an number between 0 and 1");t.rawVelocity&&(t.rawAttack=t.velocity,t.rawRelease=t.release,console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.")),t.velocity&&(t.attack=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let r=64;t.rawAttack!=null?r=t.rawAttack:isNaN(t.attack)||(r=Math.round(t.attack*127));const s=R.octaveOffset+this.output.octaveOffset+this.octaveOffset;return C.buildNoteArray(e,{rawAttack:r}).forEach(i=>{this.send([(p.CHANNEL_MESSAGES.noteon<<4)+(this.number-1),i.getOffsetNumber(s),i.rawAttack],{time:C.toTimestamp(t.time)})}),this}sendChannelMode(e,t=0,r={}){if(typeof e=="string"&&(e=p.CHANNEL_MODE_MESSAGES[e]),R.validation){if(e===void 0)throw new TypeError("Invalid channel mode message name or number.");if(isNaN(e)||!(e>=120&&e<=127))throw new TypeError("Invalid channel mode message number.");if(isNaN(parseInt(t))||t<0||t>127)throw new RangeError("Value must be an integer between 0 and 127.")}return this.send([(p.CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e,t],{time:C.toTimestamp(r.time)}),this}sendOmniMode(e,t={}){return e===void 0||e?this.sendChannelMode("omnimodeon",0,t):this.sendChannelMode("omnimodeoff",0,t),this}sendChannelAftertouch(e,t={}){if(R.validation){if(isNaN(parseFloat(e)))throw new RangeError("Invalid channel aftertouch value.");if(t.rawValue){if(!(e>=0&&e<=127&&Number.isInteger(e)))throw new RangeError("Channel aftertouch raw value must be an integer between 0 and 127.")}else if(!(e>=0&&e<=1))throw new RangeError("Channel aftertouch value must be a float between 0 and 1.")}return t.rawValue||(e=C.fromFloatTo7Bit(e)),this.send([(p.CHANNEL_MESSAGES.channelaftertouch<<4)+(this.number-1),Math.round(e)],{time:C.toTimestamp(t.time)}),this}sendMasterTuning(e,t={}){if(e=parseFloat(e)||0,R.validation&&!(e>-65&&e<64))throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");let r=Math.floor(e)+64,s=e-Math.floor(e);s=Math.round((s+1)/2*16383);let i=s>>7&127,o=s&127;return this.sendRpnValue("channelcoarsetuning",r,t),this.sendRpnValue("channelfinetuning",[i,o],t),this}sendModulationRange(e,t,r={}){if(R.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(t!=null&&(!Number.isInteger(t)||!(t>=0&&t<=127)))throw new RangeError("If specified, the cents value must be an integer between 0 and 127.")}return t>=0&&t<=127||(t=0),this.sendRpnValue("modulationrange",[e,t],r),this}sendNrpnValue(e,t,r={}){if(t=[].concat(t),R.validation){if(!Array.isArray(e)||!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the NRPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the NRPN must be between 0 and 127.");t.forEach(s=>{if(!(s>=0&&s<=127))throw new RangeError("The data bytes of the NRPN must be between 0 and 127.")})}return this._selectNonRegisteredParameter(e,r),this._setCurrentParameter(t,r),this._deselectNonRegisteredParameter(r),this}sendPitchBend(e,t={}){if(R.validation)if(t.rawValue&&Array.isArray(e)){if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The pitch bend LSB must be an integer between 0 and 127.")}else if(t.rawValue&&!Array.isArray(e)){if(!(e>=0&&e<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}else{if(isNaN(e)||e===null)throw new RangeError("Invalid pitch bend value.");if(!(e>=-1&&e<=1))throw new RangeError("The pitch bend value must be a float between -1 and 1.")}let r=0,s=0;if(t.rawValue&&Array.isArray(e))r=e[0],s=e[1];else if(t.rawValue&&!Array.isArray(e))r=e;else{const i=C.fromFloatToMsbLsb((e+1)/2);r=i.msb,s=i.lsb}return this.send([(p.CHANNEL_MESSAGES.pitchbend<<4)+(this.number-1),s,r],{time:C.toTimestamp(t.time)}),this}sendPitchBendRange(e,t,r={}){if(R.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError("The cents value must be an integer between 0 and 127.")}return this.sendRpnValue("pitchbendrange",[e,t],r),this}sendProgramChange(e,t={}){if(e=parseInt(e)||0,R.validation&&!(e>=0&&e<=127))throw new RangeError("The program number must be between 0 and 127.");return this.send([(p.CHANNEL_MESSAGES.programchange<<4)+(this.number-1),e],{time:C.toTimestamp(t.time)}),this}sendRpnValue(e,t,r={}){if(Array.isArray(e)||(e=p.REGISTERED_PARAMETERS[e]),R.validation){if(!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the RPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the RPN must be between 0 and 127.");[].concat(t).forEach(s=>{if(!(s>=0&&s<=127))throw new RangeError("The data bytes of the RPN must be between 0 and 127.")})}return this._selectRegisteredParameter(e,r),this._setCurrentParameter(t,r),this._deselectRegisteredParameter(r),this}sendTuningBank(e,t={}){if(R.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError("The tuning bank number must be between 0 and 127.");return this.sendRpnValue("tuningbank",e,t),this}sendTuningProgram(e,t={}){if(R.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError("The tuning program number must be between 0 and 127.");return this.sendRpnValue("tuningprogram",e,t),this}sendLocalControl(e,t={}){return e?this.sendChannelMode("localcontrol",127,t):this.sendChannelMode("localcontrol",0,t)}sendAllNotesOff(e={}){return this.sendChannelMode("allnotesoff",0,e)}sendAllSoundOff(e={}){return this.sendChannelMode("allsoundoff",0,e)}sendResetAllControllers(e={}){return this.sendChannelMode("resetallcontrollers",0,e)}sendPolyphonicMode(e,t={}){return e==="mono"?this.sendChannelMode("monomodeon",0,t):this.sendChannelMode("polymodeon",0,t)}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get output(){return this._output}get number(){return this._number}}/**
 * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).
 * A port is made available by a MIDI device. A MIDI device can advertise several input and output
 * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)
 * property.
 *
 * The `Output` object is automatically instantiated by the library according to the host's MIDI
 * subsystem and should not be directly instantiated.
 *
 * You can access all available `Output` objects by referring to the
 * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as
 * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or
 * [`WebMidi.getOutputById()`](WebMidi#getOutputById).
 *
 * @fires Output#opened
 * @fires Output#disconnected
 * @fires Output#closed
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class Zt extends be{constructor(e){super(),this._midiOutput=e,this._octaveOffset=0,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new bi(this,t);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiOutput&&(this._midiOutput.onstatechange=null),await this.close(),this._midiOutput=null}_onStateChange(e){let t={timestamp:R.time};e.port.connection==="open"?(t.type="opened",t.target=this,t.port=t.target,this.emit("opened",t)):e.port.connection==="closed"&&e.port.state==="connected"?(t.type="closed",t.target=this,t.port=t.target,this.emit("closed",t)):e.port.connection==="closed"&&e.port.state==="disconnected"?(t.type="disconnected",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):e.port.connection==="pending"&&e.port.state==="disconnected"||console.warn("This statechange event was not caught:",e.port.connection,e.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}send(e,t={time:0},r=0){if(e instanceof jn&&(e=C.isNode?e.data:e.rawData),e instanceof Uint8Array&&C.isNode&&(e=Array.from(e)),R.validation){if(!Array.isArray(e)&&!(e instanceof Uint8Array)&&(e=[e],Array.isArray(t)&&(e=e.concat(t)),t=isNaN(r)?{time:0}:{time:r}),!(parseInt(e[0])>=128&&parseInt(e[0])<=255))throw new RangeError("The first byte (status) must be an integer between 128 and 255.");e.slice(1).forEach(s=>{if(s=parseInt(s),!(s>=0&&s<=255))throw new RangeError("Data bytes must be integers between 0 and 255.")}),t||(t={time:0})}return this._midiOutput.send(e,C.toTimestamp(t.time)),this}sendSysex(e,t=[],r={}){if(e=[].concat(e),t instanceof Uint8Array){const s=new Uint8Array(1+e.length+t.length+1);s[0]=p.SYSTEM_MESSAGES.sysex,s.set(Uint8Array.from(e),1),s.set(t,1+e.length),s[s.length-1]=p.SYSTEM_MESSAGES.sysexend,this.send(s,{time:r.time})}else{const s=e.concat(t,p.SYSTEM_MESSAGES.sysexend);this.send([p.SYSTEM_MESSAGES.sysex].concat(s),{time:r.time})}return this}clear(){return this._midiOutput.clear?this._midiOutput.clear():R.validation&&console.warn("The 'clear()' method has not yet been implemented in your environment."),this}sendTimecodeQuarterFrame(e,t={}){if(R.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The value must be an integer between 0 and 127.");return this.send([p.SYSTEM_MESSAGES.timecode,e],{time:t.time}),this}sendSongPosition(e=0,t={}){e=Math.floor(e)||0;var r=e>>7&127,s=e&127;return this.send([p.SYSTEM_MESSAGES.songposition,r,s],{time:t.time}),this}sendSongSelect(e=0,t={}){if(R.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The program value must be between 0 and 127");return this.send([p.SYSTEM_MESSAGES.songselect,e],{time:t.time}),this}sendTuneRequest(e={}){return this.send([p.SYSTEM_MESSAGES.tunerequest],{time:e.time}),this}sendClock(e={}){return this.send([p.SYSTEM_MESSAGES.clock],{time:e.time}),this}sendStart(e={}){return this.send([p.SYSTEM_MESSAGES.start],{time:e.time}),this}sendContinue(e={}){return this.send([p.SYSTEM_MESSAGES.continue],{time:e.time}),this}sendStop(e={}){return this.send([p.SYSTEM_MESSAGES.stop],{time:e.time}),this}sendActiveSensing(e={}){return this.send([p.SYSTEM_MESSAGES.activesensing],{time:e.time}),this}sendReset(e={}){return this.send([p.SYSTEM_MESSAGES.reset],{time:e.time}),this}sendTuningRequest(e={}){return R.validation&&console.warn("The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead."),this.sendTuneRequest(e)}sendKeyAftertouch(e,t,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendKeyAftertouch(e,t,r)}),this}sendControlChange(e,t,r={},s={}){if(R.validation&&(Array.isArray(r)||Number.isInteger(r)||r==="all")){const i=r;r=s,r.channels=i,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)}return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(r.channels).forEach(i=>{this.channels[i].sendControlChange(e,t,r)}),this}sendPitchBendRange(e=0,t=0,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendPitchBendRange(e,t,r)}),this}setPitchBendRange(e=0,t=0,r="all",s={}){return R.validation&&(console.warn("The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead."),s.channels=r,s.channels==="all"&&(s.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendPitchBendRange(e,t,s)}sendRpnValue(e,t,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendRpnValue(e,t,r)}),this}setRegisteredParameter(e,t=[],r="all",s={}){return R.validation&&(console.warn("The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead."),s.channels=r,s.channels==="all"&&(s.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendRpnValue(e,t,s)}sendChannelAftertouch(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendChannelAftertouch(e,t)}),this}sendPitchBend(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendPitchBend(e,t)}),this}sendProgramChange(e=0,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendProgramChange(e,t)}),this}sendModulationRange(e,t,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendModulationRange(e,t,r)}),this}setModulationRange(e=0,t=0,r="all",s={}){return R.validation&&(console.warn("The setModulationRange() method is deprecated. Use sendModulationRange() instead."),s.channels=r,s.channels==="all"&&(s.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendModulationRange(e,t,s)}sendMasterTuning(e,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendMasterTuning(e,t)}),this}setMasterTuning(e,t={},r={}){return R.validation&&(console.warn("The setMasterTuning() method is deprecated. Use sendMasterTuning() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendMasterTuning(e,r)}sendTuningProgram(e,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendTuningProgram(e,t)}),this}setTuningProgram(e,t="all",r={}){return R.validation&&(console.warn("The setTuningProgram() method is deprecated. Use sendTuningProgram() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendTuningProgram(e,r)}sendTuningBank(e=0,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendTuningBank(e,t)}),this}setTuningBank(e,t="all",r={}){return R.validation&&(console.warn("The setTuningBank() method is deprecated. Use sendTuningBank() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendTuningBank(e,r)}sendChannelMode(e,t=0,r={},s={}){if(R.validation&&(Array.isArray(r)||Number.isInteger(r)||r==="all")){const i=r;r=s,r.channels=i,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)}return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(r.channels).forEach(i=>{this.channels[i].sendChannelMode(e,t,r)}),this}sendAllSoundOff(e={}){return e.channels==null&&(e.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllSoundOff(e)}),this}sendAllNotesOff(e={}){return e.channels==null&&(e.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllNotesOff(e)}),this}sendResetAllControllers(e={},t={}){if(R.validation&&(Array.isArray(e)||Number.isInteger(e)||e==="all")){const r=e;e=t,e.channels=r,e.channels==="all"&&(e.channels=p.MIDI_CHANNEL_NUMBERS)}return e.channels==null&&(e.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(e.channels).forEach(r=>{this.channels[r].sendResetAllControllers(e)}),this}sendPolyphonicMode(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendPolyphonicMode(e,t)}),this}sendLocalControl(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendLocalControl(e,t)}),this}sendOmniMode(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendOmniMode(e,t)}),this}sendNrpnValue(e,t,r={}){return r.channels==null&&(r.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].sendNrpnValue(e,t,r)}),this}setNonRegisteredParameter(e,t=[],r="all",s={}){return R.validation&&(console.warn("The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead."),s.channels=r,s.channels==="all"&&(s.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendNrpnValue(e,t,s)}sendRpnIncrement(e,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendRpnIncrement(e,t)}),this}incrementRegisteredParameter(e,t="all",r={}){return R.validation&&(console.warn("The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendRpnIncrement(e,r)}sendRpnDecrement(e,t={}){return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(r=>{this.channels[r].sendRpnDecrement(e,t)}),this}decrementRegisteredParameter(e,t="all",r={}){return R.validation&&(console.warn("The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead."),r.channels=t,r.channels==="all"&&(r.channels=p.MIDI_CHANNEL_NUMBERS)),this.sendRpnDecrement(e,r)}sendNoteOff(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendNoteOff(e,t)}),this}stopNote(e,t){return this.sendNoteOff(e,t)}playNote(e,t={},r={}){if(R.validation&&(t.rawVelocity&&console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' instead."),t.velocity&&console.warn("The 'velocity' option is deprecated. Use 'velocity' instead."),Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].playNote(e,t)}),this}sendNoteOn(e,t={},r={}){if(R.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=r,t.channels=s,t.channels==="all"&&(t.channels=p.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendNoteOn(e,t)}),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}}/**
 * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you
 * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object
 * to all the outputs listed in its [`destinations`](#destinations) property.
 *
 * If specific channels or message types have been defined in the [`channels`](#channels) or
 * [`types`](#types) properties, only messages matching the channels/types will be forwarded.
 *
 * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as
 * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class pn{constructor(e=[],t={}){this.destinations=[],this.types=[...Object.keys(p.SYSTEM_MESSAGES),...Object.keys(p.CHANNEL_MESSAGES)],this.channels=p.MIDI_CHANNEL_NUMBERS,this.suspended=!1,Array.isArray(e)||(e=[e]),t.types&&!Array.isArray(t.types)&&(t.types=[t.types]),t.channels&&!Array.isArray(t.channels)&&(t.channels=[t.channels]),R.validation&&(e.forEach(r=>{if(!(r instanceof Zt))throw new TypeError("Destinations must be of type 'Output'.")}),t.types!==void 0&&t.types.forEach(r=>{if(!p.SYSTEM_MESSAGES.hasOwnProperty(r)&&!p.CHANNEL_MESSAGES.hasOwnProperty(r))throw new TypeError("Type must be a valid message type.")}),t.channels!==void 0&&t.channels.forEach(r=>{if(!p.MIDI_CHANNEL_NUMBERS.includes(r))throw new TypeError("MIDI channel must be between 1 and 16.")})),this.destinations=e,t.types&&(this.types=t.types),t.channels&&(this.channels=t.channels)}forward(e){this.suspended||this.types.includes(e.type)&&(e.channel&&!this.channels.includes(e.channel)||this.destinations.forEach(t=>{R.validation&&!(t instanceof Zt)||t.send(e)}))}}/**
 * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input
 * device. This object is derived from the host's MIDI subsystem and should not be instantiated
 * directly.
 *
 * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)
 * property.
 *
 * @fires InputChannel#midimessage
 * @fires InputChannel#unknownmessage
 *
 * @fires InputChannel#noteoff
 * @fires InputChannel#noteon
 * @fires InputChannel#keyaftertouch
 * @fires InputChannel#programchange
 * @fires InputChannel#channelaftertouch
 * @fires InputChannel#pitchbend
 *
 * @fires InputChannel#allnotesoff
 * @fires InputChannel#allsoundoff
 * @fires InputChannel#localcontrol
 * @fires InputChannel#monomode
 * @fires InputChannel#omnimode
 * @fires InputChannel#resetallcontrollers
 *
 * @fires InputChannel#event:nrpn
 * @fires InputChannel#event:nrpn-dataentrycoarse
 * @fires InputChannel#event:nrpn-dataentryfine
 * @fires InputChannel#event:nrpn-dataincrement
 * @fires InputChannel#event:nrpn-datadecrement
 * @fires InputChannel#event:rpn
 * @fires InputChannel#event:rpn-dataentrycoarse
 * @fires InputChannel#event:rpn-dataentryfine
 * @fires InputChannel#event:rpn-dataincrement
 * @fires InputChannel#event:rpn-datadecrement
 *
 * @fires InputChannel#controlchange
 * @fires InputChannel#event:controlchange-controllerxxx
 * @fires InputChannel#event:controlchange-bankselectcoarse
 * @fires InputChannel#event:controlchange-modulationwheelcoarse
 * @fires InputChannel#event:controlchange-breathcontrollercoarse
 * @fires InputChannel#event:controlchange-footcontrollercoarse
 * @fires InputChannel#event:controlchange-portamentotimecoarse
 * @fires InputChannel#event:controlchange-dataentrycoarse
 * @fires InputChannel#event:controlchange-volumecoarse
 * @fires InputChannel#event:controlchange-balancecoarse
 * @fires InputChannel#event:controlchange-pancoarse
 * @fires InputChannel#event:controlchange-expressioncoarse
 * @fires InputChannel#event:controlchange-effectcontrol1coarse
 * @fires InputChannel#event:controlchange-effectcontrol2coarse
 * @fires InputChannel#event:controlchange-generalpurposecontroller1
 * @fires InputChannel#event:controlchange-generalpurposecontroller2
 * @fires InputChannel#event:controlchange-generalpurposecontroller3
 * @fires InputChannel#event:controlchange-generalpurposecontroller4
 * @fires InputChannel#event:controlchange-bankselectfine
 * @fires InputChannel#event:controlchange-modulationwheelfine
 * @fires InputChannel#event:controlchange-breathcontrollerfine
 * @fires InputChannel#event:controlchange-footcontrollerfine
 * @fires InputChannel#event:controlchange-portamentotimefine
 * @fires InputChannel#event:controlchange-dataentryfine
 * @fires InputChannel#event:controlchange-channelvolumefine
 * @fires InputChannel#event:controlchange-balancefine
 * @fires InputChannel#event:controlchange-panfine
 * @fires InputChannel#event:controlchange-expressionfine
 * @fires InputChannel#event:controlchange-effectcontrol1fine
 * @fires InputChannel#event:controlchange-effectcontrol2fine
 * @fires InputChannel#event:controlchange-damperpedal
 * @fires InputChannel#event:controlchange-portamento
 * @fires InputChannel#event:controlchange-sostenuto
 * @fires InputChannel#event:controlchange-softpedal
 * @fires InputChannel#event:controlchange-legatopedal
 * @fires InputChannel#event:controlchange-hold2
 * @fires InputChannel#event:controlchange-soundvariation
 * @fires InputChannel#event:controlchange-resonance
 * @fires InputChannel#event:controlchange-releasetime
 * @fires InputChannel#event:controlchange-attacktime
 * @fires InputChannel#event:controlchange-brightness
 * @fires InputChannel#event:controlchange-decaytime
 * @fires InputChannel#event:controlchange-vibratorate
 * @fires InputChannel#event:controlchange-vibratodepth
 * @fires InputChannel#event:controlchange-vibratodelay
 * @fires InputChannel#event:controlchange-generalpurposecontroller5
 * @fires InputChannel#event:controlchange-generalpurposecontroller6
 * @fires InputChannel#event:controlchange-generalpurposecontroller7
 * @fires InputChannel#event:controlchange-generalpurposecontroller8
 * @fires InputChannel#event:controlchange-portamentocontrol
 * @fires InputChannel#event:controlchange-highresolutionvelocityprefix
 * @fires InputChannel#event:controlchange-effect1depth
 * @fires InputChannel#event:controlchange-effect2depth
 * @fires InputChannel#event:controlchange-effect3depth
 * @fires InputChannel#event:controlchange-effect4depth
 * @fires InputChannel#event:controlchange-effect5depth
 * @fires InputChannel#event:controlchange-dataincrement
 * @fires InputChannel#event:controlchange-datadecrement
 * @fires InputChannel#event:controlchange-nonregisteredparameterfine
 * @fires InputChannel#event:controlchange-nonregisteredparametercoarse
 * @fires InputChannel#event:controlchange-registeredparameterfine
 * @fires InputChannel#event:controlchange-registeredparametercoarse
 * @fires InputChannel#event:controlchange-allsoundoff
 * @fires InputChannel#event:controlchange-resetallcontrollers
 * @fires InputChannel#event:controlchange-localcontrol
 * @fires InputChannel#event:controlchange-allnotesoff
 * @fires InputChannel#event:controlchange-omnimodeoff
 * @fires InputChannel#event:controlchange-omnimodeon
 * @fires InputChannel#event:controlchange-monomodeon
 * @fires InputChannel#event:controlchange-polymodeon
 * @fires InputChannel#event:
 *
 * @extends EventEmitter
 * @license Apache-2.0
 * @since 3.0.0
 */class _i extends be{constructor(e,t){super(),this._input=e,this._number=t,this._octaveOffset=0,this._nrpnBuffer=[],this._rpnBuffer=[],this.parameterNumberEventsEnabled=!0,this.notesState=new Array(128).fill(!1)}destroy(){this._input=null,this._number=null,this._octaveOffset=0,this._nrpnBuffer=[],this.notesState=new Array(128).fill(!1),this.parameterNumberEventsEnabled=!1,this.removeListener()}_processMidiMessageEvent(e){const t=Object.assign({},e);t.port=this.input,t.target=this,t.type="midimessage",this.emit(t.type,t),this._parseEventForStandardMessages(t)}_parseEventForStandardMessages(e){const t=Object.assign({},e);t.type=t.message.type||"unknownmessage";const r=e.message.dataBytes[0],s=e.message.dataBytes[1];if(t.type==="noteoff"||t.type==="noteon"&&s===0)this.notesState[r]=!1,t.type="noteoff",t.note=new Ce(C.offsetNumber(r,this.octaveOffset+this.input.octaveOffset+R.octaveOffset),{rawAttack:0,rawRelease:s}),t.value=C.from7bitToFloat(s),t.rawValue=s,t.velocity=t.note.release,t.rawVelocity=t.note.rawRelease;else if(t.type==="noteon")this.notesState[r]=!0,t.note=new Ce(C.offsetNumber(r,this.octaveOffset+this.input.octaveOffset+R.octaveOffset),{rawAttack:s}),t.value=C.from7bitToFloat(s),t.rawValue=s,t.velocity=t.note.attack,t.rawVelocity=t.note.rawAttack;else if(t.type==="keyaftertouch")t.note=new Ce(C.offsetNumber(r,this.octaveOffset+this.input.octaveOffset+R.octaveOffset)),t.value=C.from7bitToFloat(s),t.rawValue=s,t.identifier=t.note.identifier,t.key=t.note.number,t.rawKey=r;else if(t.type==="controlchange"){t.controller={number:r,name:p.CONTROL_CHANGE_MESSAGES[r].name,description:p.CONTROL_CHANGE_MESSAGES[r].description,position:p.CONTROL_CHANGE_MESSAGES[r].position},t.subtype=t.controller.name||"controller"+r,t.value=C.from7bitToFloat(s),t.rawValue=s;const i=Object.assign({},t);i.type=`${t.type}-controller${r}`,delete i.subtype,this.emit(i.type,i);const o=Object.assign({},t);o.type=`${t.type}-`+p.CONTROL_CHANGE_MESSAGES[r].name,delete o.subtype,o.type.indexOf("controller")!==0&&this.emit(o.type,o),t.message.dataBytes[0]>=120&&this._parseChannelModeMessage(t),this.parameterNumberEventsEnabled&&this._isRpnOrNrpnController(t.message.dataBytes[0])&&this._parseEventForParameterNumber(t)}else t.type==="programchange"?(t.value=r,t.rawValue=t.value):t.type==="channelaftertouch"?(t.value=C.from7bitToFloat(r),t.rawValue=r):t.type==="pitchbend"?(t.value=((s<<7)+r-8192)/8192,t.rawValue=(s<<7)+r):t.type="unknownmessage";this.emit(t.type,t)}_parseChannelModeMessage(e){const t=Object.assign({},e);t.type=t.controller.name,t.type==="localcontrol"&&(t.value=t.message.data[2]===127,t.rawValue=t.message.data[2]),t.type==="omnimodeon"?(t.type="omnimode",t.value=!0,t.rawValue=t.message.data[2]):t.type==="omnimodeoff"&&(t.type="omnimode",t.value=!1,t.rawValue=t.message.data[2]),t.type==="monomodeon"?(t.type="monomode",t.value=!0,t.rawValue=t.message.data[2]):t.type==="polymodeon"&&(t.type="monomode",t.value=!1,t.rawValue=t.message.data[2]),this.emit(t.type,t)}_parseEventForParameterNumber(e){const t=e.message.dataBytes[0],r=e.message.dataBytes[1];t===99||t===101?(this._nrpnBuffer=[],this._rpnBuffer=[],t===99?this._nrpnBuffer=[e.message]:r!==127&&(this._rpnBuffer=[e.message])):t===98||t===100?t===98?(this._rpnBuffer=[],this._nrpnBuffer.length===1?this._nrpnBuffer.push(e.message):this._nrpnBuffer=[]):(this._nrpnBuffer=[],this._rpnBuffer.length===1&&r!==127?this._rpnBuffer.push(e.message):this._rpnBuffer=[]):(t===6||t===38||t===96||t===97)&&(this._rpnBuffer.length===2?this._dispatchParameterNumberEvent("rpn",this._rpnBuffer[0].dataBytes[1],this._rpnBuffer[1].dataBytes[1],e):this._nrpnBuffer.length===2?this._dispatchParameterNumberEvent("nrpn",this._nrpnBuffer[0].dataBytes[1],this._nrpnBuffer[1].dataBytes[1],e):(this._nrpnBuffer=[],this._rpnBuffer=[]))}_isRpnOrNrpnController(e){return e===6||e===38||e===96||e===97||e===98||e===99||e===100||e===101}_dispatchParameterNumberEvent(e,t,r,s){e=e==="nrpn"?"nrpn":"rpn";const i={target:s.target,timestamp:s.timestamp,message:s.message,parameterMsb:t,parameterLsb:r,value:C.from7bitToFloat(s.message.dataBytes[1]),rawValue:s.message.dataBytes[1]};e==="rpn"?i.parameter=Object.keys(p.REGISTERED_PARAMETERS).find(l=>p.REGISTERED_PARAMETERS[l][0]===t&&p.REGISTERED_PARAMETERS[l][1]===r):i.parameter=(t<<7)+r;const o=p.CONTROL_CHANGE_MESSAGES[s.message.dataBytes[0]].name;i.type=`${e}-${o}`,this.emit(i.type,i);const u=Object.assign({},i);u.type==="nrpn-dataincrement"?u.type="nrpn-databuttonincrement":u.type==="nrpn-datadecrement"?u.type="nrpn-databuttondecrement":u.type==="rpn-dataincrement"?u.type="rpn-databuttonincrement":u.type==="rpn-datadecrement"&&(u.type="rpn-databuttondecrement"),this.emit(u.type,u),i.type=e,i.subtype=o,this.emit(i.type,i)}getChannelModeByNumber(e){return R.validation&&(console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class."),e=Math.floor(e)),C.getChannelModeByNumber(e)}getCcNameByNumber(e){if(R.validation&&(console.warn("The 'getCcNameByNumber()' method has been moved to the 'Utilities' class."),e=parseInt(e),!(e>=0&&e<=127)))throw new RangeError("Invalid control change number.");return C.getCcNameByNumber(e)}getNoteState(e){e instanceof Ce&&(e=e.identifier);const t=C.guessNoteNumber(e,R.octaveOffset+this.input.octaveOffset+this.octaveOffset);return this.notesState[t]}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get input(){return this._input}get number(){return this._number}get nrpnEventsEnabled(){return this.parameterNumberEventsEnabled}set nrpnEventsEnabled(e){this.validation&&(e=!!e),this.parameterNumberEventsEnabled=e}}/**
 * The `Message` class represents a single MIDI message. It has several properties that make it
 * easy to make sense of the binary data it contains.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class jn{constructor(e){this.rawData=e,this.data=Array.from(this.rawData),this.statusByte=this.rawData[0],this.rawDataBytes=this.rawData.slice(1),this.dataBytes=this.data.slice(1),this.isChannelMessage=!1,this.isSystemMessage=!1,this.command=void 0,this.channel=void 0,this.manufacturerId=void 0,this.type=void 0,this.statusByte<240?(this.isChannelMessage=!0,this.command=this.statusByte>>4,this.channel=(this.statusByte&15)+1):(this.isSystemMessage=!0,this.command=this.statusByte),this.isChannelMessage?this.type=C.getPropertyByValue(p.CHANNEL_MESSAGES,this.command):this.isSystemMessage&&(this.type=C.getPropertyByValue(p.SYSTEM_MESSAGES,this.command)),this.statusByte===p.SYSTEM_MESSAGES.sysex&&(this.dataBytes[0]===0?(this.manufacturerId=this.dataBytes.slice(0,3),this.dataBytes=this.dataBytes.slice(3,this.rawDataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(3,this.rawDataBytes.length-1)):(this.manufacturerId=[this.dataBytes[0]],this.dataBytes=this.dataBytes.slice(1,this.dataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(1,this.rawDataBytes.length-1)))}}/**
 * The `Input` class represents a single MIDI input port. This object is automatically instantiated
 * by the library according to the host's MIDI subsystem and does not need to be directly
 * instantiated. Instead, you can access all `Input` objects by referring to the
 * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as
 * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and
 * [`WebMidi.getInputById()`](WebMidi#getInputById).
 *
 * Note that a single MIDI device may expose several inputs and/or outputs.
 *
 * **Important**: the `Input` class does not directly fire channel-specific MIDI messages
 * (such as [`noteon`](InputChannel#event:noteon) or
 * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)
 * object does that. However, you can still use the
 * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple
 * [`InputChannel`](InputChannel) objects at once.
 *
 * @fires Input#opened
 * @fires Input#disconnected
 * @fires Input#closed
 * @fires Input#midimessage
 *
 * @fires Input#sysex
 * @fires Input#timecode
 * @fires Input#songposition
 * @fires Input#songselect
 * @fires Input#tunerequest
 * @fires Input#clock
 * @fires Input#start
 * @fires Input#continue
 * @fires Input#stop
 * @fires Input#activesensing
 * @fires Input#reset
 *
 * @fires Input#unknownmidimessage
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class Ni extends be{constructor(e){super(),this._midiInput=e,this._octaveOffset=0,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new _i(this,t);this._forwarders=[],this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._forwarders=[],this._midiInput&&(this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null),await this.close(),this._midiInput=null}_onStateChange(e){let t={timestamp:R.time,target:this,port:this};e.port.connection==="open"?(t.type="opened",this.emit("opened",t)):e.port.connection==="closed"&&e.port.state==="connected"?(t.type="closed",this.emit("closed",t)):e.port.connection==="closed"&&e.port.state==="disconnected"?(t.type="disconnected",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):e.port.connection==="pending"&&e.port.state==="disconnected"||console.warn("This statechange event was not caught: ",e.port.connection,e.port.state)}_onMidiMessage(e){const t=new jn(e.data),r={port:this,target:this,message:t,timestamp:e.timeStamp,type:"midimessage",data:t.data,rawData:t.data,statusByte:t.data[0],dataBytes:t.dataBytes};this.emit("midimessage",r),t.isSystemMessage?this._parseEvent(r):t.isChannelMessage&&this.channels[t.channel]._processMidiMessageEvent(r),this._forwarders.forEach(s=>s.forward(t))}_parseEvent(e){const t=Object.assign({},e);t.type=t.message.type||"unknownmidimessage",t.type==="songselect"&&(t.song=e.data[1]+1,t.value=e.data[1],t.rawValue=t.value),this.emit(t.type,t)}async open(){try{await this._midiInput.open()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}async close(){if(!this._midiInput)return Promise.resolve(this);try{await this._midiInput.close()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}getChannelModeByNumber(){R.validation&&console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.")}addListener(e,t,r={}){if(R.validation&&typeof r=="function"){let s=t!=null?[].concat(t):void 0;t=r,r={channels:s}}if(p.CHANNEL_EVENTS.includes(e)){r.channels===void 0&&(r.channels=p.MIDI_CHANNEL_NUMBERS);let s=[];return C.sanitizeChannels(r.channels).forEach(i=>{s.push(this.channels[i].addListener(e,t,r))}),s}else return super.addListener(e,t,r)}addOneTimeListener(e,t,r={}){return r.remaining=1,this.addListener(e,t,r)}on(e,t,r,s){return this.addListener(e,t,r,s)}hasListener(e,t,r={}){if(R.validation&&typeof r=="function"){let s=[].concat(t);t=r,r={channels:s}}return p.CHANNEL_EVENTS.includes(e)?(r.channels===void 0&&(r.channels=p.MIDI_CHANNEL_NUMBERS),C.sanitizeChannels(r.channels).every(s=>this.channels[s].hasListener(e,t))):super.hasListener(e,t)}removeListener(e,t,r={}){if(R.validation&&typeof r=="function"){let s=[].concat(t);t=r,r={channels:s}}if(r.channels===void 0&&(r.channels=p.MIDI_CHANNEL_NUMBERS),e==null)return C.sanitizeChannels(r.channels).forEach(s=>{this.channels[s]&&this.channels[s].removeListener()}),super.removeListener();p.CHANNEL_EVENTS.includes(e)?C.sanitizeChannels(r.channels).forEach(s=>{this.channels[s].removeListener(e,t,r)}):super.removeListener(e,t,r)}addForwarder(e,t={}){let r;return e instanceof pn?r=e:r=new pn(e,t),this._forwarders.push(r),r}removeForwarder(e){this._forwarders=this._forwarders.filter(t=>t!==e)}hasForwarder(e){return this._forwarders.includes(e)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return R.validation&&console.warn("The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class."),!1}}/**
 * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it
 * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.
 *
 * When using the WebMidi.js library, you should know that the `WebMidi` class has already been
 * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should
 * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6
 * module) version, you get an already-instantiated object when you import the module.
 *
 * @fires WebMidi#connected
 * @fires WebMidi#disabled
 * @fires WebMidi#disconnected
 * @fires WebMidi#enabled
 * @fires WebMidi#error
 * @fires WebMidi#midiaccessgranted
 * @fires WebMidi#portschanged
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class yi extends be{constructor(){super(),this.defaults={note:{attack:C.from7bitToFloat(64),release:C.from7bitToFloat(64),duration:1/0}},this.interface=null,this.validation=!0,this._inputs=[],this._disconnectedInputs=[],this._outputs=[],this._disconnectedOutputs=[],this._stateChangeQueue=[],this._octaveOffset=0}async enable(e={},t=!1){if(C.isNode)try{window.navigator}catch{let u=await Object.getPrototypeOf(async function(){}).constructor(`
        let jzz = await import("jzz");
        return jzz.default;
        `)();global.navigator||(global.navigator={}),Object.assign(global.navigator,u)}if(this.validation=e.validation!==!1,this.validation&&(typeof e=="function"&&(e={callback:e,sysex:t}),t&&(e.sysex=!0)),this.enabled)return typeof e.callback=="function"&&e.callback(),Promise.resolve();const r={timestamp:this.time,target:this,type:"error",error:void 0},s={timestamp:this.time,target:this,type:"midiaccessgranted"},i={timestamp:this.time,target:this,type:"enabled"};try{typeof e.requestMIDIAccessFunction=="function"?this.interface=await e.requestMIDIAccessFunction({sysex:e.sysex,software:e.software}):this.interface=await navigator.requestMIDIAccess({sysex:e.sysex,software:e.software})}catch(o){return r.error=o,this.emit("error",r),typeof e.callback=="function"&&e.callback(o),Promise.reject(o)}this.emit("midiaccessgranted",s),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{await this._updateInputsAndOutputs()}catch(o){return r.error=o,this.emit("error",r),typeof e.callback=="function"&&e.callback(o),Promise.reject(o)}return this.emit("enabled",i),typeof e.callback=="function"&&e.callback(),Promise.resolve(this)}async disable(){return this.interface&&(this.interface.onstatechange=void 0),this._destroyInputsAndOutputs().then(()=>{navigator&&typeof navigator.close=="function"&&navigator.close(),this.interface=null;let e={timestamp:this.time,target:this,type:"disabled"};this.emit("disabled",e),this.removeListener()})}getInputById(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return}if(t.disconnected){for(let r=0;r<this._disconnectedInputs.length;r++)if(this._disconnectedInputs[r].id===e.toString())return this._disconnectedInputs[r]}else for(let r=0;r<this.inputs.length;r++)if(this.inputs[r].id===e.toString())return this.inputs[r]}getInputByName(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return;e=e.toString()}if(t.disconnected){for(let r=0;r<this._disconnectedInputs.length;r++)if(~this._disconnectedInputs[r].name.indexOf(e))return this._disconnectedInputs[r]}else for(let r=0;r<this.inputs.length;r++)if(~this.inputs[r].name.indexOf(e))return this.inputs[r]}getOutputByName(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return;e=e.toString()}if(t.disconnected){for(let r=0;r<this._disconnectedOutputs.length;r++)if(~this._disconnectedOutputs[r].name.indexOf(e))return this._disconnectedOutputs[r]}else for(let r=0;r<this.outputs.length;r++)if(~this.outputs[r].name.indexOf(e))return this.outputs[r]}getOutputById(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return}if(t.disconnected){for(let r=0;r<this._disconnectedOutputs.length;r++)if(this._disconnectedOutputs[r].id===e.toString())return this._disconnectedOutputs[r]}else for(let r=0;r<this.outputs.length;r++)if(this.outputs[r].id===e.toString())return this.outputs[r]}noteNameToNumber(e){return this.validation&&console.warn("The noteNameToNumber() method is deprecated. Use Utilities.toNoteNumber() instead."),C.toNoteNumber(e,this.octaveOffset)}getOctave(e){return this.validation&&(console.warn("The getOctave()is deprecated. Use Utilities.getNoteDetails() instead"),e=parseInt(e)),!isNaN(e)&&e>=0&&e<=127?C.getNoteDetails(C.offsetNumber(e,this.octaveOffset)).octave:!1}sanitizeChannels(e){return this.validation&&console.warn("The sanitizeChannels() method has been moved to the utilities class."),C.sanitizeChannels(e)}toMIDIChannels(e){return this.validation&&console.warn("The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead."),C.sanitizeChannels(e)}guessNoteNumber(e){return this.validation&&console.warn("The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead."),C.guessNoteNumber(e,this.octaveOffset)}getValidNoteArray(e,t={}){return this.validation&&console.warn("The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()"),C.buildNoteArray(e,t)}convertToTimestamp(e){return this.validation&&console.warn("The convertToTimestamp() method has been moved to Utilities.toTimestamp()."),C.toTimestamp(e)}async _destroyInputsAndOutputs(){let e=[];return this.inputs.forEach(t=>e.push(t.destroy())),this.outputs.forEach(t=>e.push(t.destroy())),Promise.all(e).then(()=>{this._inputs=[],this._outputs=[]})}_onInterfaceStateChange(e){this._updateInputsAndOutputs();let t={timestamp:e.timeStamp,type:e.port.state,target:this};if(e.port.state==="connected"&&e.port.connection==="open"){e.port.type==="output"?t.port=this.getOutputById(e.port.id):e.port.type==="input"&&(t.port=this.getInputById(e.port.id)),this.emit(e.port.state,t);const r=Object.assign({},t);r.type="portschanged",this.emit(r.type,r)}else if(e.port.state==="disconnected"&&e.port.connection==="pending"){e.port.type==="input"?t.port=this.getInputById(e.port.id,{disconnected:!0}):e.port.type==="output"&&(t.port=this.getOutputById(e.port.id,{disconnected:!0})),this.emit(e.port.state,t);const r=Object.assign({},t);r.type="portschanged",this.emit(r.type,r)}}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){if(!this.interface)return;for(let t=this._inputs.length-1;t>=0;t--){const r=this._inputs[t];Array.from(this.interface.inputs.values()).find(i=>i===r._midiInput)||(this._disconnectedInputs.push(r),this._inputs.splice(t,1))}let e=[];return this.interface.inputs.forEach(t=>{if(!this._inputs.find(r=>r._midiInput===t)){let r=this._disconnectedInputs.find(s=>s._midiInput===t);r||(r=new Ni(t)),this._inputs.push(r),e.push(r.open())}}),Promise.all(e)}async _updateOutputs(){if(!this.interface)return;for(let t=this._outputs.length-1;t>=0;t--){const r=this._outputs[t];Array.from(this.interface.outputs.values()).find(i=>i===r._midiOutput)||(this._disconnectedOutputs.push(r),this._outputs.splice(t,1))}let e=[];return this.interface.outputs.forEach(t=>{if(!this._outputs.find(r=>r._midiOutput===t)){let r=this._disconnectedOutputs.find(s=>s._midiOutput===t);r||(r=new Zt(t)),this._outputs.push(r),e.push(r.open())}}),Promise.all(e)}get enabled(){return this.interface!==null}get inputs(){return this._inputs}get isNode(){return this.validation&&console.warn("WebMidi.isNode has been deprecated. Use Utilities.isNode instead."),C.isNode}get isBrowser(){return this.validation&&console.warn("WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead."),C.isBrowser}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get outputs(){return this._outputs}get supported(){return typeof navigator<"u"&&!!navigator.requestMIDIAccess}get sysexEnabled(){return!!(this.interface&&this.interface.sysexEnabled)}get time(){return performance.now()}get version(){return"3.1.12"}get flavour(){return"esm"}get CHANNEL_EVENTS(){return this.validation&&console.warn("The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS."),p.CHANNEL_EVENTS}get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn("The MIDI_SYSTEM_MESSAGES enum has been moved to Enumerations.SYSTEM_MESSAGES."),p.SYSTEM_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to Enumerations.CHANNEL_MODE_MESSAGES."),p.CHANNEL_MODE_MESSAGES}get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn("The MIDI_CONTROL_CHANGE_MESSAGES enum has been replaced by the Enumerations.CONTROL_CHANGE_MESSAGES array."),p.MIDI_CONTROL_CHANGE_MESSAGES}get MIDI_REGISTERED_PARAMETER(){return this.validation&&console.warn("The MIDI_REGISTERED_PARAMETER enum has been moved to Enumerations.REGISTERED_PARAMETERS."),p.REGISTERED_PARAMETERS}get NOTES(){return this.validation&&console.warn("The NOTES enum has been deprecated."),["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}}const R=new yi;R.constructor=null;const je=(...n)=>{},Si=[{name:"unknown",controlCount:0,capabilities:{}},{name:"Oxion development board",controlCount:4,capabilities:{led:!0}},{name:"16n",controlCount:16,capabilities:{i2c:!0,led:!0,faderCalibration:!0,highResolution:"2.2.0"},latestFirmwareVersion:"2.2.0",firmwareUrl:"https://github.com/16n-faderbank/16n/releases/latest"},{name:"16n (LC)",controlCount:16,capabilities:{i2c:!0,led:!0,faderCalibration:!0,highResolution:"2.2.0"},sendShortMessages:!0,latestFirmwareVersion:"2.1.1",firmwareUrl:"https://github.com/16n-faderbank/16n/releases/latest"},{name:"16rx",controlCount:16,capabilities:{i2c:!0,led:!0,highResolution:"3.1.0"},latestFirmwareVersion:"3.1.1",firmwareUrl:"https://github.com/16n-faderbank/16next_firmware/releases/latest"},{name:"16nx",controlCount:16,capabilities:{i2c:!0,led:!0,highResolution:"3.1.0"},latestFirmwareVersion:"3.1.1",firmwareUrl:"https://github.com/16n-faderbank/16next_firmware/releases/latest"}],zn=(n,e)=>{let t=n.ledOn==e.ledOn&&n.ledFlash==e.ledFlash&&n.controllerFlip==e.controllerFlip&&n.midiThru==e.midiThru;("i2cLeader"in n||"i2cLeader"in e)&&(t=t&&n.i2cLeader==e.i2cLeader),("faderMax"in n||"faderMax"in e)&&(t=t&&n.faderMax==e.faderMax&&n.faderMin==e.faderMin);let r=!0,s=!0;return n.usbControls.forEach((i,o)=>{const u=e.usbControls[o];(i.channel!=u.channel||i.cc!=u.cc||i.highResolution!=u.highResolution)&&(r=!1)}),n.trsControls.forEach((i,o)=>{const u=e.trsControls[o];(i.channel!=u.channel||i.cc!=u.cc||i.highResolution!=u.highResolution)&&(s=!1)}),t&&r&&s},Be=n=>{const e=Array.from({length:84},()=>0),t=n.firmwareVersion.trim().split(".").map(d=>parseInt(d));e[0]=n.deviceId,e[1]=t[0],e[2]=t[1],e[3]=t[2],e[4]=n.ledOn?1:0,e[5]=n.ledFlash?1:0,e[6]=n.controllerFlip?1:0,e[7]=n.i2cLeader?1:0;const r=n.faderMin>>7,s=n.faderMin-(r<<7);e[8]=s,e[9]=r;const i=n.faderMax>>7,o=n.faderMax-(i<<7);e[10]=o,e[11]=i,e[12]=n.midiThru?1:0;const u=20,l=36,c=52,a=68;if(n.usbControls.forEach((d,f)=>{e[f+u]=d.channel,e[f+c]=d.cc}),n.trsControls.forEach((d,f)=>{e[f+l]=d.channel,e[f+a]=d.cc}),Se(Ee(n.deviceId),"highResolution",t.join("."))){const v=En(n.usbControls),I=En(n.trsControls);v.forEach((h,A)=>{e[84+A]=v[A]}),I.forEach((h,A)=>{e[87+A]=I[A]})}return e},Ri=n=>Be(n).slice(4,20),wi=n=>{const e=Be(n),t=e.slice(20,36),r=e.slice(52,68);return t.concat(r)},Ii=n=>{const e=Be(n),t=e.slice(36,52),r=e.slice(68,84);return t.concat(r)},Ci=n=>{const e={...n},t=Ee(n.deviceId).controlCount;return e.usbControls=e.usbControls.splice(0,t),e.usbControls.forEach(r=>delete r.val),e.trsControls=e.trsControls.splice(0,t),JSON.stringify(e,null,2)},Ai=(n,e)=>e.deviceId!=n.deviceId?`Cannot update - this data file is for a ${Ee(e.deviceId).name}, but you are trying to install it on a ${Ee(n.deviceId).name} `:!1,Mi=(n,e)=>(Object.keys(e).forEach(t=>{n[t]=e[t]}),n),Ti=n=>{const t=n[5],r=n[6]+"."+n[7]+"."+n[8],s=n[9]==1,i=n[10]==1,o=n[11]==1,u=n[12]==1,l=n[13],a=(n[14]<<7)+l,d=n[15],v=(n[16]<<7)+d,I=n[17]==1,h=[],A=[];n.slice(25,41).forEach((b,N)=>{b!=127&&(h[N]={channel:b})}),n.slice(41,57).forEach((b,N)=>{b!=127&&(A[N]={channel:b})}),n.slice(57,73).forEach((b,N)=>{b!=127&&(h[N].cc=b)}),n.slice(73,89).forEach((b,N)=>{b!=127&&(A[N].cc=b)}),h.forEach(b=>b.val=0);const m=Ee(t);let _=Array.from(Array(16)).map(()=>!1),g=Array.from(Array(16)).map(()=>!1);if(m&&Se(m,"highResolution",r)){const b=n.slice(89,92);_=vn(b),h.forEach((O,D)=>{O.highResolution=_[D]});const N=n.slice(92,95);g=vn(N),A.forEach((O,D)=>{O.highResolution=g[D]})}return{ledOn:s,ledFlash:i,controllerFlip:o,midiThru:I,usbControls:h,trsControls:A,deviceId:t,firmwareVersion:r,i2cLeader:u,faderMin:a,faderMax:v,usbHighResolution:_,trsHighResolution:g}},vn=n=>{let e=0;for(let r=0;r<3;r++){const s=r==2?3:127;e|=(n[r]&s)<<7*r}const t=[];for(let r=0;r<16;r++)t.push((e&1<<r)!==0);return t},En=n=>{let e=0;return n.forEach((t,r)=>{t.highResolution&&(e|=1<<r)}),[e&127,e>>7&127,e>>14&3]},Ee=n=>Si[n],Se=(n,e,t)=>{if(n)return n.capabilities[e]?n.capabilities[e]===!0?!0:Oe.gte(t,n.capabilities[e]):!1},ce={sysexMfgId:[125,0,0],requestInfoMsg:31,updateConfigMsg:14,updateDeviceOptionsMsg:13,updateUSBOptionsMessage:12,updateTRSOptionsMessage:11,factoryResetMsg:26},Oi=n=>n[1]==ce.sysexMfgId[0]&&n[2]==ce.sysexMfgId[1]&&n[3]==ce.sysexMfgId[2],Li=(n,e)=>{Ee(n.deviceId).sendShortMessages?xi(n,e):$i(n,e)},$i=(n,e)=>{e.sendSysex(ce.sysexMfgId,[ce.updateConfigMsg,...Be(n)])},xi=(n,e)=>{e.sendSysex(ce.sysexMfgId,[ce.updateDeviceOptionsMsg,...Ri(n)]),e.sendSysex(ce.sysexMfgId,[ce.updateUSBOptionsMessage,...wi(n)]),e.sendSysex(ce.sysexMfgId,[ce.updateTRSOptionsMessage,...Ii(n)])},fr=n=>{n.sendSysex(ce.sysexMfgId,[ce.requestInfoMsg])},Yn=n=>{n.sendSysex(ce.sysexMfgId,[ce.factoryResetMsg])},E=Mn({current:null,controllerMightNeedFactoryReset:!1,editing:null,editMode:!1}),z=Mn({inputs:[],outputs:[],selectedInput:null,selectedOutput:null,webMidiEnabled:!1});let Ve=-1;const Yt=()=>R.inputs.sort(Xn),Xt=()=>R.outputs.sort(Xn),Xn=(n,e)=>{const t=`${n.manufacturer} ${n.name}`,r=`${e.manufacturer} ${e.name}`;return t<r?-1:t>r?1:0},Di=()=>{z.webMidiEnabled=!0,Pi()},Pi=()=>{z.inputs=[...Yt()],z.outputs=[...Xt()],Fe(),R.addListener("connected",()=>{z.inputs=[...Yt()],z.outputs=[...Xt()],Fe()}),R.addListener("disconnected",()=>{z.inputs=[...Yt()],z.outputs=[...Xt()],z.selectedInput=null,z.selectedOutput=null,E.current=null,Fe()}),setInterval(()=>{Fe()},5e3)},Fe=()=>{if(!z.selectedInput&&z.inputs.length>0){const n=z.inputs.find(e=>e.name.match(/.*16n.*/));n&&(z.selectedInput=n)}if(!z.selectedOutput&&z.outputs.length>0){const n=z.outputs.find(e=>e.name.match(/.*16n.*/));n&&(z.selectedOutput=n)}!E.current&&z.selectedInput&&z.selectedOutput&&(Wn(z.selectedInput),Kn(z.selectedInput),er())},ki=n=>{E.current&&E.current.usbControls.forEach(e=>{n.message.channel==e.channel&&n.controller.number==e.cc&&(e.msb=n.rawValue),e.highResolution&&n.message.channel==e.channel&&n.controller.number==e.cc+32&&(e.lsb=n.rawValue),e.highResolution&&e.msb?e.val=(e.msb<<7)+e.lsb:e.val=e.msb})},Wn=n=>{n.addListener("controlchange",ki)},Kn=n=>{n.addListener("sysex",e=>{const t=e.message.data;Oi(t)&&t[4]==15&&(E.current=Ti(t),je("Received config",E.current),Ve=-1,E.controllerMightNeedFactoryReset=!1)}),je("Attached sysex listener to ",n.name)},er=()=>{Ve<0&&(Ve=Date.now()),Date.now()-Ve>8e3&&(E.controllerMightNeedFactoryReset||(E.controllerMightNeedFactoryReset=!0));const n=z.selectedInput,e=z.selectedOutput;n&&e&&(je("Requesting config over "+e.name),je("Hoping to receive on "+n.name),fr(e))};var Ui=G("<span></span>");function Bi(n,e){let t=Re(e,"classList",3,"");var r=Ui();de(()=>ir(r,1,`fas fa-${e.i??""} ${t()??""}`,"svelte-pvbvkq")),S(n,r)}var Gi=G('<div class="button-wrapper svelte-1qu28ag"><button class="svelte-1qu28ag"><!> <!></button></div>');function oe(n,e){he(e,!0);let t=Re(e,"icon",3,""),r=Re(e,"disabled",3,!1);var s=Gi(),i=B(s);i.__click=function(...c){var a;(a=e.onclick)==null||a.apply(this,c)};var o=B(i);{var u=c=>{Bi(c,{get i(){return t()}})};X(o,c=>{t()&&t().trim()!==""&&c(u)})}var l=$(o,2);we(l,()=>e.children),k(i),k(s),de(()=>i.disabled=r()),S(n,s),me()}rr(["click"]);var Fi=G('<span class="upgrade svelte-ykry5x"> <a>Download</a></span>'),Hi=G('<p class="device svelte-ykry5x">Connected: <strong> </strong> running firmware <strong> </strong> <!></p>'),qi=G('<p class="device svelte-ykry5x">No device connected.</p>'),Vi=G('<div class="details svelte-ykry5x"><!></div>');function ji(n,e){he(e,!0);let t=Kt(""),r=Kt(""),s=!1;sr(()=>{if(E.current&&E.current.firmwareVersion&&E.current.deviceId&&!s){s=!0;const l=Ee(E.current.deviceId);l.latestFirmwareVersion&&Oe.gt(l.latestFirmwareVersion,E.current.firmwareVersion)?(Ie(t,`A new version of the ${l.name} firmware (${l.latestFirmwareVersion}) is available.`),Ie(r,l.firmwareUrl||"",!0)):(Ie(t,""),Ie(r,""))}});var i=fe(),o=Y(i);{var u=l=>{var c=Vi(),a=B(c);{var d=v=>{var I=Hi(),h=$(B(I)),A=B(h,!0);k(h);var m=$(h,2),_=B(m,!0);k(m);var g=$(m,2);{var b=N=>{var O=Fi(),D=B(O),M=$(D);k(O),de(()=>{ve(D,`${F(t)??""} `),Te(M,"href",F(r))}),S(N,O)};X(g,N=>{F(t).trim()!=""&&N(b)})}k(I),de(N=>{ve(A,N),ve(_,E.current.firmwareVersion)},[()=>Ee(E.current.deviceId).name]),S(v,I)},f=v=>{var I=qi();S(v,I)};X(a,v=>{E.current?v(d):v(f,!1)})}k(c),S(l,c)};X(o,l=>{z.webMidiEnabled&&l(u)})}S(n,i),me()}var zi=G('<p><label><input type="checkbox"/> <!></label></p>');function He(n,e){he(e,!0);let t=Re(e,"checked",15);var r=zi(),s=B(r),i=B(s);ke(i);var o=$(i,2);{var u=l=>{var c=fe(),a=Y(c);we(a,()=>e.children),S(l,c)};X(o,l=>{e.children&&l(u)})}k(s),k(r),Bn(i,t),S(n,r),me()}var Yi=G("<!> <!>",1),Xi=G(`<hr/> <h3>Fader Minimum/Maximum calibration</h3> <div><label for="faderMin" class="svelte-idpdcv">Fader Minimum raw value</label> <input name="faderMin" type="number" min="0"/></div> <div><label for="faderMax" class="svelte-idpdcv">Fader Maximum raw value</label> <input name="faderMax" type="number" min="0"/></div> <p class="note svelte-idpdcv">You shouldn't touch this unless you are having issues with your faders
      either reaching <code>127</code> before the end of their travel, or not at all.<br/><br/> "Raw" analog values are read from the faders between 0 and 8192. Bring the
      fader maximum down until all faders smoothly travel from 0 to 127 on the debug
      view (bearing in mind there is a small dead zone at either end of a fader).</p>`,1),Wi=G(`<hr/> <h3>I2C Leader/Follower</h3> <select><option>Follower</option><option>Leader</option></select> <p class="note svelte-idpdcv"><strong>Follower</strong> mode is for use with Teletype.</p> <p class="note svelte-idpdcv"><strong>Leader</strong> mode is for use with Ansible, TXo, ER-301. 16n will
      not respond to Teletype when in leader mode.</p> <p class="note svelte-idpdcv">This will not take effect until you restart (disconnect/reconnect) your
      16n.</p> <p class="note small svelte-idpdcv">("Leader" is sometimes also referred to as 'master' mode)</p>`,1),Ki=G("<!> <!> <!> <!> <!>",1);function Ji(n,e){he(e,!0);let t=ge(()=>E.current&&Ee(E.current.deviceId));var r=fe(),s=Y(r);{var i=o=>{var u=Ki(),l=Y(u);{var c=m=>{var _=Yi(),g=Y(_);He(g,{get checked(){return E.editing.ledOn},set checked(N){E.editing.ledOn=N},children:(N,O)=>{K();var D=ee("LED permanently on when powered");S(N,D)},$$slots:{default:!0}});var b=$(g,2);He(b,{get checked(){return E.editing.ledFlash},set checked(N){E.editing.ledFlash=N},children:(N,O)=>{K();var D=ee("LED flash on MIDI activity");S(N,D)},$$slots:{default:!0}}),S(m,_)};X(l,m=>{Se(F(t),"led",E.current.firmwareVersion)&&m(c)})}var a=$(l,2);He(a,{get checked(){return E.editing.controllerFlip},set checked(m){E.editing.controllerFlip=m},children:(m,_)=>{K();var g=ee("Rotate controller 180Âº");S(m,g)},$$slots:{default:!0}});var d=$(a,2);{var f=m=>{He(m,{get checked(){return E.editing.midiThru},set checked(_){E.editing.midiThru=_},children:(_,g)=>{K();var b=ee("Soft MIDI thru (echo MIDI clock/note data sent to USB out of the minijack)");S(_,b)},$$slots:{default:!0}})};X(d,m=>{Oe.gte(E.current.firmwareVersion,"2.1.0")&&m(f)})}var v=$(d,2);{var I=m=>{var _=Xi(),g=$(Y(_),4),b=$(B(g),2);ke(b),Te(b,"max",8191),k(g);var N=$(g,2),O=$(B(N),2);ke(O),Te(O,"max",8191),k(N),K(2),Qt(b,()=>E.editing.faderMin,D=>E.editing.faderMin=D),Qt(O,()=>E.editing.faderMax,D=>E.editing.faderMax=D),S(m,_)};X(v,m=>{Se(F(t),"faderCalibration",E.current.firmwareVersion)&&m(I)})}var h=$(v,2);{var A=m=>{var _=Wi(),g=$(Y(_),4),b=B(g);b.value=b.__value=!1;var N=$(b);N.value=N.__value=!0,k(g),K(8),Un(g,()=>E.editing.i2cLeader,O=>E.editing.i2cLeader=O),S(m,_)};X(h,m=>{Se(F(t),"i2c",E.current.firmwareVersion)&&m(A)})}S(o,u)};X(s,o=>{E.current&&E.editing&&F(t)&&o(i)})}S(n,r),me()}const Qi=(n,e)=>{e(e().highResolution=!e().highResolution,!0)};var Zi=G("<option> </option>"),ea=G('<dt class="hr-title svelte-1fipzis">High Resolution?</dt> <dd class="svelte-1fipzis"><input type="checkbox" class="svelte-1fipzis"/></dd>',1),ta=G('<dl class="config-column svelte-1fipzis"><dt class="index svelte-1fipzis"> </dt> <dt class="no-top-border svelte-1fipzis">Channel</dt> <dd class="svelte-1fipzis"><select class="svelte-1fipzis"></select></dd> <dt class="svelte-1fipzis">CC</dt> <dd class="svelte-1fipzis"><input type="number" min="0" class="svelte-1fipzis"/></dd> <!></dl>');function gn(n,e){he(e,!0);let t=Re(e,"editControl",15),r=ge(()=>t().highResolution?95:127),s=ge(()=>E.editing?Ee(E.editing.deviceId):null),i=ge(()=>F(s)&&E.editing&&Se(F(s),"highResolution",E.editing.firmwareVersion));const o=Array.from({length:16},(_,g)=>g+1),u=_=>{const g=_.target;parseInt(g.value)<0&&t(t().cc=0,!0),parseInt(g.value)>F(r)&&t(t().cc=F(r),!0)},l=()=>{t().cc>F(r)&&t(t().cc=F(r),!0)};var c=ta(),a=B(c),d=B(a,!0);k(a);var f=$(a,4),v=B(f);Pe(v,21,()=>o,De,(_,g)=>{var b=Zi(),N=B(b,!0);k(b);var O={};de(()=>{ve(N,F(g)),O!==(O=F(g))&&(b.value=(b.__value=F(g))??"")}),S(_,b)}),k(v),k(f);var I=$(f,4),h=B(I);ke(h),h.__change=u,k(I);var A=$(I,2);{var m=_=>{var g=ea(),b=Y(g);b.__click=[Qi,t];var N=$(b,2),O=B(N);ke(O),O.__change=l,k(N),mr("blur",O,l),Bn(O,()=>t().highResolution,D=>t(t().highResolution=D,!0)),S(_,g)};X(A,_=>{F(i)&&_(m)})}k(c),de(()=>{ve(d,e.index+1),Te(h,"max",F(r))}),Un(v,()=>t().channel,_=>t(t().channel=_,!0)),mr("blur",h,u),Qt(h,()=>t().cc,_=>t(t().cc=_,!0)),S(n,c),me()}rr(["change","click"]);var bn=Ys(()=>E),ra=G(`<p>"Factory Reset" will reset the configuration of your 16n back to 'default'
  values; primarily, MIDI CCs 32-48, Channel 1, for both TRS and USB MIDI.</p> <p>Note that this will also reset any calibration data or other options you may
  have adjusted on the "Device Options" tab. You will need to repeat this
  configuration after performing a reset.</p> <!>`,1);function na(n,e){he(e,!1);const t="Confirm that you wish to reset your controller configuration to the default values. You will lose any configuration stored on the controller.",r=()=>{z.selectedOutput&&confirm(t)&&(bn(bn().editMode=!1),Yn(z.selectedOutput),setTimeout(()=>{z.selectedOutput&&fr(z.selectedOutput)},50))};xn();var s=ra(),i=$(Y(s),4);oe(i,{icon:"history",onclick:r,$$events:{message(o){Gn.call(this,e,o)}},children:(o,u)=>{K();var l=ee("Reset controller configuration to defaults");S(o,l)},$$slots:{default:!0}}),S(n,s),me()}var sa=G('<div class="subhead svelte-1o2kpty"><h2 class="svelte-1o2kpty"> </h2> <div class="details svelte-1o2kpty"><!></div></div>');function Jn(n,e){var t=sa(),r=B(t),s=B(r,!0);k(r);var i=$(r,2),o=B(i);{var u=l=>{var c=fe(),a=Y(c);we(a,()=>e.children),S(l,c)};X(o,l=>{e.children&&l(u)})}k(i),k(t),de(()=>ve(s,e.title)),S(n,t)}var ia=G("<p>The MIDI standard for a continuous controller sends 7-bit data - 0-127.</p> <p>âHigh resolutionâ CC data can send 14-bit data (0-16384).</p> <p>However: <strong>support for this is very limited</strong>. <em>If</em> you know you need it or can use it, go ahead, itâll work. Both Ableton and Bitwig support this automatically - map a controller to a high-resolution MIDI output and it will automatically realise itâs 14-bit.</p> <p>If you think it sounds cool, but donât know if your instruments or tools support it: you probably want to send standard 7-bit data. <strong>Donât just click high resolution because it sounds better.</strong> Unless you know itâll work, it might have unintended consequences.</p> <h4>How high-resolution CCs work</h4> <p>The 14 bits of data are split into two chunks, MSB/LSB style: one 7-bit chunk for bits 8-14, and one for bits 1-7. The higher significant chunk is sent on continuous controller number <code>x</code>; the lower significant chunk is sent on <code>x+32</code>. For instance, if you set a controller to send high-res data on CC <code>32</code> in the editor above, youâll send the higher chunk on CC <code>32</code> and, simultaneously, the lower chunk on CC <code>64</code>. (This is why you should only use this feature if you think you need it: otherwise, youâre going to be sending extra CCs you might not want.)</p> <h4>Doesnât my device have an ADC with less than 14 bits?</h4> <p>The RP2040 in 16nx devices only has a 12-bit ADC, and so the firmware actually multiples the read analog value by 4 (or left shifts it by 2, really) to get a 14-bit number. So yes, we donât have 14 ârealâ usable bits of data.</p> <p>But: a 12-bit ADC probably doesnât have <em>12</em> usable bits of data, really; one you filter out noise and jitter, you probably are working with 10 usable bits of data (ie: if you /4 or >> 2, you will filter out a lot of unwanted noise).</p> <p>But regardless: 10 usable bits - 0-1023 - is <em>still</em> better than 0-127. So thereâs an advantage to using this, if itâs available to you.</p>",1);function aa(n){var e=ia();K(18),S(n,e)}var oa=G('<details class="svelte-154bcv2"><summary class="svelte-154bcv2">What is High Resolution mode?</summary> <!></details>');function _n(n){var e=oa(),t=$(B(e),2);aa(t),k(e),S(n,e)}var la=G(`<div class="svelte-ryvu2e"><p><strong>Warning:</strong> </p> <p>The MIDI spec only allows for high-resolution CCs for CCs 0-31. <strong>However</strong>, some hardware or software is absolutely fine with
    high-resolution CCs on any channel. Check the documentation for your
    hardware or software; your faderbank configuration may still function
    correctly.</p></div>`);function Nn(n,e){he(e,!1);let t=Re(e,"type",8);xn();var r=la(),s=B(r),i=$(B(s));k(s),K(2),k(r),de(o=>ve(i,` You have an one or more out-of-spec ${o??""} CC assignments.`),[()=>(Os(t()),nr(()=>t().toLocaleUpperCase()))],Rn),S(n,r),me()}const hr={};var ca=G('<div class="tabs"><!></div>');function Qn(n,e){he(e,!0);const t=[],r=[],s=pr(null),i=pr(null);Ls(hr,{registerTab:l=>{t.push(l),s.update(c=>c||l),vr(()=>{const c=t.indexOf(l);t.splice(c,1),s.update(a=>a===l?t[c]||t[t.length-1]:a)})},registerPanel:l=>{r.push(l),i.update(c=>c||l),vr(()=>{const c=r.indexOf(l);r.splice(c,1),i.update(a=>a===l?r[c]||r[r.length-1]:a)})},selectTab:l=>{const c=t.indexOf(l);s.set(l),i.set(r[c])},selectedTab:s,selectedPanel:i});var o=ca(),u=B(o);we(u,()=>e.children??Tn),k(o),S(n,o),me()}var ua=G('<div class="tab-list svelte-1c799zm"><!></div>');function Zn(n,e){var t=ua(),r=B(t);{var s=i=>{var o=fe(),u=Y(o);we(u,()=>e.children),S(i,o)};X(r,i=>{e.children&&i(s)})}k(t),S(n,t)}function Ae(n,e){he(e,!0);const[t,r]=$n(),s=()=>Ln(u,"$selectedPanel",t),i={},{registerPanel:o,selectedPanel:u}=On(hr);o(i);var l=fe(),c=Y(l);{var a=d=>{var f=fe(),v=Y(f);we(v,()=>e.children),S(d,f)};X(c,d=>{e.children&&s()===i&&d(a)})}S(n,l),me(),r()}var da=(n,e,t)=>e(t),fa=G("<button><!></button>");function Me(n,e){he(e,!0);const[t,r]=$n(),s=()=>Ln(l,"$selectedTab",t),i={},{registerTab:o,selectTab:u,selectedTab:l}=On(hr);o(i);var c=fa();c.__click=[da,u,i];let a;var d=B(c);we(d,()=>e.children??Tn),k(c),de(f=>a=ir(c,1,"svelte-1rryekj",null,a,f),[()=>({selected:s()===i})]),S(n,c),me(),r()}rr(["click"]);const ha=(n,e)=>{const t=document.createElement("input");t.type="file",t.id="uploadedConfig",t.addEventListener("change",r=>{const s=r.target.files;if(s&&s.length>0){const i=s[0],o=new FileReader;o.addEventListener("load",()=>{const u=JSON.parse(o.result),l=Ai(n,u);if(l){alert(l);return}else E.editing=Mi(n,u),zn(n,e)?alert("Imported configuration is identical to currently loaded configuration; no changes to upload."):alert("New configuration imported. Choose 'update controller' to import, or 'Cancel' to abort")}),o.readAsText(i)}}),t.click(),t.remove()},ma=n=>{const e="data:text/json;charset=utf-8,"+encodeURIComponent(Ci(n)),t=document.createElement("a");t.href=e,t.download=`${Ee(n.deviceId).name}_controller_config.json`,document.body.appendChild(t),t.click(),t.remove()};var pa=G("<!> <!> <!>",1),va=G("<!> <!> <!> <!>",1),Ea=G("<!><br/> <!>",1),ga=G("<!> <!>",1),ba=G('<div id="controls" class="svelte-1xvmucy"></div> <div id="extra-controls" class="svelte-1xvmucy"><div class="left svelte-1xvmucy"><!><br/> <!></div> <div class="right svelte-1xvmucy"><!></div></div> <!>',1),_a=G("<!><br/> <!>",1),Na=G("<!> <!>",1),ya=G('<div id="controls" class="svelte-1xvmucy"></div> <div id="extra-controls" class="svelte-1xvmucy"><div class="left svelte-1xvmucy"><!><br/> <!></div> <div class="right svelte-1xvmucy"><!></div></div> <!>',1),Sa=G("<!> <!> <!> <!> <!>",1),Ra=G("<!> <!>",1);function wa(n,e){he(e,!0);let t=Kt(!1);sr(()=>{E.editing&&E.current&&Ie(t,!zn(E.editing,E.current))});const r=()=>{E.editMode=!1},s=()=>{E.editing&&E.current&&ha(E.editing,E.current)},i=()=>{if(!E.editing){console.error("No edit configuration found");return}if(!z.selectedOutput){console.error("No selected MIDI output found");return}Be(E.editing),Li(E.editing,z.selectedOutput),E.current=structuredClone(Jt(E.editing)),E.editMode=!1,fr(z.selectedOutput)};let o=ge(()=>E.current?Ee(E.current.deviceId):null),u=ge(()=>E.editing&&F(o)&&Se(F(o),"highResolution",E.editing.firmwareVersion)),l=ge(()=>E.editing&&E.editing.usbControls.some(m=>m.highResolution&&m.cc>31)),c=ge(()=>E.editing&&E.editing.trsControls.some(m=>m.highResolution&&m.cc>31));const a=(m,_)=>{var g,b;_=="usb"&&((g=E.editing)==null||g.usbControls.forEach(N=>{N.highResolution=m})),_=="trs"&&((b=E.editing)==null||b.trsControls.forEach(N=>{N.highResolution=m}))},d=m=>{if(!E.editing){console.error("No configuration to update");return}if(m=="usb"){const _=E.editing.usbControls[0].channel;for(let g=1;g<E.editing.usbControls.length;g++)E.editing.usbControls[g].channel=_}if(m=="trs"){const _=E.editing.trsControls[0].channel;for(let g=1;g<E.editing.trsControls.length;g++)E.editing.usbControls[g].channel=_}},f=m=>{if(!E.editing){console.error("No configuration to update");return}if(m=="usb"){const _=E.editing.usbControls[0].cc;for(let g=1;g<E.editing.usbControls.length;g++){let b=_+g,N=E.editing.usbControls[g].highResolution?95:127;E.editing.usbControls[g].cc=b>N?N:b}}if(m=="trs"){const _=E.editing.trsControls[0].cc;for(let g=1;g<E.editing.trsControls.length;g++){let b=_+g,N=E.editing.trsControls[g].highResolution?95:127;E.editing.usbControls[g].cc=b>N?N:b}}};var v=Ra(),I=Y(v);Jn(I,{title:"Edit Configuration",children:(m,_)=>{var g=pa(),b=Y(g);oe(b,{icon:"times",onclick:r,children:(M,J)=>{K();var te=ee("Cancel");S(M,te)},$$slots:{default:!0}});var N=$(b,2);oe(N,{icon:"file-import",onclick:s,children:(M,J)=>{K();var te=ee("Import config");S(M,te)},$$slots:{default:!0}});var O=$(N,2);const D=ge(()=>!F(t));oe(O,{icon:"download",onclick:i,get disabled(){return F(D)},children:(M,J)=>{K();var te=ee("Update controller");S(M,te)},$$slots:{default:!0}}),S(m,g)}});var h=$(I,2);{var A=m=>{Qn(m,{children:(_,g)=>{var b=Sa(),N=Y(b);Zn(N,{children:(Z,re)=>{var ne=va(),w=Y(ne);Me(w,{children:(T,U)=>{K();var V=ee("USB");S(T,V)},$$slots:{default:!0}});var y=$(w,2);Me(y,{children:(T,U)=>{K();var V=ee("TRS Jack");S(T,V)},$$slots:{default:!0}});var x=$(y,2);Me(x,{children:(T,U)=>{K();var V=ee("Device Options");S(T,V)},$$slots:{default:!0}});var L=$(x,2);{var P=T=>{Me(T,{children:(U,V)=>{K();var H=ee("Factory Reset");S(U,H)},$$slots:{default:!0}})};X(L,T=>{E.current&&Oe.gte(E.current.firmwareVersion,"2.1.0")&&T(P)})}S(Z,ne)}});var O=$(N,2);Ae(O,{children:(Z,re)=>{var ne=ba(),w=Y(ne);Pe(w,21,()=>E.editing.usbControls,De,(q,j,W)=>{var pe=fe(),se=Y(pe);{var ie=ae=>{gn(ae,{get editControl(){return F(j)},index:W})};X(se,ae=>{F(o)&&W<F(o).controlCount&&ae(ie)})}S(q,pe)}),k(w);var y=$(w,2),x=B(y),L=B(x);oe(L,{onclick:()=>d("usb"),children:(q,j)=>{K();var W=ee("Set all channels to that of channel 1");S(q,W)},$$slots:{default:!0}});var P=$(L,3);oe(P,{onclick:()=>f("usb"),children:(q,j)=>{K();var W=ee("Set CCs sequentially, starting at channel 1");S(q,W)},$$slots:{default:!0}}),k(x);var T=$(x,2),U=B(T);{var V=q=>{var j=Ea(),W=Y(j);oe(W,{onclick:()=>a(!0,"usb"),children:(se,ie)=>{K();var ae=ee("Set all USB channels to high-resolution (14 bit)");S(se,ae)},$$slots:{default:!0}});var pe=$(W,3);oe(pe,{onclick:()=>a(!1,"usb"),children:(se,ie)=>{K();var ae=ee("Set all USB channels to regular-resolution (7 bit)");S(se,ae)},$$slots:{default:!0}}),S(q,j)};X(U,q=>{F(u)&&q(V)})}k(T),k(y);var H=$(y,2);{var Q=q=>{var j=ga(),W=Y(j);{var pe=ie=>{Nn(ie,{type:"usb"})};X(W,ie=>{F(l)&&ie(pe)})}var se=$(W,2);_n(se),S(q,j)};X(H,q=>{F(u)&&q(Q)})}S(Z,ne)},$$slots:{default:!0}});var D=$(O,2);Ae(D,{children:(Z,re)=>{var ne=ya(),w=Y(ne);Pe(w,21,()=>E.editing.trsControls,De,(q,j,W)=>{var pe=fe(),se=Y(pe);{var ie=ae=>{gn(ae,{get editControl(){return F(j)},index:W})};X(se,ae=>{F(o)&&W<F(o).controlCount&&ae(ie)})}S(q,pe)}),k(w);var y=$(w,2),x=B(y),L=B(x);oe(L,{onclick:()=>d("trs"),children:(q,j)=>{K();var W=ee("Set all channels to that of channel 1");S(q,W)},$$slots:{default:!0}});var P=$(L,3);oe(P,{onclick:()=>f("trs"),children:(q,j)=>{K();var W=ee("Set CCs sequentially, starting at channel 1");S(q,W)},$$slots:{default:!0}}),k(x);var T=$(x,2),U=B(T);{var V=q=>{var j=_a(),W=Y(j);oe(W,{onclick:()=>a(!0,"trs"),children:(se,ie)=>{K();var ae=ee("Set all TRS channels to high-resolution (14 bit)");S(se,ae)},$$slots:{default:!0}});var pe=$(W,3);oe(pe,{onclick:()=>a(!1,"trs"),children:(se,ie)=>{K();var ae=ee("Set all TRS channels to regular-resolution (7 bit)");S(se,ae)},$$slots:{default:!0}}),S(q,j)};X(U,q=>{F(u)&&q(V)})}k(T),k(y);var H=$(y,2);{var Q=q=>{var j=Na(),W=Y(j);{var pe=ie=>{Nn(ie,{type:"trs"})};X(W,ie=>{F(c)&&ie(pe)})}var se=$(W,2);_n(se),S(q,j)};X(H,q=>{F(u)&&q(Q)})}S(Z,ne)},$$slots:{default:!0}});var M=$(D,2);Ae(M,{children:(Z,re)=>{Ji(Z,{})},$$slots:{default:!0}});var J=$(M,2);{var te=Z=>{Ae(Z,{children:(re,ne)=>{na(re,{$$events:{message(w){Gn.call(this,e,w)}}})},$$slots:{default:!0}})};X(J,Z=>{E.current&&Oe.gte(E.current.firmwareVersion,"2.1.0")&&Z(te)})}S(_,b)},$$slots:{default:!0}})};X(h,m=>{E.editing&&m(A)})}S(n,v),me()}var Ia=G(`<span class="hires svelte-1ifkqf8" title="This channel is in high-resolution mode, meaning it also uses a 'shadow' CC, 32 above the main CC"> </span>`),Ca=G("<span> </span>"),Aa=G('<dt class="svelte-1ifkqf8">Value</dt> <dd class="display svelte-1ifkqf8"><div class="inner svelte-1ifkqf8"><!> <div class="bar svelte-1ifkqf8"></div></div></dd>',1),Ma=G('<dl class="config-column svelte-1ifkqf8"><dt class="index svelte-1ifkqf8"> </dt> <dt class="svelte-1ifkqf8">Channel</dt> <dd class="svelte-1ifkqf8"> </dd> <dt class="svelte-1ifkqf8">CC</dt> <dd class="svelte-1ifkqf8"> <!></dd> <!></dl>');function yn(n,e){he(e,!0);let t=Re(e,"disableValue",3,!1),r=ge(()=>e.control.highResolution?(e.control.val||0)>>7:e.control.val),s=ge(()=>e.control.highResolution?3456:27);var i=Ma(),o=B(i),u=B(o,!0);k(o);var l=$(o,4),c=B(l,!0);k(l);var a=$(l,4),d=B(a),f=$(d);{var v=A=>{var m=Ia(),_=B(m);k(m),de(()=>ve(_,`& ${e.control.cc+32}`)),S(A,m)};X(f,A=>{e.control.highResolution&&A(v)})}k(a);var I=$(a,2);{var h=A=>{var m=Aa(),_=$(Y(m),2),g=B(_),b=B(g);{var N=D=>{var M=Ca(),J=B(M,!0);k(M),de(()=>{ir(M,1,Us({controlval:!0,highresolution:e.control.highResolution,lowvalue:e.control.val<F(s)}),"svelte-1ifkqf8"),ve(J,e.control.val)}),S(D,M)};X(b,D=>{e.control.val!==void 0&&D(N)})}var O=$(b,2);k(g),k(_),de(()=>Fs(O,`height: ${F(r)??""}px`)),S(A,m)};X(I,A=>{t()||A(h)})}k(i),de(()=>{ve(u,e.index+1),ve(c,e.control.channel),ve(d,`${e.control.cc??""} `)}),S(n,i),me()}var Ta=G("<!> <!>",1),Oa=G("<!> <!>",1),La=G('<div id="controls" class="svelte-13ul1lp"></div>'),$a=G('<div id="controls" class="svelte-13ul1lp"></div> <p>There is no realtime preview of the TRS outputs.</p>',1),xa=G("<!> <!> <!>",1),Da=G("<!> <!>",1);function Pa(n,e){he(e,!0);const t=()=>{E.current&&(ma(Jt(E.current)),console.log("Export complete"))},r=()=>{E.editMode=!0,E.current&&(E.editing=structuredClone(Jt(E.current)))};let s=ge(()=>E.current?Ee(E.current.deviceId):null);var i=fe(),o=Y(i);{var u=l=>{var c=Da(),a=Y(c);Jn(a,{title:"Current Configuration",children:(f,v)=>{var I=Ta(),h=Y(I);oe(h,{icon:"file-export",onclick:t,children:(m,_)=>{K();var g=ee("Export current config");S(m,g)},$$slots:{default:!0}});var A=$(h,2);oe(A,{icon:"pencil-alt",onclick:r,children:(m,_)=>{K();var g=ee("Edit config");S(m,g)},$$slots:{default:!0}}),S(f,I)}});var d=$(a,2);Qn(d,{children:(f,v)=>{var I=xa(),h=Y(I);Zn(h,{children:(_,g)=>{var b=Oa(),N=Y(b);Me(N,{children:(D,M)=>{K();var J=ee("USB");S(D,J)},$$slots:{default:!0}});var O=$(N,2);Me(O,{children:(D,M)=>{K();var J=ee("TRS Jack");S(D,J)},$$slots:{default:!0}}),S(_,b)}});var A=$(h,2);Ae(A,{children:(_,g)=>{var b=La();Pe(b,21,()=>E.current.usbControls,De,(N,O,D)=>{var M=fe(),J=Y(M);{var te=Z=>{yn(Z,{get control(){return F(O)},index:D})};X(J,Z=>{F(s)&&D<F(s).controlCount&&Z(te)})}S(N,M)}),k(b),S(_,b)},$$slots:{default:!0}});var m=$(A,2);Ae(m,{children:(_,g)=>{var b=$a(),N=Y(b);Pe(N,21,()=>E.current.trsControls,De,(O,D,M)=>{var J=fe(),te=Y(J);{var Z=re=>{yn(re,{get control(){return F(D)},index:M,disableValue:!0})};X(te,re=>{F(s)&&M<F(s).controlCount&&re(Z)})}S(O,J)}),k(N),K(2),S(_,b)},$$slots:{default:!0}}),S(f,I)},$$slots:{default:!0}}),S(l,c)};X(o,l=>{E.current&&l(u)})}S(n,i),me()}var ka=G(`<div class="notice svelte-kpoxps"><p>It looks like a 16n is trying to connect, but may have a corrupt
              memory.</p> <p><!></p></div>`),Ua=G("<!> <p></p>",1),Ba=G('<p class="notice svelte-kpoxps">Connect a controller via USB.</p>'),Ga=G(`<p class="notice svelte-kpoxps">WebMIDI could not be enabled. Please use a web browser that supports
        WebMIDI, such as Google Chrome.</p>`),Fa=G('<main class="svelte-kpoxps"><div id="head" class="svelte-kpoxps"><h1 class="svelte-kpoxps">16n configuration tool</h1> <!></div> <div id="inner" class="svelte-kpoxps"><!></div> <div id="foot" class="svelte-kpoxps"><div class="foot-left svelte-kpoxps"> </div></div></main>');function Ya(n,e){he(e,!0);const t="2.1.2",r=!!navigator.requestMIDIAccess;ts(()=>{r&&R.enable({sysex:!0}).then(Di).catch(h=>alert(h))}),sr(()=>{z.selectedInput&&(z.inputs.forEach(h=>{h.removeListener()}),Wn(z.selectedInput),Kn(z.selectedInput),E.current=null,er()),z.selectedOutput&&(E.current=null,er())});const s=()=>{z.selectedOutput&&Yn(z.selectedOutput)};var i=Fa(),o=B(i),u=$(B(o),2);ji(u,{}),k(o);var l=$(o,2),c=B(l);{var a=h=>{var A=fe(),m=Y(A);{var _=b=>{var N=fe(),O=Y(N);{var D=J=>{var te=ka(),Z=$(B(te),2),re=B(Z);oe(re,{onclick:s,children:(ne,w)=>{K();var y=ee("Click to reset your 16n's EEPROM to factory defaults");S(ne,y)},$$slots:{default:!0}}),k(Z),k(te),S(J,te)},M=J=>{var te=Ua(),Z=Y(te);{var re=w=>{wa(w,{})},ne=w=>{Pa(w,{})};X(Z,w=>{E.editMode?w(re):w(ne,!1)})}K(2),S(J,te)};X(O,J=>{E.controllerMightNeedFactoryReset&&Oe.gte(E.current.firmwareVersion,"2.1.0")?J(D):J(M,!1)})}S(b,N)},g=b=>{var N=Ba();S(b,N)};X(m,b=>{E.current?b(_):b(g,!1)})}S(h,A)},d=h=>{var A=Ga();S(h,A)};X(c,h=>{z.webMidiEnabled?h(a):h(d,!1)})}k(l);var f=$(l,2),v=B(f),I=B(v);k(v),k(f),k(i),de(()=>ve(I,`16n Editor v${t}`)),S(n,i),me()}export{Ya as component};
